{"version":3,"sources":["app/components/jaipur/camel_card.png","app/components/jaipur/cloth_card.png","app/components/jaipur/cover_card.png","app/components/jaipur/diamond_card.png","app/components/jaipur/gold_card.png","app/components/jaipur/leather_card.png","app/components/jaipur/silver_card.png","app/components/jaipur/spice_card.png","app/components/jaipur/coin.png","app/scenes/Home/styles.tsx","app/config/constants.tsx","app/components/Button.tsx","app/scenes/Home/index.tsx","app/components/jaipur/styles.tsx","app/components/jaipur/utils.tsx","app/components/jaipur/JaipurHand.tsx","app/components/jaipur/renderBoardMat.tsx","app/components/jaipur/JaipurBoard.tsx","app/components/jaipur/JaipurScreen.tsx","app/components/codenames/CodenamesScreen.tsx","app/components/splendor/SplendorBoard.tsx","app/components/splendor/SplendorHand.tsx","app/components/splendor/SplendorScreen.tsx","app/scenes/GameScreen/GameScreenImpl.tsx","app/scenes/GameScreen/index.tsx","App.tsx","web-build/register-service-worker.js","app/components/jaipur/bonus_3_token.png","app/components/jaipur/bonus_4_token.png","app/components/jaipur/bonus_5_token.png","app/components/jaipur/camel_token.png","app/components/jaipur/cloth_token.png","app/components/jaipur/diamond_token.png","app/components/jaipur/gold_token.png","app/components/jaipur/leather_token.png","app/components/jaipur/seal_of_excellence.png","app/components/jaipur/silver_token.png","app/components/jaipur/spice_token.png","app/components/jaipur/camel-char.png","app/components/codenames/assets/bystander.jpg","app/components/codenames/assets/agent-red.jpg","app/components/codenames/assets/agent-blue.jpg","app/components/codenames/assets/assasin.jpg","app/components/splendor/black_card1.png","app/components/splendor/blue_card1.png","app/components/splendor/green_card1.png","app/components/splendor/red_card1.png","app/components/splendor/white_card1.png","app/components/splendor/black_gem.png","app/components/splendor/blue_gem.png","app/components/splendor/green_gem.png","app/components/splendor/red_gem.png","app/components/splendor/white_gem.png","app/components/splendor/gold_gem.png","app/components/splendor/black_cost.png","app/components/splendor/blue_cost.png","app/components/splendor/green_cost.png","app/components/splendor/red_cost.png","app/components/splendor/white_cost.png","app/components/splendor/back_card1.png","app/components/splendor/back_card2.png","app/components/splendor/back_card3.png","app/components/splendor/noble1.jpg","app/components/splendor/noble2.jpg","app/components/splendor/noble3.jpg","app/components/splendor/noble4.jpg","app/components/splendor/noble5.jpg","app/components/splendor/noble6.jpg","app/components/splendor/noble7.jpg","app/components/splendor/noble8.jpg","app/components/splendor/noble9.jpg","app/components/splendor/noble10.jpg"],"names":["module","exports","styles","StyleSheet","create","container","margin","input","marginTop","marginBottom","height","borderColor","borderWidth","backgroundColor","separator","marginVertical","borderBottomColor","borderBottomWidth","hairlineWidth","SERVER_URI","Button","props","TouchableOpacity","disabled","onPress","style","flex","flexDirection","alignItems","borderRadius","Text","color","fontWeight","fontSize","textAlign","padding","title","Home","state","playerName","gameCode","selectedGame","password","SafeAreaView","View","TextInput","value","editable","onChangeText","setState","this","autoCorrect","textContentType","autoCapitalize","autoCompleteType","Picker","selectedValue","onValueChange","itemValue","itemIndex","Item","label","navigation","navigate","gameName","React","Component","WIDTH","scale_pct","undefined","HEIGHT","MIN_WIDTH_HEIGHT","Math","min","Dimensions","get","width","RANGE","lo","hi","len","Array","fill","map","_","i","mat","mat_strips","position","mat_strip_circle","round","mat_card","paddingHorizontal","paddingTop","paddingBottom","mat_discard_pile","textAlignVertical","mat_card_glow","shadowColor","shadowRadius","shadowOpacity","mat_grey_cover","right","top","mat_goods_token_track","mat_bonus_token_track","card","shadowOffset","token","overflow","buttonPanel","left","justifyContent","alignContent","goodsTokenTrack","bottom","bonusTokenTrack","Card","cardTypeToImage","require","rootProps","isSelectable","children","flip","transform","rotateX","rotateY","ImageBackground","source","type","count","textShadowRadius","textShadowColor","selected","lineHeight","Coin","Token","tokenTypeToImage","rotateZ","JaipurHand","hand","handIsSelected","displayText","ScreenOrientation","lockAsync","OrientationLock","LANDSCAPE","unlockAsync","onAction","index","isSelected","Image","resizeMode","renderCard","marginHorizontal","ScrollView","horizontal","renderHand","BoardMapStrip","BoardMapStripCircle","BoardMatCard","glow","BoardCamel","opacity","BoardGoodsTokenTrack","BoardBonusTokenTrack","JaipurBoard","goodsTokenTrackTop","goodsTokenTrackBottom","bonusTokenTrackTop","bonusTokenTrackBottom","playerStates","sealsOfExcellence","camels","hasCamelToken","rupees","goodsTokens","diamond","gold","silver","cloth","spice","leather","bonusTokens","bonus_3","bonus_4","bonus_5","market","marketIsSelected","marketIsSelectable","topDiscard","drawPileHasCards","camelToken","currentPlayerIndex","buttons","players","renderBoardMat","onBack","j","playerIndex","action","length","getButton","JaipurScreen","board","createRef","content","current","updateBoard","updateHand","ref","CodenamesScreen","red","redCodemaster","blue","blueCodemaster","playerNameDisplay","status","renderPlayerList","team","teamName","codemaster","paddingVertical","scaleWidth","scaleHeight","scale","scaledSize","size","ceil","AspectView","useState","layout","setLayout","flatten","aspectRatio","push","hp","onLayout","nativeEvent","console","log","row","rowIndex","cell","colIndex","kind","wp","marginLeft","fontStyle","borderBottomLeftRadius","borderBottomRightRadius","enabled","renderPlayerSelection","renderBoard","colorToCardImage","colorToGemImage","colorToCostImage","backToCardImage","level","cardHeight","cardContents","paddingLeft","textShadowOffset","prestige","marginRight","cost","Object","entries","filter","val","white","green","black","resizeMethod","coinHeight","imageStyle","Noble","nobleIndexToNobleImage","nobleIndex","PlayerArea","areaWidth","isTurn","rotate","side","name","coins","coinsSelectable","onCoinPress","cards","reservedCards","direction","SplendorBoard","faceupCards","pilesSelectable","pilesVisible","nobles","noble","SplendorHand","heightPercentageToDP","SplendorScreen","GameScreenImpl","a","async","socket","emit","screen","socketIOClient","query","on","keys","updateScreen","close","Impl","GameScreen","route","params","goBack","disableYellowBox","RootStack","createStackNavigator","App","NavigationContainer","Navigator","headerMode","Screen","component","options","headerTitle","headerShown","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.682cd160.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camel_card.a1e5c2c9.png\";","module.exports = __webpack_public_path__ + \"static/media/cloth_card.0d2307d0.png\";","module.exports = __webpack_public_path__ + \"static/media/cover_card.3f00f8c9.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond_card.04b067c8.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_card.f45f8f0b.png\";","module.exports = __webpack_public_path__ + \"static/media/leather_card.a9ca0b3b.png\";","module.exports = __webpack_public_path__ + \"static/media/silver_card.d1251adf.png\";","module.exports = __webpack_public_path__ + \"static/media/spice_card.5d184b27.png\";","module.exports = __webpack_public_path__ + \"static/media/coin.f17a00ff.png\";","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        margin: 10,\n    },\n    input: {\n        marginTop: 5,\n        marginBottom: 8,\n        height: 40,\n        borderColor: '#7a42f4',\n        borderWidth: 1,\n        backgroundColor: 'white',\n    },\n    separator: {\n        marginVertical: 8,\n        borderBottomColor: '#737373',\n        borderBottomWidth: StyleSheet.hairlineWidth,\n    },\n});\n\nexport default styles;","// export const SERVER_URI = \"http://localhost:3000\";\nexport const SERVER_URI = \"https://all-aboard-server.amolbhave.com\";\n","import React from 'react';\nimport { StyleProp, ViewStyle, View, Text, TouchableOpacity, GestureResponderEvent } from \"react-native\";\n\nconst Button: React.FunctionComponent<{\n    flip?: boolean,\n    title: string,\n    disabled?: boolean,\n    onPress?: (event: GestureResponderEvent) => void,\n    style?: StyleProp<ViewStyle>,\n}> = (props) => <TouchableOpacity\n    disabled={props.disabled}\n    onPress={props.onPress}\n    style={[{\n        backgroundColor: props.disabled ? \"grey\" : \"#7a42f4\",\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        margin: 5,\n        borderRadius: 5,\n        borderWidth: 3,\n    }, props.style]}\n>\n    <Text style={{\n        flex: 1,\n        color: \"white\",\n        fontWeight: \"500\",\n        fontSize: 19,\n        textAlign: \"center\",\n        padding: 4,\n    }}>\n        {props.title}\n    </Text>\n</TouchableOpacity>;\n\nexport default Button;\n","import React from 'react';\nimport { TextInput, SafeAreaView, View, Picker, Text } from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport { RootStackParamList } from '../../../App';\nimport styles from './styles';\nimport { SERVER_URI } from \"../../config/constants\";\nimport Button from \"../../components/Button\";\n\ntype HomeSceneNavigationProp = StackNavigationProp<RootStackParamList, 'Home'>;\ntype Props = { navigation: HomeSceneNavigationProp; };\n\ntype State = {\n    playerName: string;\n    gameCode: string;\n    selectedGame: string;\n    password: string;\n};\n\nexport default class Home extends React.Component<Props, State> {\n    constructor(props: Readonly<Props>) {\n        super(props);\n\n        this.state = {\n            playerName: \"\",\n            gameCode: \"\",\n            selectedGame: \"\",\n            password: \"\",\n        };\n    }\n\n    render() {\n        return (\n            <SafeAreaView style={styles.container}>\n                <KeyboardAwareScrollView>\n                    <View>\n                        <Text>Server Address</Text>\n                        <TextInput value={SERVER_URI} style={styles.input} editable={false} />\n                    </View>\n                    <View>\n                        <Text>Server Password</Text>\n                        <TextInput\n                            onChangeText={password => this.setState({ password })}\n                            value={this.state.password}\n                            style={styles.input}\n                            autoCorrect={false}\n                            textContentType=\"none\"\n                            autoCapitalize=\"none\"\n                            autoCompleteType=\"off\"\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Text>Game</Text>\n                        <Picker\n                            selectedValue={this.state.selectedGame}\n                            onValueChange={(itemValue, itemIndex) => this.setState({ selectedGame: itemValue })}\n                            style={{ marginTop: 5, marginBottom: 8 }}\n                        >\n                            <Picker.Item label=\"Jaipur\" value=\"jaipur\" />\n                            <Picker.Item label=\"Splendor\" value=\"splendor\" />\n                            <Picker.Item label=\"Codenames\" value=\"codenames\" />\n                        </Picker>\n                    </View>\n                    <View>\n                        <Text>Game Code</Text>\n                        <TextInput\n                            onChangeText={gameCode => this.setState({ gameCode })}\n                            value={this.state.gameCode}\n                            style={styles.input}\n                            autoCorrect={false}\n                            textContentType=\"none\"\n                            autoCapitalize=\"none\"\n                            autoCompleteType=\"off\"\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Button\n                            title=\"Board View\"\n                            disabled={this.state.gameCode === \"\"}\n                            onPress={() => this.props.navigation.navigate('GameScreen', { playerName: 'board', gameName: this.state.selectedGame, gameCode: this.state.gameCode, password: this.state.password })}\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Text>Player Name</Text>\n                        <TextInput\n                            onChangeText={playerName => this.setState({ playerName })}\n                            value={this.state.playerName}\n                            style={styles.input}\n                        />\n                        <Button\n                            title=\"Player View\"\n                            disabled={this.state.playerName === \"\" || this.state.playerName === \"board\" || this.state.gameCode === \"\"}\n                            onPress={() => this.props.navigation.navigate('GameScreen', { playerName: this.state.playerName, gameName: this.state.selectedGame, gameCode: this.state.gameCode, password: this.state.password })}\n                        />\n                    </View>\n                </KeyboardAwareScrollView>\n            </SafeAreaView>);\n    }\n}\n","// @ts-ignore\nimport { StyleSheet, Dimensions, useWindowDimensions } from 'react-native';\n\nexport function WIDTH(scale_pct?: number) {\n    if (scale_pct === null || scale_pct === undefined) { return undefined; }\n    return scale_pct + \"%\";\n    // return useWindowDimensions().width * scale_pct / 100;\n}\nexport function HEIGHT(scale_pct?: number) {\n    if (scale_pct === null || scale_pct === undefined) { return undefined; }\n    return scale_pct + \"%\";\n    // return useWindowDimensions().height * scale_pct / 100;\n}\nexport function MIN_WIDTH_HEIGHT(scale_pct?: number) {\n    return Math.min(Dimensions.get('window').width, Dimensions.get('window').height) * scale_pct / 100;\n    // return Math.min(useWindowDimensions().height, useWindowDimensions().width) * scale_pct / 100;\n}\n\nexport function RANGE(lo: number, hi: number, len: number) {\n    return new Array<number>(len).fill(null).map((_, i) => lo + i * (hi - lo) / (len - 1));\n}\n\nconst styles = StyleSheet.create({\n    mat: {\n        flex: 1,\n        backgroundColor: \"#5aa57c\",\n    },\n    mat_strips: {\n        backgroundColor: \"#458779\",\n        height: \"4%\",\n        position: \"absolute\",\n    },\n    mat_strip_circle: {\n        backgroundColor: \"#458779\",\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\n        width: Dimensions.get('window').width * 0.07,\n        height: Dimensions.get('window').width * 0.07,\n        position: \"absolute\",\n    },\n    mat_card: {\n        position: \"absolute\",\n        backgroundColor: \"#4ca68a\",\n        borderColor: \"#448c72\",\n        borderWidth: 3,\n        borderRadius: 15,\n        width: \"10%\",\n        height: \"20%\",\n        paddingHorizontal: \"5%\",\n        paddingTop: \"5%\",\n        paddingBottom: \"2%\",\n    },\n    mat_discard_pile: {\n        position: \"relative\",\n        backgroundColor: \"rgba(89,90,79,0.5)\",\n        flex: 1,\n        borderRadius: 15,\n        textAlign: \"center\",\n        textAlignVertical: \"center\",\n    },\n    mat_card_glow: {\n        shadowColor: \"gold\",\n        shadowRadius: 15,\n        shadowOpacity: 0.6\n    },\n    mat_grey_cover: {\n        backgroundColor: \"#595a4f\",\n        right: \"2%\",\n        width: \"11%\",\n        height: \"65%\",\n        top: \"20%\",\n        position: \"absolute\",\n    },\n    mat_goods_token_track: {\n        position: \"absolute\",\n        backgroundColor: \"#5aa57c\",\n        borderColor: \"#448c72\",\n        borderWidth: 5,\n        right: \"10%\",\n        height: Dimensions.get('window').width * 0.06,\n        width: \"17%\",\n        borderRadius: Math.round(Dimensions.get('window').height) * 0.1 / 2,\n    },\n    mat_bonus_token_track: {\n        position: \"absolute\",\n        backgroundColor: \"black\",\n        borderColor: \"gold\",\n        borderWidth: 3,\n        right: \"3%\",\n        width: Dimensions.get('window').width * 0.06,\n        height: Dimensions.get('window').width * 0.06,\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\n    },\n    card: {\n        position: \"absolute\",\n        width: \"10%\",\n        height: \"20%\",\n        // width: Dimensions.get('window').width * 0.1,\n        // height: Dimensions.get('window').width * 0.2,\n        borderWidth: 1,\n        borderRadius: 15,\n        shadowColor: \"black\",\n        shadowRadius: 3,\n        shadowOffset: { width: 0, height: 0 },\n        shadowOpacity: 0.6,\n        backgroundColor: \"white\",\n        padding: \"6%\",\n        paddingTop: \"7%\",\n        paddingBottom: \"3%\",\n    },\n    token: {\n        borderWidth: 1,\n        borderColor: \"black\",\n        shadowColor: \"black\",\n        shadowRadius: 3,\n        shadowOffset: { width: 0, height: 0 },\n        shadowOpacity: 1,\n        overflow: \"hidden\",\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\n        width: Dimensions.get('window').width * 0.06,\n        height: Dimensions.get('window').width * 0.06,\n        position: \"absolute\",\n    },\n    buttonPanel: {\n        position: \"absolute\",\n        left: \"17%\",\n        height: \"4.5%\",\n        width: \"54%\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n    },\n    goodsTokenTrack: {\n        top: 20,\n        bottom: 76.7,\n    },\n    bonusTokenTrack: {\n        top: 30,\n        bottom: 67,\n    }\n});\n\nexport default styles;\n","import React from 'react';\nimport { StyleProp, ViewStyle, View, Image, ImageBackground, Text, Dimensions, TouchableOpacity, GestureResponderEvent } from \"react-native\";\nimport styles, { HEIGHT, WIDTH, MIN_WIDTH_HEIGHT } from \"./styles\";\n\n\nexport const Card: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, type: string, count?: number, selected?: boolean, isSelectable?: boolean, disabled?: boolean, onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\n    const cardTypeToImage = {\n        'camel': require('./camel_card.png'),\n        'cloth': require('./cloth_card.png'),\n        'cover': require('./cover_card.png'),\n        'diamond': require('./diamond_card.png'),\n        'gold': require('./gold_card.png'),\n        'leather': require('./leather_card.png'),\n        'silver': require('./silver_card.png'),\n        'spice': require('./spice_card.png'),\n    };\n\n    const RootElement: React.FunctionComponent<{ style: StyleProp<ViewStyle>; }> = (rootProps) => {\n        return props.isSelectable ?\n            <TouchableOpacity style={rootProps.style} onPress={props.onPress}>{rootProps.children}</TouchableOpacity> :\n            <View style={rootProps.style}>{rootProps.children}</View>;\n    };\n\n    return <RootElement style={[styles.card, {\n        top: HEIGHT(props.top),\n        bottom: HEIGHT(props.bottom),\n        left: WIDTH(props.left),\n        right: WIDTH(props.right),\n    },\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }\n    ]}>\n        <ImageBackground source={cardTypeToImage[props.type]} style={{ width: \"100%\", height: \"100%\" }}>\n            {props.count && <Text style={{\n                fontSize: 70,\n                textAlign: \"center\",\n                height: \"100%\",\n                color: \"white\",\n                fontWeight: \"800\",\n                textShadowRadius: 10,\n                textShadowColor: \"black\",\n                top: \"26%\",\n            }}>{props.count}</Text>}\n            <View></View>\n            {props.selected && <Text style={[{\n                textAlign: \"center\",\n                textAlignVertical: \"center\",\n            } as {\n                textAlign: \"center\",\n                textAlignVertical: \"center\";\n            }, {\n                fontSize: MIN_WIDTH_HEIGHT(2),\n                color: \"green\",\n                left: \"4%\",\n                backgroundColor: \"white\",\n                width: \"25%\",\n                top: \"4%\",\n                height: \"16%\",\n                lineHeight: 23.5,\n                borderRadius: MIN_WIDTH_HEIGHT(1.5),\n                overflow: \"hidden\",\n                fontWeight: \"800\",\n                borderWidth: 3,\n                borderColor: \"green\",\n                position: \"absolute\",\n            }]}>✓</Text>}\n        </ImageBackground>\n        {/* {!props.disabled && <View style={[styles.card, {\n            top: HEIGHT(props.top),\n            bottom: HEIGHT(props.bottom),\n            left: WIDTH(props.left),\n            right: WIDTH(props.right),\n            backgroundColor: \"rgba(0,0,0,0.5)\",\n        }]}></View>} */}\n    </RootElement>;\n};\n\n\nexport const Coin: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, value: number; }> = (props) => {\n    return <View style={[styles.token, {\n        top: HEIGHT(props.top),\n        bottom: HEIGHT(props.bottom),\n        left: WIDTH(props.left),\n        right: WIDTH(props.right),\n        width: Dimensions.get('window').width * 0.08,\n        height: Dimensions.get('window').width * 0.08,\n    },\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]\n    }>\n        <ImageBackground source={require('./coin.png')} style={{ width: \"100%\", height: \"100%\" }}>\n            <Text style={{\n                color: \"white\", position: \"relative\", fontSize: 60, top: \"17%\", left: \"0%\", fontWeight: \"800\", textAlign: \"center\",\n                textShadowRadius: 10,\n                textShadowColor: \"black\",\n            }}>{props.value}</Text>\n        </ImageBackground>\n    </View>;\n};\n\nexport const Token: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, type: string, value?: number; }> = (props) => {\n    const tokenTypeToImage = {\n        'bonus_3': require('./bonus_3_token.png'),\n        'bonus_4': require('./bonus_4_token.png'),\n        'bonus_5': require('./bonus_5_token.png'),\n        'camel': require('./camel_token.png'),\n        'cloth': require('./cloth_token.png'),\n        'diamond': require('./diamond_token.png'),\n        'gold': require('./gold_token.png'),\n        'leather': require('./leather_token.png'),\n        'seal_of_excellence': require('./seal_of_excellence.png'),\n        'silver': require('./silver_token.png'),\n        'spice': require('./spice_token.png'),\n        'coin': require('./coin.png'),\n    };\n\n    return <View style={[styles.token, {\n        top: HEIGHT(props.top),\n        bottom: HEIGHT(props.bottom),\n        left: WIDTH(props.left),\n        right: WIDTH(props.right),\n    },\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]}>\n        <ImageBackground source={tokenTypeToImage[props.type]} style={{ width: \"100%\", height: \"100%\" }}>\n            {props.type !== 'coin' && props.value !== undefined && props.value !== null && props.value >= 0 && [\n                <Text style={{ color: \"white\", position: \"relative\", top: \"3%\", left: \"44%\", fontWeight: \"800\" }}>{props.value}</Text>,\n                <Text style={{ color: \"white\", position: \"relative\", top: \"-27%\", left: \"-36.5%\", fontWeight: \"800\", transform: [{ rotateZ: \"-90deg\" }] }}>{props.value}</Text>,\n                <Text style={{ color: \"white\", position: \"relative\", top: \"33%\", left: \"-44%\", fontWeight: \"800\", transform: [{ rotateZ: \"-180deg\" }] }}>{props.value}</Text>,\n                <Text style={{ color: \"white\", position: \"relative\", top: \"19%\", left: \"36.4%\", fontWeight: \"800\", transform: [{ rotateZ: \"-270deg\" }] }}>{props.value}</Text>]\n            }\n            {props.type === 'coin' && props.value >= 0 && <Text style={{\n                color: \"white\", position: \"absolute\", fontSize: 40, top: \"19%\", left: \"35%\", fontWeight: \"800\", textAlign: \"center\",\n                textShadowRadius: 10,\n                textShadowColor: \"black\",\n            }}>{props.value}</Text>}\n        </ImageBackground>\n    </View >;\n};\n\nexport const Button: React.FunctionComponent<{ flip?: boolean, title: string, disabled?: boolean, onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\n    return <TouchableOpacity\n        disabled={props.disabled}\n        onPress={props.onPress}\n        style={{\n            backgroundColor: props.disabled ? \"grey\" : \"red\",\n            flex: 1,\n            borderRadius: 30,\n            margin: 5,\n        }}\n    >\n        <Text style={{\n            flex: 1,\n            color: \"white\",\n            fontWeight: \"800\",\n            fontSize: 20,\n            textAlign: \"center\",\n            textAlignVertical: \"center\",\n            borderWidth: 3,\n            borderRadius: 12,\n            padding: 2,\n            borderColor: 'black',\n        }}>\n            {props.title}\n        </Text>\n    </TouchableOpacity>;\n};\n\nexport function renderCard(type: string, isSelected = false, style: StyleProp<ViewStyle> = false) {\n    const cardTypeToImage = {\n        'camel': require('./camel_card.png'),\n        'cloth': require('./cloth_card.png'),\n        'cover': require('./cover_card.png'),\n        'diamond': require('./diamond_card.png'),\n        'gold': require('./gold_card.png'),\n        'leather': require('./leather_card.png'),\n        'silver': require('./silver_card.png'),\n        'spice': require('./spice_card.png'),\n    };\n\n    return <View style={[styles.card, style]}>\n        <Image source={cardTypeToImage[type]} style={{ resizeMode: \"stretch\", width: \"100%\", height: \"100%\" }} />\n        {isSelected && <Text style={[{\n            textAlign: \"center\",\n            textAlignVertical: \"center\",\n        } as {\n            textAlign: \"center\",\n            textAlignVertical: \"center\";\n        }, {\n            fontSize: MIN_WIDTH_HEIGHT(5),\n            color: \"green\",\n            left: \"4%\",\n            backgroundColor: \"white\",\n            width: \"25%\",\n            top: \"4%\",\n            height: \"16%\",\n            lineHeight: 23.5,\n            borderRadius: MIN_WIDTH_HEIGHT(4),\n            overflow: \"hidden\",\n            fontWeight: \"800\",\n            borderWidth: 3,\n            borderColor: \"green\",\n            position: \"absolute\",\n        }]}>✓</Text>}\n    </View >;\n}\n","import React from 'react';\nimport { View, Text, SafeAreaView, ScrollView, Dimensions, TouchableOpacity } from 'react-native';\nimport { ScreenOrientation } from 'expo';\nimport { renderCard } from './utils';\n\ntype Props = {\n    onAction(action: any): Promise<void>;\n    onBack(): void;\n};\n\ntype State = {\n    hand: string[],\n    handIsSelected: boolean[],\n    displayText: string,\n};\n\nexport default class JaipurHand extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            hand: [],\n            handIsSelected: [],\n            displayText: \"Waiting for a new game\",\n        };\n    }\n\n    async componentDidMount() {\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\n    }\n\n    async componentWillUnmount() {\n        await ScreenOrientation.unlockAsync();\n    }\n\n    updateHand(hand: any) {\n        this.setState(hand);\n    }\n\n    renderHand() {\n        return this.state.hand.map((card, i) => <TouchableOpacity onPress={() => this.props.onAction({ type: \"select-hand-card\", index: i })}>{renderCard(card, this.state.handIsSelected[i], {\n            position: undefined,\n            flex: 1,\n            height: Dimensions.get('window').height * 0.2,\n            width: Dimensions.get('window').height * 0.4,\n            borderWidth: 1,\n            borderRadius: 15,\n            shadowColor: \"black\",\n            shadowRadius: 3,\n            shadowOffset: { width: 0, height: 0 },\n            shadowOpacity: 0.6,\n            backgroundColor: \"white\",\n            padding: 10,\n            paddingTop: 10,\n            paddingBottom: 10,\n            marginHorizontal: 5,\n        })}</TouchableOpacity>);\n    }\n\n    render() {\n        return <SafeAreaView style={{\n            flex: 1,\n            flexDirection: \"column\",\n            backgroundColor: \"#5aa57c\",\n        }}>\n            <View style={{ flex: 3 }}>\n                <ScrollView style={{ flex: 1, flexDirection: \"row\", marginVertical: 20 }} horizontal={true}>\n                    {this.renderHand()}\n                </ScrollView>\n            </View>\n            <View style={{ flex: 1 }}>\n                <Text style={{ flex: 1, textAlign: \"center\", lineHeight: 80, fontSize: 35, color: \"white\", textShadowColor: \"black\", textShadowRadius: 10, }}>{this.state.displayText}</Text>\n            </View>\n        </SafeAreaView>;\n    }\n}\n","import React from 'react';\nimport { View, Image, Text } from \"react-native\";\nimport styles, { WIDTH, HEIGHT, RANGE } from \"./styles\";\n\nconst BoardMapStrip: React.FunctionComponent<{ width: number, top?: number, bottom?: number; }> = (props) => {\n    return <View style={\n        [styles.mat_strips, {\n            width: WIDTH(props.width),\n            top: HEIGHT(props.top),\n            bottom: HEIGHT(props.bottom),\n        }]}>{props.children}</View>;\n};\n\nconst BoardMapStripCircle: React.FunctionComponent<{ top?: number, bottom?: number, left?: number; }> = (props) => {\n    return <View style={\n        [styles.mat_strip_circle, {\n            top: HEIGHT(props.top),\n            bottom: HEIGHT(props.bottom),\n            left: WIDTH(props.left),\n        }]}>{props.children}</View>;\n};\n\nconst BoardMatCard: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, glow?: boolean; }> = (props = { glow: false }) => {\n    return <View style={[styles.mat_card, {\n        top: HEIGHT(props.top),\n        bottom: HEIGHT(props.bottom),\n        left: WIDTH(props.left),\n    },\n    props.glow && styles.mat_card_glow,\n    ]}>{props.children}</View>;\n};\n\nconst BoardCamel: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, flip?: boolean; }> = (props = { flip: false }) => {\n    return <Image source={require('./camel-char.png')}\n        style={\n            [{\n                position: \"absolute\",\n                height: \"5%\",\n                width: \"5%\",\n                opacity: 0.2,\n                resizeMode: \"stretch\",\n                top: HEIGHT(props.top),\n                bottom: HEIGHT(props.bottom),\n                left: WIDTH(props.left),\n            },\n            props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]\n        } />;\n};\n\nconst BoardGoodsTokenTrack: React.FunctionComponent<{ top: number; }> = (props) => {\n    return <View style={[styles.mat_goods_token_track, { top: HEIGHT(props.top) }]} />;\n};\n\nconst BoardBonusTokenTrack: React.FunctionComponent<{ top: number; }> = (props) => {\n    return <View style={[styles.mat_bonus_token_track, { top: HEIGHT(props.top) }]} />;\n};\n\nexport default function renderBoardMat() {\n    const renderMatStrips = () => {\n        return [\n            <BoardMapStrip width={100} top={7} />,\n            <BoardMapStrip width={100} bottom={7} />,\n            <BoardMapStrip width={65} top={20} />,\n            <BoardMapStrip width={65} bottom={20} />,\n\n            RANGE(39, 55, 3).map(left => [\n                <BoardMapStripCircle top={4} left={left} />,\n                <BoardMapStripCircle bottom={4} left={left} />\n            ]),\n        ];\n    };\n\n    const renderGreyMat = () => {\n        return <View style={styles.mat_grey_cover}></View>;\n    };\n\n    const goodsTokenTrackTop = styles.goodsTokenTrack.top;\n    const goodsTokenTrackBottom = styles.goodsTokenTrack.bottom;\n    const bonusTokenTrackTop = styles.bonusTokenTrack.top;\n    const bonusTokenTrackBottom = styles.bonusTokenTrack.bottom;\n\n    return [\n        renderMatStrips(),\n\n        <BoardCamel left={40} top={6.5} flip />,\n        RANGE(1, 11.5, 3).map(left => <BoardCamel left={left} top={13} flip />),\n        RANGE(27.5, 32.75, 2).map(left => <BoardCamel left={left} top={13} flip />),\n\n        <BoardCamel left={40} bottom={6.5} />,\n        RANGE(1, 11.5, 3).map(left => <BoardCamel left={left} bottom={13} />),\n        RANGE(27.5, 32.75, 2).map(left => <BoardCamel left={left} bottom={13} />),\n\n        <BoardMatCard left={5} top={30}>\n            <View style={[styles.mat_discard_pile]}>\n                <Text style={\n                    {\n                        transform: [{ rotateZ: \"-90deg\" }],\n                        top: \"38%\",\n                        fontSize: 35,\n                        color: \"rgba(255, 215, 0, 0.2)\",\n                        shadowOpacity: 1,\n                        shadowColor: \"white\",\n                        shadowOffset: { width: 0, height: 0 }\n                    }\n                }>Discard</Text>\n            </View>\n        </BoardMatCard>,\n        <BoardMatCard left={5} bottom={30} />,\n        <BoardMatCard left={17} top={5} />,\n        <BoardMatCard left={17} bottom={5} />,\n\n        RANGE(17, 61, 5).map(left => <BoardMatCard left={left} top={42} glow />),\n\n        renderGreyMat(),\n        RANGE(goodsTokenTrackTop, goodsTokenTrackBottom, 6).map(top => <BoardGoodsTokenTrack top={top} />),\n        RANGE(bonusTokenTrackTop, bonusTokenTrackBottom, 4).map(top => <BoardBonusTokenTrack top={top} />),\n    ];\n}\n","import React from 'react';\nimport { View, SafeAreaView } from 'react-native';\n\nimport styles, { HEIGHT, WIDTH } from './styles';\nimport { Card, Coin, Token, Button } from './utils';\nimport renderBoardMat from './renderBoardMat';\n\ntype Props = {\n    onAction(action: any): Promise<void>;\n    onBack(): void;\n};\n\ntype PlayerState = {\n    sealsOfExcellence: number,\n    camels: number,\n    hasCamelToken: boolean,\n    rupees: number,\n    goodsTokens: {\n        diamond: number[],\n        gold: number[],\n        silver: number[],\n        cloth: number[],\n        spice: number[],\n        leather: number[],\n    },\n    bonusTokens: {\n        bonus_3: number[],\n        bonus_4: number[],\n        bonus_5: number[],\n    },\n};\n\ntype State = {\n    playerStates: [PlayerState, PlayerState],\n    market: [string, string, string, string, string],\n    marketIsSelected: [boolean, boolean, boolean, boolean, boolean],\n    marketIsSelectable: [boolean, boolean, boolean, boolean, boolean],\n    topDiscard: string,\n    drawPileHasCards: boolean,\n    goodsTokens: {\n        diamond: number[],\n        gold: number[],\n        silver: number[],\n        cloth: number[],\n        spice: number[],\n        leather: number[],\n    },\n    bonusTokens: {\n        bonus_3: number,\n        bonus_4: number,\n        bonus_5: number,\n    },\n    camelToken: boolean,\n    currentPlayerIndex: number,\n    buttons: [string, string, boolean][],\n\n    players: string[],\n};\n\nexport default class JaipurBoard extends React.Component<Props, State>{\n    goodsTokenTrackTop: number;\n    goodsTokenTrackBottom: number;\n    bonusTokenTrackTop: number;\n    bonusTokenTrackBottom: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.goodsTokenTrackTop = 20;\n        this.goodsTokenTrackBottom = 76.7;\n        this.bonusTokenTrackTop = 30;\n        this.bonusTokenTrackBottom = 67;\n\n        // this.state = {\n        //     playerStates: [\n        //         {\n        //             sealsOfExcellence: 2,\n        //             camels: 4,\n        //             hasCamelToken: true,\n        //             rupees: 0,\n        //             goodsTokens: {\n        //                 diamond: [7],\n        //                 gold: [6],\n        //                 silver: [5],\n        //                 cloth: [1, 2, 2, 3, 3, 5],\n        //                 spice: [1, 2, 2, 3, 3, 5],\n        //                 leather: [1, 1, 1, 1, 1, 2, 3, 4],\n        //             },\n        //             bonusTokens: {\n        //                 bonus_3: [4, 5, 6],\n        //                 bonus_4: [],\n        //                 bonus_5: [],\n        //             }\n        //         },\n        //         {\n        //             sealsOfExcellence: 2,\n        //             camels: 5,\n        //             hasCamelToken: true,\n        //             rupees: 0,\n        //             goodsTokens: {\n        //                 diamond: [7],\n        //                 gold: [6],\n        //                 silver: [5],\n        //                 cloth: [1, 2, 2, 3, 3, 5],\n        //                 spice: [1, 2, 2, 3, 3, 5],\n        //                 leather: [1, 1, 1, 1, 1, 2, 3, 4],\n        //             },\n        //             bonusTokens: {\n        //                 bonus_3: [4, 5, 6],\n        //                 bonus_4: [],\n        //                 bonus_5: [],\n        //             }\n        //         }\n        //     ],\n        //     market: [\"diamond\", \"silver\", \"cloth\", \"leather\", \"spice\"],\n        //     marketIsSelected: [true, true, false, false, false],\n        //     marketIsSelectable: [true, true, true, true, true],\n        //     topDiscard: \"gold\",\n        //     drawPileHasCards: true,\n        //     goodsTokens: {\n        //         diamond: [5, 5, 5, 7, 7],\n        //         gold: [5, 5, 5, 6, 6],\n        //         silver: [5, 5, 5, 5, 5],\n        //         cloth: [1, 1, 2, 2, 3, 3, 5],\n        //         spice: [1, 1, 2, 2, 3, 3, 5],\n        //         leather: [1, 1, 1, 1, 1, 1, 2, 3, 4],\n        //     },\n        //     bonusTokens: {\n        //         bonus_3: 6,\n        //         bonus_4: 6,\n        //         bonus_5: 6,\n        //     },\n        //     camelToken: true,\n        //     currentPlayerIndex: -1,\n        //     buttons: [[\"start\", \"Start Game\"]],\n        // };\n\n        this.state = {\n            playerStates: [\n                {\n                    sealsOfExcellence: 0,\n                    camels: 0,\n                    hasCamelToken: false,\n                    rupees: 0,\n                    goodsTokens: {\n                        diamond: [],\n                        gold: [],\n                        silver: [],\n                        cloth: [],\n                        spice: [],\n                        leather: [],\n                    },\n                    bonusTokens: {\n                        bonus_3: [],\n                        bonus_4: [],\n                        bonus_5: [],\n                    }\n                },\n                {\n                    sealsOfExcellence: 0,\n                    camels: 0,\n                    hasCamelToken: false,\n                    rupees: 0,\n                    goodsTokens: {\n                        diamond: [],\n                        gold: [],\n                        silver: [],\n                        cloth: [],\n                        spice: [],\n                        leather: [],\n                    },\n                    bonusTokens: {\n                        bonus_3: [],\n                        bonus_4: [],\n                        bonus_5: [],\n                    }\n                },\n            ],\n            market: [null, null, null, null, null],\n            marketIsSelected: [false, false, false, false, false],\n            marketIsSelectable: [false, false, false, false, false],\n            topDiscard: null,\n            drawPileHasCards: false,\n            goodsTokens: {\n                diamond: [],\n                gold: [],\n                silver: [],\n                cloth: [],\n                spice: [],\n                leather: [],\n            },\n            bonusTokens: {\n                bonus_3: 0,\n                bonus_4: 0,\n                bonus_5: 0,\n            },\n            camelToken: false,\n            currentPlayerIndex: -1,\n            buttons: [[\"start\", \"Start Game\", false]],\n\n            players: [],\n        };\n    }\n\n    updateBoard(state: State) {\n        this.setState(state);\n    }\n\n    render() {\n        const goodsTokenTrackTop = this.goodsTokenTrackTop;\n        const goodsTokenTrackBottom = this.goodsTokenTrackBottom;\n        const bonusTokenTrackTop = this.bonusTokenTrackTop;\n        const bonusTokenTrackBottom = this.bonusTokenTrackBottom;\n\n        const goodsTokenTrackOffsets = 1.38;\n\n        return <SafeAreaView style={styles.mat}>\n            {renderBoardMat()}\n\n            <View style={{ position: \"absolute\", top: \"50%\", transform: [{ rotateZ: \"-90deg\" }], left: \"-7.5%\", flexDirection: \"row\", width: \"20%\" }}>\n                <Button title=\"Back\" onPress={() => {\n                    this.props.onBack();\n                }} />\n                <Button title=\"Reset\" onPress={() => {\n                    this.props.onAction({ \"type\": \"reset\" });\n                }} />\n            </View>\n\n            {this.state.playerStates[0].sealsOfExcellence >= 1 && <Token type='seal_of_excellence' top={4.7} left={47.5} flip />}\n            {this.state.playerStates[0].sealsOfExcellence >= 2 && <Token type='seal_of_excellence' top={4.7} left={55.5} flip />}\n            {this.state.playerStates[1].sealsOfExcellence >= 1 && <Token type='seal_of_excellence' bottom={4.7} left={47.5} />}\n            {this.state.playerStates[1].sealsOfExcellence >= 2 && <Token type='seal_of_excellence' bottom={4.7} left={55.5} />}\n\n            {this.state.playerStates[0].hasCamelToken && <Token type='camel' top={4.7} left={39.5} flip />}\n            {this.state.playerStates[1].hasCamelToken && <Token type='camel' bottom={4.7} left={39.5} />}\n\n            {([\n                ['diamond', this.state.goodsTokens.diamond],\n                ['gold', this.state.goodsTokens.gold],\n                ['silver', this.state.goodsTokens.silver],\n                ['cloth', this.state.goodsTokens.cloth],\n                ['spice', this.state.goodsTokens.spice],\n                ['leather', this.state.goodsTokens.leather],\n            ] as [string, number[]][]).map(([type, tokens], i) =>\n                tokens.map((value, j) =>\n                    <Token type={type} value={value} top={goodsTokenTrackTop + i * (goodsTokenTrackBottom - goodsTokenTrackTop) / 5} left={84 - j * goodsTokenTrackOffsets} />))}\n\n            {this.state.drawPileHasCards && <Card type='cover' bottom={30} left={5} />}\n\n            {this.state.topDiscard !== null && <Card type={this.state.topDiscard} top={30} left={5} />}\n\n            {this.state.playerStates[0].camels > 0 && <Card type='camel' count={this.state.playerStates[0].camels} left={17} top={5} flip />}\n            {this.state.playerStates[1].camels > 0 && <Card type='camel' count={this.state.playerStates[1].camels} left={17} bottom={5} />}\n\n            {this.state.market.map((card, i) => card && <Card left={17 + 11 * i} top={42} type={card} selected={this.state.marketIsSelected[i]} isSelectable={this.state.marketIsSelectable[i]} onPress={() => this.props.onAction({ type: \"select-card\", index: i })} />)}\n\n            {new Array(this.state.bonusTokens.bonus_3).fill(null).map((_, i) => <Token type={\"bonus_3\"} top={bonusTokenTrackTop + 0.6 * i} right={3} />)}\n            {new Array(this.state.bonusTokens.bonus_4).fill(null).map((_, i) => <Token type={\"bonus_4\"} top={bonusTokenTrackTop + (bonusTokenTrackBottom - bonusTokenTrackTop) / 3 + 0.6 * i} right={3} />)}\n            {new Array(this.state.bonusTokens.bonus_5).fill(null).map((_, i) => <Token type={\"bonus_5\"} top={bonusTokenTrackTop + 2 * (bonusTokenTrackBottom - bonusTokenTrackTop) / 3 + 0.6 * i} right={3} />)}\n            {this.state.camelToken && <Token type={\"camel\"} top={bonusTokenTrackTop + 3 * (bonusTokenTrackBottom - bonusTokenTrackTop) / 3} right={3} />}\n\n            <Coin top={3.5} right={2} value={this.state.playerStates[0].rupees} flip />\n            <Coin bottom={3.5} right={2} value={this.state.playerStates[1].rupees} />\n\n            {[0, 1].map(playerIndex => {\n                return [...this.state.playerStates[playerIndex].goodsTokens.diamond.map(value => { return { type: \"diamond\", value }; }),\n                ...this.state.playerStates[playerIndex].goodsTokens.gold.map(value => { return { type: \"gold\", value }; }),\n                ...this.state.playerStates[playerIndex].goodsTokens.silver.map(value => { return { type: \"silver\", value }; }),\n                ...this.state.playerStates[playerIndex].goodsTokens.cloth.map(value => { return { type: \"cloth\", value }; }),\n                ...this.state.playerStates[playerIndex].goodsTokens.spice.map(value => { return { type: \"spice\", value }; }),\n                ...this.state.playerStates[playerIndex].goodsTokens.leather.map(value => { return { type: \"leather\", value }; }),\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_3.map(value => { return { type: \"coin\", value }; }),\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_4.map(value => { return { type: \"coin\", value }; }),\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_5.map(value => { return { type: \"coin\", value }; }),\n                ].map(({ type, value }, i) => {\n                    if (playerIndex === 0)\n                        return <Token type={type} value={value} top={4.7} left={83 - i * 0.8} flip />;\n                    else\n                        return <Token type={type} value={value} bottom={4.7} left={83 - i * 0.8} />;\n                });\n            })}\n\n            {\n                [0, 1].map(i => {\n                    const getButton = () => {\n                        if (this.state.currentPlayerIndex !== -1 && this.state.currentPlayerIndex !== i) {\n                            return;\n                        }\n                        return this.state.buttons.map(([action, title, disabled]) => {\n                            if (action === \"start\" && this.state.players.length !== 2)\n                                disabled = true;\n                            if (action === \"start\" && this.state.players.length > i) {\n                                title = title + \" (\" + this.state.players[i] + \")\";\n                            }\n                            return <Button title={title} disabled={disabled} onPress={() => {\n                                this.props.onAction({ \"type\": action });\n                            }} />;\n                        });\n                    };\n\n                    return <View style={[styles.buttonPanel, i == 0 ? { bottom: \"68%\", transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] } : { top: \"68%\" }]}>\n                        {getButton()}\n                    </View>;\n                })\n            }\n        </SafeAreaView>;\n    }\n};\n","import React from 'react';\nimport BaseGameScreen, { GameScreenProps } from \"../BaseGameScreen\";\nimport JaipurHand from \"./JaipurHand\";\nimport JaipurBoard from \"./JaipurBoard\";\n\nexport default class JaipurScreen extends React.Component<GameScreenProps> implements BaseGameScreen {\n    board: React.RefObject<JaipurBoard>;\n    hand: React.RefObject<JaipurHand>;\n\n    constructor(props: GameScreenProps) {\n        super(props);\n        this.board = React.createRef();\n        this.hand = React.createRef();\n    }\n\n    updateScreen(content: any) {\n        if (this.props.playerName === \"board\") {\n            this.board.current.updateBoard(content);\n        } else {\n            this.hand.current.updateHand(content);\n        }\n    }\n\n    render() {\n        if (this.props.playerName === \"board\") {\n            return <JaipurBoard ref={this.board} onAction={this.props.onAction} onBack={this.props.onBack} />;\n        } else {\n            return <JaipurHand ref={this.hand} onAction={this.props.onAction} onBack={this.props.onBack} />;\n        }\n    }\n};\n","import React from 'react';\nimport { SafeAreaView, View, Text, StyleSheet, Dimensions, ViewProps, ImageBackground, StyleProp, ViewStyle, GestureResponderEvent } from 'react-native';\nimport Button from '../Button';\nimport BaseGameScreen, { GameScreenProps } from \"../BaseGameScreen\";\nimport { ScreenOrientation } from \"expo\";\nimport {\n    heightPercentageToDP as hp,\n    widthPercentageToDP as wp,\n} from 'react-native-responsive-screen';\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\ntype BoardCell = {\n    kind: string,\n    color?: string,\n    value?: string,\n    isSelectable?: boolean,\n};\n\ntype State = {\n    players: {\n        red: string[],\n        redCodemaster: string | null,\n        blue: string[],\n        blueCodemaster: string | null,\n    },\n    buttons: [string, string, boolean][],\n    playerNameDisplay: string,\n    displayText: string,\n    status: \"player-selection\" | \"board\" | \"none\" | \"game-over\",\n    board: BoardCell[][],\n};\n\nexport default class CodenamesScreen extends React.Component<GameScreenProps, State> implements BaseGameScreen<State> {\n    constructor(props: GameScreenProps) {\n        super(props);\n\n        this.state = {\n            players: {\n                red: [],\n                redCodemaster: undefined,\n                blue: [],\n                blueCodemaster: undefined,\n            },\n            buttons: [],\n            playerNameDisplay: null,\n            displayText: \"Connecting to server...\",\n            status: \"none\",\n            board: [],\n        };\n    }\n\n    async componentDidMount() {\n        await ScreenOrientation?.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\n    }\n\n    async componentWillUnmount() {\n        await ScreenOrientation?.unlockAsync();\n    }\n\n    updateScreen(content: any) {\n        this.setState(content);\n    }\n\n    renderPlayerSelection() {\n        const renderPlayerList = (team: string) => {\n            const teamName = (team == \"red\" ? \"Red\" : \"Blue\") + \" Team\";\n            const players = (team === \"red\" ? this.state.players.red : this.state.players.blue);\n            const codemaster = (team === \"red\" ? this.state.players.redCodemaster : this.state.players.blueCodemaster);\n\n            return <View style={{\n                flex: 3,\n                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n                borderRadius: 30,\n                margin: \"2%\",\n                padding: \"2%\",\n            }}>\n                <Text style={{\n                    textAlign: \"center\",\n                    color: team,\n                    fontSize: 30,\n                    textShadowColor: \"white\",\n                    textShadowRadius: 3,\n                    paddingVertical: \"2%\",\n                }}>{teamName}</Text>\n                <View style={{\n                    marginVertical: 8,\n                    borderBottomColor: '#737373',\n                    borderBottomWidth: 1,\n                }} />\n                <Text style={{\n                    fontSize: 20,\n                    color: \"white\",\n                }}>Codemaster: {codemaster}</Text>\n                <View style={{\n                    marginVertical: 8,\n                    borderBottomColor: '#737373',\n                    borderBottomWidth: 1,\n                }} />\n                {players.map(playerName => <Text style={{\n                    fontSize: 20,\n                    color: \"white\",\n                }}>{playerName}</Text>)}\n            </View>;\n        };\n\n        return [\n            renderPlayerList(\"red\"),\n            renderPlayerList(\"blue\"),\n        ];\n    }\n\n    renderBoard() {\n        const { width, height } = Dimensions.get('window');\n\n        // Use iPhone6 as base size which is 375 x 667\n        const baseWidth = 375;\n        const baseHeight = 667;\n\n        const scaleWidth = width / baseWidth;\n        const scaleHeight = height / baseHeight;\n        const scale = Math.min(scaleWidth, scaleHeight);\n\n        const scaledSize =\n            (size) => Math.ceil((size * scale));\n\n        const AspectView: React.FunctionComponent<ViewProps & { isSelectable?: boolean; onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\n            const [layout, setLayout] = React.useState(null);\n\n            const { aspectRatio = 1, ...inputStyle } =\n                StyleSheet.flatten(props.style) || {};\n            const style = [inputStyle, { aspectRatio }];\n\n            if (layout) {\n                const { width = 0, height = 0 } = layout;\n                style.push({ width: height * aspectRatio, height });\n            }\n\n            return (\n                <TouchableOpacity\n                    {...props}\n                    disabled={!props.isSelectable}\n                    onPress={props.onPress}\n                    style={[{\n                        height: hp(15),\n                        width: hp((500.0 / 345.0) * 14),\n                    }, style]}\n                    onLayout={({ nativeEvent: { layout } }) => { setLayout(layout); console.log(layout); }}\n                >{props.children}</TouchableOpacity>\n            );\n        };\n\n        const renderRow = (row, rowIndex) => {\n            return <View style={{\n                flex: 1,\n                flexDirection: \"row\"\n            }}>\n                {row.map((cell, colIndex) => {\n                    const backgroundColor = (cell.kind === \"word\" ? \"#cebc9c\" : \"black\");\n\n                    return <View style={{\n                        flex: 1,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}>\n                        <View style={{ flex: 1, marginVertical: hp(0.4), marginHorizontal: wp(0.4) }}>\n                            <AspectView style={{\n                                backgroundColor,\n                                borderColor: cell.color,\n                                shadowColor: cell.color,\n                                shadowOpacity: 1,\n                                shadowOffset: { width: 0, height: 0 },\n                                shadowRadius: 10,\n                                borderWidth: wp(0.25),\n                                aspectRatio: 500.0 / 345.0,\n                                flex: 1,\n                                borderRadius: wp(0.5)\n                            }} isSelectable={cell.isSelectable}\n                                onPress={() => {\n                                    this.props.onAction({ \"type\": \"card\", \"rowIndex\": rowIndex, \"colIndex\": colIndex });\n                                }}>\n                                {\n                                    (() => {\n                                        switch (cell.kind) {\n                                            case 'word':\n                                                return <View style={{\n                                                    flex: 1,\n                                                    margin: wp(0.4),\n                                                    borderColor: \"#b3956d\",\n                                                    borderWidth: wp(0.15),\n                                                    backgroundColor: \"#d0b694\",\n                                                    borderRadius: wp(0.1),\n                                                    flexDirection: \"column\",\n                                                }}>\n                                                    <View style={{\n                                                        flex: 1,\n                                                    }}>\n                                                        <View style={{\n                                                            flex: 1,\n                                                            marginHorizontal: wp(0.2),\n                                                            borderBottomColor: \"#b3956d\",\n                                                            borderBottomWidth: wp(0.15),\n                                                        }}>\n                                                            <Text style={{\n                                                                flex: 1,\n                                                                color: \"#746653\",\n                                                                textAlign: \"right\",\n                                                                marginLeft: \"15%\",\n                                                                fontSize: scaledSize(11),\n                                                                fontStyle: \"italic\",\n                                                                fontWeight: \"800\",\n                                                                transform: [{ rotateZ: \"180deg\" }]\n                                                            }}\n                                                            >{cell.value}</Text>\n                                                        </View>\n                                                    </View>\n                                                    <View style={{\n                                                        flex: 1,\n                                                    }}>\n                                                        <View style={{\n                                                            flex: 1,\n                                                            alignItems: \"center\",\n                                                            flexDirection: \"row\",\n                                                            margin: wp(0.4),\n                                                            borderBottomLeftRadius: wp(0.5),\n                                                            borderBottomRightRadius: wp(0.5),\n                                                            backgroundColor: \"white\",\n                                                        }}>\n                                                            <Text style={{\n                                                                flex: 1,\n                                                                textAlign: \"center\",\n                                                                fontSize: scaledSize(14),\n                                                                fontWeight: \"800\",\n                                                            }}\n                                                            >{cell.value}</Text>\n                                                        </View>\n\n                                                    </View>\n                                                </View>;\n                                            case 'bystander':\n                                                return <View style={{\n                                                    flex: 1,\n                                                    borderColor: \"#b3956d\",\n                                                    borderWidth: wp(0.15),\n                                                    borderRadius: wp(0.1),\n                                                }}>\n                                                    <ImageBackground source={require('./assets/bystander.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\n                                                </View>;\n                                            case 'agent-red':\n                                                return <View style={{\n                                                    flex: 1,\n                                                    borderColor: \"red\",\n                                                    borderWidth: wp(0.15),\n                                                    borderRadius: wp(0.1),\n                                                }}>\n                                                    <ImageBackground source={require('./assets/agent-red.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\n                                                </View>;\n                                            case 'agent-blue':\n                                                return <View style={{\n                                                    flex: 1,\n                                                    borderColor: \"blue\",\n                                                    borderWidth: wp(0.15),\n                                                    borderRadius: wp(0.1),\n                                                }}>\n                                                    <ImageBackground source={require('./assets/agent-blue.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\n                                                </View>;\n                                            case 'assasin':\n                                                return <View style={{\n                                                    flex: 1,\n                                                    borderColor: \"black\",\n                                                    borderWidth: wp(0.15),\n                                                    borderRadius: wp(0.1),\n                                                }}>\n                                                    <ImageBackground source={require('./assets/assasin.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\n                                                </View>;\n                                        }\n                                    })()\n                                }\n                            </AspectView>\n                        </View>\n                    </View>;\n                })}\n            </View>;\n        };\n\n        return <View style={{\n            flex: 1,\n            flexDirection: \"column\",\n            backgroundColor: \"#817264\",\n            margin: 20,\n            marginVertical: 5,\n            padding: 10,\n            // aspectRatio: 1,\n            // width: 0,\n        }}>\n            {this.state.board.map(renderRow)}\n        </View>;\n    }\n\n    render() {\n        return <SafeAreaView style={{\n            flex: 1,\n            backgroundColor: \"#446983\",\n        }}>\n            <View style={{ flex: 1, flexDirection: \"column\" }}>\n                <View style={{ flex: 2, flexDirection: \"row\", alignItems: \"center\" }}>\n                    {this.state.buttons.map(([title, action, enabled]) => {\n                        return <Button title={title} disabled={!enabled} onPress={() => {\n                            if (action === \"back\") {\n                                this.props.onBack();\n                            } else {\n                                this.props.onAction({ \"type\": action });\n                            }\n                        }} />;\n                    })}\n                </View>\n                <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n                    {this.state.playerNameDisplay && <Text style={{\n                        flex: 1,\n                        textAlign: \"center\",\n                        color: \"white\",\n                        fontSize: Dimensions.get(\"window\").width * 0.02,\n                    }}>{this.state.playerNameDisplay}</Text>}\n                    <Text style={{\n                        flex: 1,\n                        textAlign: \"center\",\n                        color: \"white\",\n                        fontSize: Dimensions.get(\"window\").width * 0.02,\n                    }}>{this.state.displayText}</Text>\n                </View>\n                <View style={{ flex: 14, flexDirection: \"row\" }}>\n                    {\n                        (() => {\n                            switch (this.state.status) {\n                                case \"player-selection\":\n                                    return this.renderPlayerSelection();\n                                case \"board\":\n                                case \"game-over\":\n                                    return this.renderBoard();\n                                case \"none\":\n                                    return [];\n                            }\n                        })()\n                    }\n                </View>\n            </View>\n        </SafeAreaView>;\n    }\n}\n","import React from 'react';\nimport { View, Text, SafeAreaView, ImageBackground, GestureResponderEvent, TouchableOpacity, StyleProp, ViewStyle, Image } from 'react-native';\nimport {\n    heightPercentageToDP as hp,\n    widthPercentageToDP as wp,\n} from 'react-native-responsive-screen';\nimport Button from '../Button';\n\ntype CardColor = \"black\" | \"blue\" | \"green\" | \"red\" | \"white\";\ntype CoinColor = CardColor | \"gold\";\ntype CardCost = { black?: number, blue?: number, green?: number, red?: number, white?: number; };\nexport type CardInfo = {\n    color: CardColor,\n    prestige: number,\n    cost: CardCost,\n    isSelectable?: boolean,\n};\ntype NobleInfo = {\n    cost: { color: CardColor, count: number; }[],\n    prestige: number,\n    nobleIndex: number,\n    isSelectable?: boolean,\n};\n\ntype Props = {\n    onAction(action: any): Promise<void>;\n    onBack(): void;\n};\n\ntype State = {\n    buttons: [string, string, boolean][],\n    faceupCards: CardInfo[][],\n    coins: { white: number, black: number, red: number, blue: number, green: number, gold: number; },\n    coinsSelectable: { white: boolean, black: boolean, red: boolean, blue: boolean, green: boolean, gold: boolean; },\n    pilesSelectable: [boolean, boolean, boolean],\n    pilesVisible: [boolean, boolean, boolean],\n    nobles: NobleInfo[],\n    displayText: string,\n    playerStates: {\n        name: string,\n        isTurn: boolean,\n        coins: { white: number, black: number, red: number, blue: number, green: number, gold: number; },\n        coinsSelectable: boolean,\n        prestige: number,\n        reservedCards: number[],\n        cards: { white: number, black: number, red: number, blue: number, green: number },\n    }[]\n};\n\nconst colorToCardImage = (color: CardColor) => {\n    switch (color) {\n        case \"black\": return require('./black_card1.png');\n        case \"blue\": return require('./blue_card1.png');\n        case \"green\": return require('./green_card1.png');\n        case \"red\": return require('./red_card1.png');\n        case \"white\": return require('./white_card1.png');\n    }\n};\n\nconst colorToGemImage = (color: CoinColor) => {\n    switch (color) {\n        case \"black\": return require('./black_gem.png');\n        case \"blue\": return require('./blue_gem.png');\n        case \"green\": return require('./green_gem.png');\n        case \"red\": return require('./red_gem.png');\n        case \"white\": return require('./white_gem.png');\n        case \"gold\": return require('./gold_gem.png');\n    }\n};\n\nconst colorToCostImage = (color: CardColor) => {\n    switch (color) {\n        case \"black\": return require('./black_cost.png');\n        case \"blue\": return require('./blue_cost.png');\n        case \"green\": return require('./green_cost.png');\n        case \"red\": return require('./red_cost.png');\n        case \"white\": return require('./white_cost.png');\n    }\n};\n\nconst backToCardImage = (level: number) => {\n    switch (level) {\n        case 1: return require('./back_card1.png');\n        case 2: return require('./back_card2.png');\n        case 3: return require('./back_card3.png');\n    }\n};\n\nexport const Card: React.FunctionComponent<{\n    isSelectable?: boolean,\n    onPress?: (event: GestureResponderEvent) => void,\n    color?: CardColor,\n    prestige?: number,\n    cost?: CardCost,\n    style?: StyleProp<ViewStyle>,\n    scale?: number,\n    count?: number,\n}> = (props) => {\n    const cardHeight = hp(15) * (props.scale || 1);\n    const aspectRatio = 0.7;\n    const gemScale = 0.2;\n    const costCountScale = 0.16;\n\n    const cardContents = (() => {\n        if (props.color) {\n            return <ImageBackground style={{\n                flex: 1,\n                flexDirection: \"column\",\n            }} source={colorToCardImage(props.color)}>\n                <View style={{ flex: 1, backgroundColor: \"rgba(255, 255, 255, 0.6)\", flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Text style={{\n                        fontSize: cardHeight * 0.2,\n                        paddingLeft: \"6%\",\n                        color: \"white\",\n                        fontWeight: \"800\",\n                        textShadowRadius: cardHeight * 0.01,\n                        textShadowColor: \"black\",\n                        textShadowOffset: { width: 0, height: 0 },\n                        flex: 1,\n                    }}>\n                        {props.prestige}\n                    </Text>\n                    <Image\n                        source={colorToGemImage(props.color)}\n                        style={{\n                            height: cardHeight * gemScale,\n                            width: cardHeight * gemScale,\n                            resizeMode: \"stretch\",\n                            marginRight: cardHeight * 0.04,\n                            shadowColor: \"black\",\n                            shadowOpacity: 1,\n                            overflow: \"visible\",\n                            shadowOffset: { width: -1, height: 2 }\n                        }} />\n                </View>\n                {props.cost &&\n                    <View style={{ flex: 3, padding: cardHeight * 0.03 }}>\n                        <View style={{ flex: 0.2 }}></View>\n                        {new Array(Object.entries(props.cost || {}).filter(val => val[1] === 0).length + (5 - Object.entries(props.cost || {}).length) - 1).fill(null).map(_ => <View style={{\n                            flex: 1,\n                        }} />)}\n\n                        {[[\"white\", props.cost?.white || 0],\n                        [\"blue\", props.cost?.blue || 0],\n                        [\"green\", props.cost?.green || 0],\n                        [\"red\", props.cost?.red || 0],\n                        [\"black\", props.cost?.black || 0]].map(([color, count]: [CardColor, number]) => {\n                            if (count === 0) return;\n                            return <View style={{ flex: 1 }}>\n                                <ImageBackground style={{\n                                    borderRadius: cardHeight * costCountScale / 2,\n                                    height: cardHeight * costCountScale,\n                                    width: cardHeight * costCountScale,\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                }} source={colorToCostImage(color)} resizeMethod=\"scale\">\n                                    <Text style={{\n                                        textAlign: \"center\",\n                                        fontSize: cardHeight * 0.12,\n                                        fontWeight: \"800\",\n                                        color: \"white\",\n                                        textShadowRadius: cardHeight * 0.01,\n                                        textShadowColor: \"black\",\n                                        textShadowOffset: { width: 0, height: 0 },\n                                        flex: 1,\n                                    }}>\n                                        {count}\n                                    </Text>\n                                </ImageBackground>\n                            </View>;\n                        })}\n                    </View>\n                }\n                {props.count !== undefined &&\n                    <View style={{ flex: 3, padding: cardHeight * 0.03 }}>\n                        <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n                            <Text style={{\n                                textAlign: \"center\",\n                                backgroundColor: \"black\",\n                                borderRadius: cardHeight * 0.25,\n                                overflow: \"hidden\",\n                                fontSize: cardHeight * 0.4,\n                                fontWeight: \"800\",\n                                color: \"white\",\n                                textShadowRadius: cardHeight * 0.01,\n                                textShadowColor: \"black\",\n                                textShadowOffset: { width: 0, height: 0 },\n                                flex: 1,\n                            }}>\n                                {props.count}\n                            </Text>\n                        </View>\n                    </View>\n                }\n            </ImageBackground>;\n        } else {\n            return <View style={{ flex: 1, marginHorizontal: cardHeight * 0.03, marginVertical: cardHeight * 0.03, borderRadius: cardHeight * 0.04, overflow: \"hidden\" }}>\n                <ImageBackground style={{ flex: 1, padding: 10 }} resizeMode=\"stretch\" source={backToCardImage(props.prestige)} />\n            </View>;\n        }\n    })();\n\n    return <TouchableOpacity\n        disabled={!props.isSelectable}\n        onPress={props.onPress}\n        style={[{\n            height: cardHeight,\n            width: cardHeight * aspectRatio,\n            borderRadius: cardHeight * 0.05,\n            borderWidth: 1,\n            borderColor: 'white',\n            backgroundColor: 'white',\n        }, props.style, props.isSelectable && {\n            shadowColor: \"white\",\n            shadowRadius: cardHeight * 0.1,\n            shadowOpacity: 1,\n            shadowOffset: { width: 0, height: 0 },\n        }]}>\n        <View style={{\n            flex: 1, overflow: \"hidden\",\n            borderRadius: cardHeight * 0.05,\n        }}>{cardContents}</View>\n    </TouchableOpacity >;\n};\n\n\nconst Coin: React.FunctionComponent<{\n    isSelectable?: boolean,\n    onPress?: (event: GestureResponderEvent) => void,\n    color?: CoinColor,\n    count?: number,\n    scale?: number,\n}> = (props) => {\n    const coinHeight = hp(6) * (props.scale || 1);\n    return <TouchableOpacity\n        disabled={!props.isSelectable}\n        onPress={props.onPress}\n        style={[{\n            height: coinHeight,\n            width: coinHeight,\n            borderRadius: coinHeight / 2,\n            backgroundColor: props.color,\n            borderColor: \"#cea56e\",\n            borderWidth: coinHeight * 0.02,\n        }, props.isSelectable && {\n            shadowColor: \"white\",\n            shadowRadius: coinHeight * 0.2,\n            shadowOpacity: 1,\n            shadowOffset: { width: 0, height: 0 },\n        }]}><View style={{ flex: 1, borderRadius: coinHeight / 2, overflow: \"hidden\" }}>\n            <ImageBackground\n                style={{\n                    backgroundColor: \"#cea56e\",\n                    flex: 1,\n                    margin: coinHeight * 0.1,\n                    borderRadius: coinHeight / 2,\n                    overflow: \"hidden\",\n                }}\n                source={colorToGemImage(props.color)}\n                imageStyle={{\n                    margin: coinHeight * 0.1,\n                }}>\n                <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\", backgroundColor: \"rgba(0,0,0,0.5)\" }}>\n                    <Text style={{\n                        flex: 1,\n                        textAlign: \"center\",\n                        fontSize: coinHeight * 0.5,\n                        fontWeight: \"800\",\n                        color: \"white\",\n                        textShadowRadius: coinHeight * 0.01,\n                        textShadowColor: \"black\",\n                        textShadowOffset: { width: 0, height: 0 },\n                    }}>\n                        {props.count}\n                    </Text>\n                </View>\n            </ImageBackground>\n        </View>\n    </TouchableOpacity>;\n};\n\nconst Noble: React.FunctionComponent<{\n    isSelectable?: boolean,\n    onPress?: (event: GestureResponderEvent) => void,\n    cost: { color: CardColor, count: number; }[],\n    prestige: number,\n    nobleIndex: number,\n    style?: StyleProp<ViewStyle>,\n    scale?: number,\n}> = (props) => {\n    const nobleIndexToNobleImage = (index: number) => {\n        switch (index) {\n            case 1: return require('./noble1.jpg');\n            case 2: return require('./noble2.jpg');\n            case 3: return require('./noble3.jpg');\n            case 4: return require('./noble4.jpg');\n            case 5: return require('./noble5.jpg');\n            case 6: return require('./noble6.jpg');\n            case 7: return require('./noble7.jpg');\n            case 8: return require('./noble8.jpg');\n            case 9: return require('./noble9.jpg');\n            case 10: return require('./noble10.jpg');\n        }\n    };\n\n    const cardHeight = hp(8) * (props.scale || 1);\n\n    return <TouchableOpacity\n        disabled={!props.isSelectable}\n        onPress={props.onPress}\n        style={[{\n            height: cardHeight,\n            width: cardHeight,\n            borderRadius: cardHeight * 0.05,\n            borderWidth: 1,\n            borderColor: 'white',\n            backgroundColor: 'white',\n        }, props.style, props.isSelectable && {\n            shadowColor: \"white\",\n            shadowRadius: cardHeight * 0.1,\n            shadowOpacity: 1,\n            shadowOffset: { width: 0, height: 0 },\n        }]}><View style={{ flex: 1, overflow: \"hidden\", borderRadius: cardHeight * 0.05, }}>\n            <ImageBackground\n                style={{\n                    backgroundColor: \"#cea56e\",\n                    flex: 1,\n                    overflow: \"hidden\",\n                    flexDirection: \"row\"\n                }}\n                source={nobleIndexToNobleImage(props.nobleIndex)}>\n                <View style={{ flex: 1, flexDirection: \"column\", alignItems: \"center\", backgroundColor: \"rgba(255, 255, 255, 0.7)\" }}>\n                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n                        <Text style={{\n                            textAlign: \"center\",\n                            fontSize: cardHeight * 0.25,\n                            color: \"white\",\n                            fontWeight: \"800\",\n                            textShadowRadius: cardHeight * 0.01,\n                            textShadowColor: \"black\",\n                            textShadowOffset: { width: 0, height: 0 },\n                            flex: 1,\n                        }}>\n                            {props.prestige}\n                        </Text>\n                    </View>\n\n                    {props.cost.map(({ color, count }) => {\n                        if (count === 0) return;\n                        return <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n                            <ImageBackground style={{\n                                height: cardHeight * 0.2,\n                                width: cardHeight * 0.2 * 0.7,\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                overflow: \"hidden\",\n                            }} source={colorToCostImage(color)} resizeMethod=\"scale\" imageStyle={{\n                                height: cardHeight,\n                                width: cardHeight,\n                                top: -cardHeight / 2,\n                                left: -cardHeight / 2,\n                            }} >\n                                <Text style={{\n                                    textAlign: \"center\",\n                                    fontSize: cardHeight * 0.12,\n                                    fontWeight: \"800\",\n                                    color: \"white\",\n                                    textShadowRadius: cardHeight * 0.01,\n                                    textShadowColor: \"black\",\n                                    textShadowOffset: { width: 0, height: 0 },\n                                    flex: 1,\n                                }}>\n                                    {count}\n                                </Text>\n                            </ImageBackground>\n                        </View>;\n                    })}\n                </View>\n                <View style={{ flex: 3, backgroundColor: \"rgba(128, 128, 128, 0.3)\" }}></View>\n            </ImageBackground>\n        </View>\n    </TouchableOpacity>;\n};\n\nconst PlayerArea: React.FunctionComponent<{\n    coins: { white: number, black: number, red: number, blue: number, green: number, gold: number; },\n    coinsSelectable?: boolean,\n    side: \"left\" | \"bottom\" | \"right\",\n    name?: string,\n    isTurn?: boolean,\n    cards?: {\n        blue?: number,\n        red?: number,\n        green?: number,\n        white?: number,\n        black?: number,\n    },\n    reservedCards?: number[],\n    prestige?: number,\n    onCoinPress?: any,\n}> = (props) => {\n    const scale = 1.2;\n    const areaWidth = Math.min(wp(40), hp(60)) * scale;\n    return <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\" }}>\n        <View style={{ flex: 1, alignItems: \"center\" }}>\n            <View style={{\n                width: areaWidth,\n                height: areaWidth / 3.5,\n                backgroundColor: props.isTurn ? \"#587c9e\" : \"#204260\",\n                borderRadius: wp(1) * scale,\n                overflow: \"hidden\",\n                flexDirection: \"row\",\n                transform: [{ rotate: props.side === \"bottom\" ? \"\" : (props.side === \"left\" ? \"90deg\" : \"-90deg\") }]\n            }}>\n                <View style={{ flex: 1, alignItems: \"center\" }}>\n                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n                        <Text style={{\n                            textAlign: \"center\",\n                            backgroundColor: \"goldenrod\",\n                            borderRadius: areaWidth * 0.01,\n                            overflow: \"hidden\",\n                            padding: areaWidth * 0.01,\n                            fontSize: areaWidth * 0.04,\n                            fontWeight: \"800\",\n                            color: \"white\",\n                            width: areaWidth * 0.07,\n                            textShadowRadius: areaWidth * 0.01,\n                            textShadowColor: \"black\",\n                            textShadowOffset: { width: 0, height: 0 },\n                        }}>{props.prestige || 0}</Text>\n                    </View>\n                    <View style={{\n                        flex: 2,\n                    }}>\n                        <Text style={{\n                            transform: [{ rotateZ: \"-90deg\" }],\n                            overflow: \"hidden\",\n                            marginTop: areaWidth * 0.08,\n                            width: areaWidth * 0.17,\n                            fontSize: areaWidth * 0.02,\n                            fontWeight: \"800\",\n                            color: \"white\",\n                            textShadowRadius: areaWidth * 0.01,\n                            textShadowColor: \"black\",\n                            textShadowOffset: { width: 0, height: 0 },\n                        }}>{props.name}</Text>\n                    </View>\n                </View>\n                <View style={{ flex: 10 }}>\n                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n                        {\n                            [\n                                [\"blue\", props.coins.blue],\n                                [\"red\", props.coins.red],\n                                [\"green\", props.coins.green],\n                                [\"white\", props.coins.white],\n                                [\"black\", props.coins.black],\n                                [\"gold\", props.coins.gold],\n                            ].map(([color, count]: [CoinColor, number]) => {\n                                return <View\n                                    style={{\n                                        flex: 1,\n                                        alignItems: \"center\",\n                                    }}>\n                                    <Coin color={color} count={count} scale={0.6 * scale} isSelectable={count > 0 && props.coinsSelectable} onPress={() => { props.onCoinPress(color) }} />\n                                </View>;\n                            })\n                        }\n                    </View>\n                    <View style={{\n                        flex: 2,\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                    }}>\n                        {\n                            [\n                                [\"blue\", props.cards?.blue],\n                                [\"red\", props.cards?.red],\n                                [\"green\", props.cards?.green],\n                                [\"white\", props.cards?.white],\n                                [\"black\", props.cards?.black],\n                            ].map(([color, count]: [CardColor, number]) => {\n                                return <View\n                                    style={{\n                                        flex: 1,\n                                        alignItems: \"center\",\n                                    }}>\n                                    <Card color={color} scale={0.6 * scale} count={count} />\n                                </View>;\n                            })\n                        }\n                        <View style={{ flex: 1 }}>\n                            <View\n                                style={{\n                                    flex: 1,\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                    paddingHorizontal: Math.min(wp(2), hp(3)) * scale * 1.2,\n                                }}>\n                                {\n                                    props.reservedCards?.map(level => {\n                                        return <View style={[{ flex: 1, alignItems: \"center\", direction: \"ltr\", backgroundColor: \"black\" }]}>\n                                            <Card prestige={level} scale={0.6 * scale} />\n                                        </View>;\n                                    })\n                                }\n                            </View>\n                        </View>\n                    </View>\n                </View>\n            </View>\n        </View>\n    </View>;\n};\n\nexport default class SplendorBoard extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        let faceupCards = [];\n        for (let i = 0; i < 3; i++) {\n            faceupCards.push(new Array(4).fill(null));\n        }\n\n        this.state = {\n            buttons: [[\"Back\", \"back\", true]],\n            faceupCards: [],\n            coins: { white: 0, black: 0, red: 0, blue: 0, green: 0, gold: 0 },\n            coinsSelectable: { white: false, black: false, red: false, blue: false, green: false, gold: false },\n            pilesSelectable: [false, false, false],\n            pilesVisible: [false, false, false],\n            nobles: [],\n            displayText: \"Connecting to the server\",\n            playerStates: []\n        };\n    }\n\n    updateBoard(state: State) {\n        this.setState(state);\n    }\n\n    render() {\n        return <SafeAreaView style={{\n            flex: 1,\n            backgroundColor: \"#1c2147\",\n        }}>\n            <View style={{ flex: 3, flexDirection: \"row\" }}>\n                <View style={{ flex: 1 }}>\n                    {this.state.playerStates.length > 2 &&\n                        <PlayerArea side=\"left\"\n                            onCoinPress={(color) => { this.props.onAction({ type: \"select-player-coin\", color }); }}\n                            name={this.state.playerStates[this.state.playerStates.length - 1].name}\n                            isTurn={this.state.playerStates[this.state.playerStates.length - 1].isTurn}\n                            coins={this.state.playerStates[this.state.playerStates.length - 1].coins}\n                            coinsSelectable={this.state.playerStates[this.state.playerStates.length - 1].coinsSelectable}\n                            cards={this.state.playerStates[this.state.playerStates.length - 1].cards}\n                            reservedCards={this.state.playerStates[this.state.playerStates.length - 1].reservedCards}\n                            prestige={this.state.playerStates[this.state.playerStates.length - 1].prestige} />\n                    }\n                </View>\n                <View style={{ flex: 4, backgroundColor: \"#587c9e\" }}>\n                    <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\" }}>\n                        {this.state.buttons.map(([title, action, enabled]) => {\n                            return <Button title={title} disabled={!enabled} onPress={() => {\n                                if (action === \"back\") {\n                                    this.props.onBack();\n                                } else {\n                                    this.props.onAction({ \"type\": action });\n                                }\n                            }} />;\n                        })}\n                    </View>\n                    <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\" }}>\n                        <Text style={{\n                            textAlign: \"center\",\n                            fontSize: wp(2),\n                            fontWeight: \"800\",\n                            color: \"white\",\n                            textShadowColor: \"black\",\n                            textShadowOffset: { width: 0, height: 0 },\n                            flex: 1,\n                        }}>{this.state.displayText}</Text>\n                    </View>\n                    <View style={{ flex: 10, flexDirection: \"row\" }}>\n                        <View style={{ flex: 10 }}>\n                            <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n                                {\n                                    ([\n                                        [this.state.coins.blue, this.state.coinsSelectable.blue, \"blue\"],\n                                        [this.state.coins.red, this.state.coinsSelectable.red, \"red\"],\n                                        [this.state.coins.green, this.state.coinsSelectable.green, \"green\"],\n                                        [this.state.coins.white, this.state.coinsSelectable.white, \"white\"],\n                                        [this.state.coins.black, this.state.coinsSelectable.black, \"black\"],\n                                        [this.state.coins.gold, this.state.coinsSelectable.gold, \"gold\"],\n                                    ] as [number, boolean, CoinColor][]).map(\n                                        ([count, isSelectable, color]) => {\n                                            return <View style={{ flex: 1, alignItems: \"center\" }}>\n                                                <Coin\n                                                    isSelectable={isSelectable}\n                                                    color={color}\n                                                    count={count}\n                                                    onPress={() => { this.props.onAction({ type: \"select-coin\", color }) }} />\n                                            </View>\n\n                                        }\n                                    )\n                                }\n                            </View>\n                            <View style={{ flex: 8, flexDirection: \"column\" }}>\n                                {this.state.faceupCards.map((row, rowIndex) => {\n                                    return <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n                                        <View style={{ flex: 1, alignItems: \"center\" }}>{this.state.pilesVisible[2 - rowIndex] && <Card isSelectable={this.state.pilesSelectable[2 - rowIndex]} onPress={() => { this.props.onAction({ type: \"select-pile-card\", level: 3 - rowIndex }) }} prestige={3 - rowIndex} />}</View>\n                                        {row.map((card, colIndex) => {\n                                            return <View style={{ flex: 1, alignItems: \"center\" }}>{card && <Card isSelectable={card.isSelectable} onPress={() => { this.props.onAction({ type: \"select-board-card\", rowIndex, colIndex }) }} prestige={card.prestige} color={card.color} cost={card.cost} />}</View>;\n                                        })}\n                                    </View>;\n                                })}\n                            </View>\n                        </View>\n                        <View style={{ flex: 2, alignItems: \"center\" }}>\n                            {this.state.nobles.map((noble, index) => {\n                                return <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\" }}>\n                                    <View style={{ flex: 1, alignItems: \"center\" }}>\n                                        {noble && <Noble cost={noble.cost} prestige={noble.prestige} isSelectable={noble.isSelectable} onPress={() => { this.props.onAction({ type: \"select-noble-card\", index }) }} nobleIndex={noble.nobleIndex} />}\n                                    </View>\n                                </View>;\n                            })}\n                        </View>\n                    </View>\n                </View>\n                <View style={{ flex: 1 }}>\n                    {this.state.playerStates.length > 2 &&\n                        <PlayerArea side=\"right\"\n                            onCoinPress={(color) => { this.props.onAction({ type: \"select-player-coin\", color }); }}\n                            name={this.state.playerStates[this.state.playerStates.length - 2].name}\n                            isTurn={this.state.playerStates[this.state.playerStates.length - 2].isTurn}\n                            coins={this.state.playerStates[this.state.playerStates.length - 2].coins}\n                            coinsSelectable={this.state.playerStates[this.state.playerStates.length - 2].coinsSelectable}\n                            cards={this.state.playerStates[this.state.playerStates.length - 2].cards}\n                            reservedCards={this.state.playerStates[this.state.playerStates.length - 2].reservedCards}\n                            prestige={this.state.playerStates[this.state.playerStates.length - 2].prestige} />\n                    }\n                </View>\n            </View>\n            <View style={{ flex: 1, flexDirection: \"row\" }}>\n                {this.state.playerStates.length > 0 &&\n                    <PlayerArea side=\"bottom\"\n                        onCoinPress={(color) => { this.props.onAction({ type: \"select-player-coin\", color }); }}\n                        name={this.state.playerStates[0].name}\n                        isTurn={this.state.playerStates[0].isTurn}\n                        coins={this.state.playerStates[0].coins}\n                        coinsSelectable={this.state.playerStates[0].coinsSelectable}\n                        cards={this.state.playerStates[0].cards}\n                        reservedCards={this.state.playerStates[0].reservedCards}\n                        prestige={this.state.playerStates[0].prestige} />\n                }\n                {(this.state.playerStates.length === 2 || this.state.playerStates.length === 4) &&\n                    <PlayerArea side=\"bottom\"\n                        onCoinPress={(color) => { this.props.onAction({ type: \"select-player-coin\", color }); }}\n                        name={this.state.playerStates[1].name}\n                        isTurn={this.state.playerStates[1].isTurn}\n                        coins={this.state.playerStates[1].coins}\n                        coinsSelectable={this.state.playerStates[1].coinsSelectable}\n                        cards={this.state.playerStates[1].cards}\n                        reservedCards={this.state.playerStates[1].reservedCards}\n                        prestige={this.state.playerStates[1].prestige} />\n                }\n            </View>\n        </SafeAreaView>;\n    }\n};\n","import React from 'react';\nimport { View, Text, SafeAreaView, ScrollView, Dimensions, TouchableOpacity } from 'react-native';\nimport { ScreenOrientation } from 'expo';\nimport { Card, CardInfo } from './SplendorBoard';\nimport { heightPercentageToDP } from \"react-native-responsive-screen\";\n\ntype Props = {\n    onAction(action: any): Promise<void>;\n    onBack(): void;\n};\n\ntype State = {\n    hand: CardInfo[],\n    displayText: string,\n};\n\nexport default class SplendorHand extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            hand: [],\n            displayText: \"Connecting to server\",\n        };\n    }\n\n    async componentDidMount() {\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\n    }\n\n    async componentWillUnmount() {\n        await ScreenOrientation.unlockAsync();\n    }\n\n    updateHand(hand: any) {\n        this.setState(hand);\n    }\n\n    renderHand() {\n        return [this.state.hand.map((card, i) => <View style={{ flex: 1, marginVertical: heightPercentageToDP(4), alignItems: \"center\" }}>{\n            <Card prestige={card.prestige} cost={card.cost} color={card.color} isSelectable={card.isSelectable} scale={1.8} onPress={() => this.props.onAction({ type: \"select-hand-card\", index: i })} />\n        }</View>), new Array(3 - this.state.hand.length).fill(null).map(_ => <View style={{ flex: 1 }} />)];\n    }\n\n    render() {\n        return <SafeAreaView style={{\n            flex: 1,\n            backgroundColor: \"#1c2147\",\n        }}>\n            <View style={{ flex: 3, flexDirection: \"row\" }}>\n                {this.renderHand()}\n            </View>\n            <View style={{ flex: 1 }}>\n                <Text style={{ flex: 1, textAlign: \"center\", lineHeight: 80, fontSize: 35, color: \"white\", textShadowColor: \"black\", textShadowRadius: 10, }}>{this.state.displayText}</Text>\n            </View>\n        </SafeAreaView>;\n    }\n}\n","import React from 'react';\nimport BaseGameScreen, { GameScreenProps } from \"../BaseGameScreen\";\nimport SplendorHand from \"./SplendorHand\";\nimport SplendorBoard from \"./SplendorBoard\";\n\nexport default class SplendorScreen extends React.Component<GameScreenProps> implements BaseGameScreen {\n    board: React.RefObject<SplendorBoard>;\n    hand: React.RefObject<SplendorHand>;\n\n    constructor(props: GameScreenProps) {\n        super(props);\n        this.board = React.createRef();\n        this.hand = React.createRef();\n    }\n\n    updateScreen(content: any) {\n        if (this.props.playerName === \"board\") {\n            this.board.current.updateBoard(content);\n        } else {\n            this.hand.current.updateHand(content);\n        }\n    }\n\n    render() {\n        if (this.props.playerName === \"board\") {\n            return <SplendorBoard ref={this.board} onAction={this.props.onAction} onBack={this.props.onBack} />;\n        } else {\n            return <SplendorHand ref={this.hand} onAction={this.props.onAction} onBack={this.props.onBack} />;\n        }\n    }\n};\n","import React from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nimport { SERVER_URI } from '../../config/constants';\nimport JaipurScreen from \"../../components/jaipur/JaipurScreen\";\nimport CodenamesScreen from \"../../components/codenames/CodenamesScreen\";\nimport SplendorScreen from \"../../components/splendor/SplendorScreen\";\n\ntype Props = {\n    playerName: string,\n    gameCode: string,\n    gameName: string,\n    password: string,\n    onBack: () => void,\n};\n\nexport default class GameScreenImpl extends React.Component<Props> {\n    socket: SocketIOClient.Socket;\n    screen: React.RefObject<JaipurScreen>;\n\n    constructor(props: Props) {\n        super(props);\n        this.screen = React.createRef();\n    }\n\n    componentDidMount() {\n        this.socket = socketIOClient(SERVER_URI, {\n            query: {\n                playerName: this.props.playerName,\n                gameCode: this.props.gameCode,\n                gameName: this.props.gameName,\n                password: this.props.password,\n            },\n        });\n        this.socket.on(\"content\", (screen: any) => {\n            if (Object.keys(screen).length === 0) {\n                return;\n            }\n            this.screen.current.updateScreen(screen);\n        });\n    }\n\n    componentWillUnmount() {\n        this.socket.close();\n    }\n\n    onAction = async (action: any) => {\n        this.socket.emit(\"action\", action);\n    };\n\n    render() {\n        const Impl = (() => {\n            switch (this.props.gameName) {\n                case 'codenames':\n                    return CodenamesScreen;\n                case 'jaipur':\n                    return JaipurScreen;\n                // case 'sequence':\n                //     return SequenceBoard;\n                case 'splendor':\n                    return SplendorScreen;\n            }\n        })();\n        return <Impl\n            ref={this.screen}\n            playerName={this.props.playerName}\n            onAction={this.onAction}\n            onBack={this.props.onBack} />;\n    }\n};\n","import React from 'react';\nimport { RouteProp } from \"@react-navigation/native\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\n\nimport { RootStackParamList } from \"../../../App\";\nimport GameScreenImpl from \"./GameScreenImpl\";\n\ntype GameScreenSceneNavigationProp = StackNavigationProp<RootStackParamList, 'GameScreen'>;\ntype GameScreenSceneRouteProp = RouteProp<RootStackParamList, 'GameScreen'>;\ntype GameScreenProps = { navigation: GameScreenSceneNavigationProp, route: GameScreenSceneRouteProp; };\n\nconst GameScreen: React.FunctionComponent<GameScreenProps> = (props) => {\n    return <GameScreenImpl\n        playerName={props.route.params.playerName}\n        gameCode={props.route.params.gameCode}\n        gameName={props.route.params.gameName}\n        password={props.route.params.password}\n        onBack={props.navigation.goBack} />;\n};\n\nexport default GameScreen;","import 'react-native-gesture-handler';\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from \"./app/scenes/Home\";\nimport GameScreen from \"./app/scenes/GameScreen\";\n\nconsole.disableYellowBox = true;\n\nexport type RootStackParamList = {\n  Home: undefined;\n  GameScreen: { playerName: string, gameName: string; gameCode: string; password: string; };\n};\nconst RootStack = createStackNavigator<RootStackParamList>();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <NavigationContainer>\n        <RootStack.Navigator headerMode=\"screen\">\n          <RootStack.Screen name=\"Home\" component={Home} options={{ headerTitle: \"All A-Board\" }} />\n          <RootStack.Screen name=\"GameScreen\" component={GameScreen} options={{ headerShown: false }} />\n        </RootStack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/bonus_3_token.b7d6048e.png\";","module.exports = __webpack_public_path__ + \"static/media/bonus_4_token.9dbb865c.png\";","module.exports = __webpack_public_path__ + \"static/media/bonus_5_token.0b15f02d.png\";","module.exports = __webpack_public_path__ + \"static/media/camel_token.f1239e82.png\";","module.exports = __webpack_public_path__ + \"static/media/cloth_token.b45112dd.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond_token.eb1081d0.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_token.31dad298.png\";","module.exports = __webpack_public_path__ + \"static/media/leather_token.027cb7e8.png\";","module.exports = __webpack_public_path__ + \"static/media/seal_of_excellence.c17ff76a.png\";","module.exports = __webpack_public_path__ + \"static/media/silver_token.404ac8cc.png\";","module.exports = __webpack_public_path__ + \"static/media/spice_token.9a70cbc9.png\";","module.exports = __webpack_public_path__ + \"static/media/camel-char.87d3d7f8.png\";","module.exports = __webpack_public_path__ + \"static/media/bystander.75a5f2bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/agent-red.211f9441.jpg\";","module.exports = __webpack_public_path__ + \"static/media/agent-blue.5e1826cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/assasin.411b1958.jpg\";","module.exports = __webpack_public_path__ + \"static/media/black_card1.6d6f8899.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_card1.52bf5902.png\";","module.exports = __webpack_public_path__ + \"static/media/green_card1.adc096cb.png\";","module.exports = __webpack_public_path__ + \"static/media/red_card1.deb918fc.png\";","module.exports = __webpack_public_path__ + \"static/media/white_card1.044cb336.png\";","module.exports = __webpack_public_path__ + \"static/media/black_gem.b86d9d8a.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_gem.09cccc50.png\";","module.exports = __webpack_public_path__ + \"static/media/green_gem.06f8d9c1.png\";","module.exports = __webpack_public_path__ + \"static/media/red_gem.55a9e0e9.png\";","module.exports = __webpack_public_path__ + \"static/media/white_gem.280f28cf.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_gem.9b30a3de.png\";","module.exports = __webpack_public_path__ + \"static/media/black_cost.9f08022a.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_cost.40543953.png\";","module.exports = __webpack_public_path__ + \"static/media/green_cost.a986c4ed.png\";","module.exports = __webpack_public_path__ + \"static/media/red_cost.cf8936a1.png\";","module.exports = __webpack_public_path__ + \"static/media/white_cost.6e2a2667.png\";","module.exports = __webpack_public_path__ + \"static/media/back_card1.78e66fa5.png\";","module.exports = __webpack_public_path__ + \"static/media/back_card2.88d2212c.png\";","module.exports = __webpack_public_path__ + \"static/media/back_card3.174b6eea.png\";","module.exports = __webpack_public_path__ + \"static/media/noble1.5c6d5d53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble2.1d04e8dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble3.f6e7d0fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble4.cc02011b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble5.f234e2c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble6.439954d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble7.2500e4e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble8.c3b81d52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble9.ef78a611.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble10.0d98c3d2.jpg\";"],"sourceRoot":""}