{"version":3,"sources":["app/components/jaipur/camel_card.png","app/components/jaipur/cloth_card.png","app/components/jaipur/cover_card.png","app/components/jaipur/diamond_card.png","app/components/jaipur/gold_card.png","app/components/jaipur/leather_card.png","app/components/jaipur/silver_card.png","app/components/jaipur/spice_card.png","app/components/jaipur/coin.png","app/scenes/Home/styles.tsx","app/config/constants.tsx","app/components/Button.tsx","app/scenes/Home/index.tsx","app/components/jaipur/styles.tsx","app/components/jaipur/utils.tsx","app/components/jaipur/JaipurHand.tsx","app/components/jaipur/renderBoardMat.tsx","app/components/jaipur/JaipurBoard.tsx","app/components/jaipur/JaipurScreen.tsx","app/components/codenames/CodenamesScreen.tsx","app/components/splendor/SplendorBoard.tsx","app/components/splendor/SplendorHand.tsx","app/components/splendor/SplendorScreen.tsx","app/scenes/GameScreen/GameScreenImpl.tsx","app/scenes/GameScreen/index.tsx","App.tsx","web-build/register-service-worker.js","app/components/jaipur/bonus_3_token.png","app/components/jaipur/bonus_4_token.png","app/components/jaipur/bonus_5_token.png","app/components/jaipur/camel_token.png","app/components/jaipur/cloth_token.png","app/components/jaipur/diamond_token.png","app/components/jaipur/gold_token.png","app/components/jaipur/leather_token.png","app/components/jaipur/seal_of_excellence.png","app/components/jaipur/silver_token.png","app/components/jaipur/spice_token.png","app/components/jaipur/camel-char.png","app/components/codenames/bystander.jpg","app/components/codenames/agent-red.jpg","app/components/codenames/agent-blue.jpg","app/components/codenames/assasin.jpg","app/components/splendor/black_card1.png","app/components/splendor/blue_card1.png","app/components/splendor/green_card1.png","app/components/splendor/red_card1.png","app/components/splendor/white_card1.png","app/components/splendor/black_gem.png","app/components/splendor/blue_gem.png","app/components/splendor/green_gem.png","app/components/splendor/red_gem.png","app/components/splendor/white_gem.png","app/components/splendor/gold_gem.png","app/components/splendor/black_cost.png","app/components/splendor/blue_cost.png","app/components/splendor/green_cost.png","app/components/splendor/red_cost.png","app/components/splendor/white_cost.png","app/components/splendor/back_card1.png","app/components/splendor/back_card2.png","app/components/splendor/back_card3.png","app/components/splendor/noble1.jpg","app/components/splendor/noble2.jpg","app/components/splendor/noble3.jpg","app/components/splendor/noble4.jpg","app/components/splendor/noble5.jpg","app/components/splendor/noble6.jpg","app/components/splendor/noble7.jpg","app/components/splendor/noble8.jpg","app/components/splendor/noble9.jpg","app/components/splendor/noble10.jpg"],"names":["module","exports","styles","StyleSheet","create","container","margin","input","marginTop","marginBottom","height","borderColor","borderWidth","backgroundColor","separator","marginVertical","borderBottomColor","borderBottomWidth","hairlineWidth","SERVER_URI","Button","props","rootProps","disabled","View","style","children","TouchableOpacity","onPress","flex","display","flexDirection","alignItems","borderRadius","Text","color","fontWeight","fontSize","textAlign","padding","title","Home","state","playerName","gameCode","selectedGame","password","SafeAreaView","TextInput","value","editable","onChangeText","setState","this","autoCorrect","textContentType","autoCapitalize","autoCompleteType","Picker","selectedValue","onValueChange","itemValue","itemIndex","Item","label","navigation","navigate","gameName","React","Component","WIDTH","scale_pct","undefined","HEIGHT","MIN_WIDTH_HEIGHT","Math","min","Dimensions","get","width","RANGE","lo","hi","len","Array","fill","map","_","i","mat","mat_strips","position","mat_strip_circle","round","mat_card","paddingHorizontal","paddingTop","paddingBottom","mat_discard_pile","textAlignVertical","mat_card_glow","shadowColor","shadowRadius","shadowOpacity","mat_grey_cover","right","top","mat_goods_token_track","mat_bonus_token_track","card","shadowOffset","token","overflow","buttonPanel","left","justifyContent","alignContent","goodsTokenTrack","bottom","bonusTokenTrack","Card","cardTypeToImage","require","isSelectable","flip","transform","rotateX","rotateY","ImageBackground","source","type","count","textShadowRadius","textShadowColor","selected","lineHeight","Coin","Token","tokenTypeToImage","rotateZ","JaipurHand","hand","handIsSelected","displayText","ScreenOrientation","lockAsync","OrientationLock","LANDSCAPE","unlockAsync","onAction","index","isSelected","Image","resizeMode","renderCard","marginHorizontal","ScrollView","horizontal","renderHand","BoardMapStrip","BoardMapStripCircle","BoardMatCard","glow","BoardCamel","opacity","BoardGoodsTokenTrack","BoardBonusTokenTrack","JaipurBoard","goodsTokenTrackTop","goodsTokenTrackBottom","bonusTokenTrackTop","bonusTokenTrackBottom","playerStates","sealsOfExcellence","camels","hasCamelToken","rupees","goodsTokens","diamond","gold","silver","cloth","spice","leather","bonusTokens","bonus_3","bonus_4","bonus_5","market","marketIsSelected","marketIsSelectable","topDiscard","drawPileHasCards","camelToken","currentPlayerIndex","buttons","players","renderBoardMat","onBack","j","playerIndex","action","length","getButton","JaipurScreen","board","createRef","content","current","updateBoard","updateHand","ref","CodenamesScreen","red","redCodemaster","blue","blueCodemaster","playerNameDisplay","status","renderPlayerList","team","teamName","codemaster","paddingVertical","scaleWidth","scaleHeight","scale","scaledSize","size","ceil","AspectView","useState","layout","setLayout","flatten","aspectRatio","push","onLayout","hp","nativeEvent","console","log","row","rowIndex","cell","colIndex","kind","wp","marginLeft","fontStyle","borderBottomLeftRadius","borderBottomRightRadius","enabled","renderPlayerSelection","renderBoard","colorToCardImage","colorToGemImage","colorToCostImage","backToCardImage","level","cardHeight","cardContents","paddingLeft","textShadowOffset","prestige","marginRight","cost","Object","entries","filter","val","white","green","black","resizeMethod","coinHeight","imageStyle","Noble","nobleIndexToNobleImage","nobleIndex","PlayerArea","areaWidth","isTurn","rotate","side","name","coins","coinsSelectable","onCoinPress","cards","reservedCards","direction","SplendorBoard","faceupCards","pilesSelectable","pilesVisible","nobles","noble","SplendorHand","heightPercentageToDP","SplendorScreen","GameScreenImpl","a","async","socket","emit","screen","socketIOClient","query","on","keys","updateScreen","close","Impl","GameScreen","route","params","goBack","disableYellowBox","RootStack","createStackNavigator","App","NavigationContainer","Navigator","headerMode","Screen","component","options","headerTitle","headerShown","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.5a7cd66b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camel_card.a1e5c2c9.png\";","module.exports = __webpack_public_path__ + \"static/media/cloth_card.0d2307d0.png\";","module.exports = __webpack_public_path__ + \"static/media/cover_card.3f00f8c9.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond_card.04b067c8.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_card.f45f8f0b.png\";","module.exports = __webpack_public_path__ + \"static/media/leather_card.a9ca0b3b.png\";","module.exports = __webpack_public_path__ + \"static/media/silver_card.d1251adf.png\";","module.exports = __webpack_public_path__ + \"static/media/spice_card.5d184b27.png\";","module.exports = __webpack_public_path__ + \"static/media/coin.f17a00ff.png\";","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        margin: 10,\n    },\n    input: {\n        marginTop: 5,\n        marginBottom: 8,\n        height: 40,\n        borderColor: '#7a42f4',\n        borderWidth: 1,\n        backgroundColor: 'white',\n    },\n    separator: {\n        marginVertical: 8,\n        borderBottomColor: '#737373',\n        borderBottomWidth: StyleSheet.hairlineWidth,\n    },\n});\n\nexport default styles;","// export const SERVER_URI = \"http://192.168.50.173:3000\";\r\n// export const SERVER_URI = \"http://192.168.50.173:3000\";\r\nexport const SERVER_URI = \"https://all-aboard-server.amolbhave.com\";","import React from 'react';\r\nimport { StyleProp, ViewStyle, View, Text, TouchableOpacity, GestureResponderEvent } from \"react-native\";\r\n\r\nconst Button: React.FunctionComponent<{\r\n    flip?: boolean,\r\n    title: string,\r\n    disabled?: boolean,\r\n    onPress?: (event: GestureResponderEvent) => void,\r\n    style?: StyleProp<ViewStyle>,\r\n}> = (props) => {\r\n    const RootElement: React.FunctionComponent<{ style: StyleProp<ViewStyle>; }> = (rootProps) => {\r\n        return !props.disabled ?\r\n            <TouchableOpacity style={rootProps.style} onPress={props.onPress}>{rootProps.children}</TouchableOpacity> :\r\n            <View style={rootProps.style}>{rootProps.children}</View>;\r\n    };\r\n\r\n\r\n    return <RootElement\r\n        style={[{\r\n            backgroundColor: props.disabled ? \"grey\" : \"#7a42f4\",\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            margin: 5,\r\n            borderRadius: 5,\r\n            borderWidth: 3,\r\n        }, props.style]}\r\n    >\r\n        <Text style={{\r\n            flex: 1,\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n            fontSize: 19,\r\n            textAlign: \"center\",\r\n            padding: 4,\r\n        }}>\r\n            {props.title}\r\n        </Text>\r\n    </RootElement>;\r\n};\r\n\r\nexport default Button;","import React from 'react';\nimport { TextInput, SafeAreaView, View, Picker, Text } from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport { RootStackParamList } from '../../../App';\nimport styles from './styles';\nimport { SERVER_URI } from \"../../config/constants\";\nimport Button from \"../../components/Button\";\n\ntype HomeSceneNavigationProp = StackNavigationProp<RootStackParamList, 'Home'>;\ntype Props = { navigation: HomeSceneNavigationProp; };\n\ntype State = {\n    playerName: string;\n    gameCode: string;\n    selectedGame: string;\n    password: string;\n};\n\nexport default class Home extends React.Component<Props, State> {\n    constructor(props: Readonly<Props>) {\n        super(props);\n\n        this.state = {\n            playerName: \"\",\n            gameCode: \"\",\n            selectedGame: \"\",\n            password: \"\",\n        };\n    }\n\n    render() {\n        return (\n            <SafeAreaView style={styles.container}>\n                <KeyboardAwareScrollView>\n                    <View>\n                        <Text>Server Address</Text>\n                        <TextInput value={SERVER_URI} style={styles.input} editable={false} />\n                    </View>\n                    <View>\n                        <Text>Server Password</Text>\n                        <TextInput\n                            onChangeText={password => this.setState({ password })}\n                            value={this.state.password}\n                            style={styles.input}\n                            autoCorrect={false}\n                            textContentType=\"none\"\n                            autoCapitalize=\"none\"\n                            autoCompleteType=\"off\"\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Text>Game</Text>\n                        <Picker\n                            selectedValue={this.state.selectedGame}\n                            onValueChange={(itemValue, itemIndex) => this.setState({ selectedGame: itemValue })}\n                            style={{ marginTop: 5, marginBottom: 8 }}\n                        >\n                            <Picker.Item label=\"Jaipur\" value=\"jaipur\" />\n                            <Picker.Item label=\"Splendor\" value=\"splendor\" />\n                            <Picker.Item label=\"Codenames\" value=\"codenames\" />\n                        </Picker>\n                    </View>\n                    <View>\n                        <Text>Game Code</Text>\n                        <TextInput\n                            onChangeText={gameCode => this.setState({ gameCode })}\n                            value={this.state.gameCode}\n                            style={styles.input}\n                            autoCorrect={false}\n                            textContentType=\"none\"\n                            autoCapitalize=\"none\"\n                            autoCompleteType=\"off\"\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Button\n                            title=\"Board View\"\n                            disabled={this.state.gameCode === \"\"}\n                            onPress={() => this.props.navigation.navigate('GameScreen', { playerName: 'board', gameName: this.state.selectedGame, gameCode: this.state.gameCode, password: this.state.password })}\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Text>Player Name</Text>\n                        <TextInput\n                            onChangeText={playerName => this.setState({ playerName })}\n                            value={this.state.playerName}\n                            style={styles.input}\n                        />\n                        <Button\n                            title=\"Player View\"\n                            disabled={this.state.playerName === \"\" || this.state.playerName === \"board\" || this.state.gameCode === \"\"}\n                            onPress={() => this.props.navigation.navigate('GameScreen', { playerName: this.state.playerName, gameName: this.state.selectedGame, gameCode: this.state.gameCode, password: this.state.password })}\n                        />\n                    </View>\n                </KeyboardAwareScrollView>\n            </SafeAreaView>);\n    }\n}\n","// @ts-ignore\r\nimport { StyleSheet, Dimensions, useWindowDimensions } from 'react-native';\r\n\r\nexport function WIDTH(scale_pct?: number) {\r\n    if (scale_pct === null || scale_pct === undefined) { return undefined; }\r\n    return scale_pct + \"%\";\r\n    // return useWindowDimensions().width * scale_pct / 100;\r\n}\r\nexport function HEIGHT(scale_pct?: number) {\r\n    if (scale_pct === null || scale_pct === undefined) { return undefined; }\r\n    return scale_pct + \"%\";\r\n    // return useWindowDimensions().height * scale_pct / 100;\r\n}\r\nexport function MIN_WIDTH_HEIGHT(scale_pct?: number) {\r\n    return Math.min(Dimensions.get('window').width, Dimensions.get('window').height) * scale_pct / 100;\r\n    // return Math.min(useWindowDimensions().height, useWindowDimensions().width) * scale_pct / 100;\r\n}\r\n\r\nexport function RANGE(lo: number, hi: number, len: number) {\r\n    return new Array<number>(len).fill(null).map((_, i) => lo + i * (hi - lo) / (len - 1));\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mat: {\r\n        flex: 1,\r\n        backgroundColor: \"#5aa57c\",\r\n    },\r\n    mat_strips: {\r\n        backgroundColor: \"#458779\",\r\n        height: \"4%\",\r\n        position: \"absolute\",\r\n    },\r\n    mat_strip_circle: {\r\n        backgroundColor: \"#458779\",\r\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\r\n        width: Dimensions.get('window').width * 0.07,\r\n        height: Dimensions.get('window').width * 0.07,\r\n        position: \"absolute\",\r\n    },\r\n    mat_card: {\r\n        position: \"absolute\",\r\n        backgroundColor: \"#4ca68a\",\r\n        borderColor: \"#448c72\",\r\n        borderWidth: 3,\r\n        borderRadius: 15,\r\n        width: \"10%\",\r\n        height: \"20%\",\r\n        paddingHorizontal: \"5%\",\r\n        paddingTop: \"5%\",\r\n        paddingBottom: \"2%\",\r\n    },\r\n    mat_discard_pile: {\r\n        position: \"relative\",\r\n        backgroundColor: \"rgba(89,90,79,0.5)\",\r\n        flex: 1,\r\n        borderRadius: 15,\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n    },\r\n    mat_card_glow: {\r\n        shadowColor: \"gold\",\r\n        shadowRadius: 15,\r\n        shadowOpacity: 0.6\r\n    },\r\n    mat_grey_cover: {\r\n        backgroundColor: \"#595a4f\",\r\n        right: \"2%\",\r\n        width: \"11%\",\r\n        height: \"65%\",\r\n        top: \"20%\",\r\n        position: \"absolute\",\r\n    },\r\n    mat_goods_token_track: {\r\n        position: \"absolute\",\r\n        backgroundColor: \"#5aa57c\",\r\n        borderColor: \"#448c72\",\r\n        borderWidth: 5,\r\n        right: \"10%\",\r\n        height: Dimensions.get('window').width * 0.06,\r\n        width: \"17%\",\r\n        borderRadius: Math.round(Dimensions.get('window').height) * 0.1 / 2,\r\n    },\r\n    mat_bonus_token_track: {\r\n        position: \"absolute\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"gold\",\r\n        borderWidth: 3,\r\n        right: \"3%\",\r\n        width: Dimensions.get('window').width * 0.06,\r\n        height: Dimensions.get('window').width * 0.06,\r\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\r\n    },\r\n    card: {\r\n        position: \"absolute\",\r\n        width: \"10%\",\r\n        height: \"20%\",\r\n        // width: Dimensions.get('window').width * 0.1,\r\n        // height: Dimensions.get('window').width * 0.2,\r\n        borderWidth: 1,\r\n        borderRadius: 15,\r\n        shadowColor: \"black\",\r\n        shadowRadius: 3,\r\n        shadowOffset: { width: 0, height: 0 },\r\n        shadowOpacity: 0.6,\r\n        backgroundColor: \"white\",\r\n        padding: \"6%\",\r\n        paddingTop: \"7%\",\r\n        paddingBottom: \"3%\",\r\n    },\r\n    token: {\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        shadowColor: \"black\",\r\n        shadowRadius: 3,\r\n        shadowOffset: { width: 0, height: 0 },\r\n        shadowOpacity: 1,\r\n        overflow: \"hidden\",\r\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\r\n        width: Dimensions.get('window').width * 0.06,\r\n        height: Dimensions.get('window').width * 0.06,\r\n        position: \"absolute\",\r\n    },\r\n    buttonPanel: {\r\n        position: \"absolute\",\r\n        left: \"17%\",\r\n        height: \"4.5%\",\r\n        width: \"54%\",\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n    },\r\n    goodsTokenTrack: {\r\n        top: 20,\r\n        bottom: 76.7,\r\n    },\r\n    bonusTokenTrack: {\r\n        top: 30,\r\n        bottom: 67,\r\n    }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport { StyleProp, ViewStyle, View, Image, ImageBackground, Text, Dimensions, TouchableOpacity, GestureResponderEvent } from \"react-native\";\r\nimport styles, { HEIGHT, WIDTH, MIN_WIDTH_HEIGHT } from \"./styles\";\r\n\r\n\r\nexport const Card: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, type: string, count?: number, selected?: boolean, isSelectable?: boolean, disabled?: boolean, onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\r\n    const cardTypeToImage = {\r\n        'camel': require('./camel_card.png'),\r\n        'cloth': require('./cloth_card.png'),\r\n        'cover': require('./cover_card.png'),\r\n        'diamond': require('./diamond_card.png'),\r\n        'gold': require('./gold_card.png'),\r\n        'leather': require('./leather_card.png'),\r\n        'silver': require('./silver_card.png'),\r\n        'spice': require('./spice_card.png'),\r\n    };\r\n\r\n    const RootElement: React.FunctionComponent<{ style: StyleProp<ViewStyle>; }> = (rootProps) => {\r\n        return props.isSelectable ?\r\n            <TouchableOpacity style={rootProps.style} onPress={props.onPress}>{rootProps.children}</TouchableOpacity> :\r\n            <View style={rootProps.style}>{rootProps.children}</View>;\r\n    };\r\n\r\n    return <RootElement style={[styles.card, {\r\n        top: HEIGHT(props.top),\r\n        bottom: HEIGHT(props.bottom),\r\n        left: WIDTH(props.left),\r\n        right: WIDTH(props.right),\r\n    },\r\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }\r\n    ]}>\r\n        <ImageBackground source={cardTypeToImage[props.type]} style={{ width: \"100%\", height: \"100%\" }}>\r\n            {props.count && <Text style={{\r\n                fontSize: 70,\r\n                textAlign: \"center\",\r\n                height: \"100%\",\r\n                color: \"white\",\r\n                fontWeight: \"800\",\r\n                textShadowRadius: 10,\r\n                textShadowColor: \"black\",\r\n                top: \"26%\",\r\n            }}>{props.count}</Text>}\r\n            <View></View>\r\n            {props.selected && <Text style={[{\r\n                textAlign: \"center\",\r\n                textAlignVertical: \"center\",\r\n            } as {\r\n                textAlign: \"center\",\r\n                textAlignVertical: \"center\";\r\n            }, {\r\n                fontSize: MIN_WIDTH_HEIGHT(2),\r\n                color: \"green\",\r\n                left: \"4%\",\r\n                backgroundColor: \"white\",\r\n                width: \"25%\",\r\n                top: \"4%\",\r\n                height: \"16%\",\r\n                lineHeight: 23.5,\r\n                borderRadius: MIN_WIDTH_HEIGHT(1.5),\r\n                overflow: \"hidden\",\r\n                fontWeight: \"800\",\r\n                borderWidth: 3,\r\n                borderColor: \"green\",\r\n                position: \"absolute\",\r\n            }]}>✓</Text>}\r\n        </ImageBackground>\r\n        {/* {!props.disabled && <View style={[styles.card, {\r\n            top: HEIGHT(props.top),\r\n            bottom: HEIGHT(props.bottom),\r\n            left: WIDTH(props.left),\r\n            right: WIDTH(props.right),\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        }]}></View>} */}\r\n    </RootElement>;\r\n};\r\n\r\n\r\nexport const Coin: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, value: number; }> = (props) => {\r\n    return <View style={[styles.token, {\r\n        top: HEIGHT(props.top),\r\n        bottom: HEIGHT(props.bottom),\r\n        left: WIDTH(props.left),\r\n        right: WIDTH(props.right),\r\n        width: Dimensions.get('window').width * 0.08,\r\n        height: Dimensions.get('window').width * 0.08,\r\n    },\r\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]\r\n    }>\r\n        <ImageBackground source={require('./coin.png')} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <Text style={{\r\n                color: \"white\", position: \"relative\", fontSize: 60, top: \"17%\", left: \"0%\", fontWeight: \"800\", textAlign: \"center\",\r\n                textShadowRadius: 10,\r\n                textShadowColor: \"black\",\r\n            }}>{props.value}</Text>\r\n        </ImageBackground>\r\n    </View>;\r\n};\r\n\r\nexport const Token: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, type: string, value?: number; }> = (props) => {\r\n    const tokenTypeToImage = {\r\n        'bonus_3': require('./bonus_3_token.png'),\r\n        'bonus_4': require('./bonus_4_token.png'),\r\n        'bonus_5': require('./bonus_5_token.png'),\r\n        'camel': require('./camel_token.png'),\r\n        'cloth': require('./cloth_token.png'),\r\n        'diamond': require('./diamond_token.png'),\r\n        'gold': require('./gold_token.png'),\r\n        'leather': require('./leather_token.png'),\r\n        'seal_of_excellence': require('./seal_of_excellence.png'),\r\n        'silver': require('./silver_token.png'),\r\n        'spice': require('./spice_token.png'),\r\n        'coin': require('./coin.png'),\r\n    };\r\n\r\n    return <View style={[styles.token, {\r\n        top: HEIGHT(props.top),\r\n        bottom: HEIGHT(props.bottom),\r\n        left: WIDTH(props.left),\r\n        right: WIDTH(props.right),\r\n    },\r\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]}>\r\n        <ImageBackground source={tokenTypeToImage[props.type]} style={{ width: \"100%\", height: \"100%\" }}>\r\n            {props.type !== 'coin' && props.value !== undefined && props.value !== null && props.value >= 0 && [\r\n                <Text style={{ color: \"white\", position: \"relative\", top: \"3%\", left: \"44%\", fontWeight: \"800\" }}>{props.value}</Text>,\r\n                <Text style={{ color: \"white\", position: \"relative\", top: \"-27%\", left: \"-36.5%\", fontWeight: \"800\", transform: [{ rotateZ: \"-90deg\" }] }}>{props.value}</Text>,\r\n                <Text style={{ color: \"white\", position: \"relative\", top: \"33%\", left: \"-44%\", fontWeight: \"800\", transform: [{ rotateZ: \"-180deg\" }] }}>{props.value}</Text>,\r\n                <Text style={{ color: \"white\", position: \"relative\", top: \"19%\", left: \"36.4%\", fontWeight: \"800\", transform: [{ rotateZ: \"-270deg\" }] }}>{props.value}</Text>]\r\n            }\r\n            {props.type === 'coin' && props.value >= 0 && <Text style={{\r\n                color: \"white\", position: \"absolute\", fontSize: 40, top: \"19%\", left: \"35%\", fontWeight: \"800\", textAlign: \"center\",\r\n                textShadowRadius: 10,\r\n                textShadowColor: \"black\",\r\n            }}>{props.value}</Text>}\r\n        </ImageBackground>\r\n    </View >;\r\n};\r\n\r\nexport const Button: React.FunctionComponent<{ flip?: boolean, title: string, disabled?: boolean, onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\r\n\r\n    const RootElement: React.FunctionComponent<{ style: StyleProp<ViewStyle>; }> = (rootProps) => {\r\n        return !props.disabled ?\r\n            <TouchableOpacity style={rootProps.style} onPress={props.onPress}>{rootProps.children}</TouchableOpacity> :\r\n            <View style={rootProps.style}>{rootProps.children}</View>;\r\n    };\r\n\r\n\r\n    return <RootElement\r\n        style={{\r\n            backgroundColor: props.disabled ? \"grey\" : \"red\",\r\n            flex: 1,\r\n            display: \"flex\",\r\n            borderRadius: 30,\r\n            margin: 5,\r\n        }}\r\n    >\r\n        <Text style={{\r\n            flex: 1,\r\n            color: \"white\",\r\n            fontWeight: \"800\",\r\n            fontSize: 20,\r\n            textAlign: \"center\",\r\n            textAlignVertical: \"center\",\r\n            borderWidth: 3,\r\n            borderRadius: 12,\r\n            padding: 2,\r\n            borderColor: 'black',\r\n        }}>\r\n            {props.title}\r\n        </Text>\r\n    </RootElement>;\r\n};\r\n\r\nexport function renderCard(type: string, isSelected = false, style: StyleProp<ViewStyle> = false) {\r\n    const cardTypeToImage = {\r\n        'camel': require('./camel_card.png'),\r\n        'cloth': require('./cloth_card.png'),\r\n        'cover': require('./cover_card.png'),\r\n        'diamond': require('./diamond_card.png'),\r\n        'gold': require('./gold_card.png'),\r\n        'leather': require('./leather_card.png'),\r\n        'silver': require('./silver_card.png'),\r\n        'spice': require('./spice_card.png'),\r\n    };\r\n\r\n    return <View style={[styles.card, style]}>\r\n        <Image source={cardTypeToImage[type]} style={{ resizeMode: \"stretch\", width: \"100%\", height: \"100%\" }} />\r\n        {isSelected && <Text style={[{\r\n            textAlign: \"center\",\r\n            textAlignVertical: \"center\",\r\n        } as {\r\n            textAlign: \"center\",\r\n            textAlignVertical: \"center\";\r\n        }, {\r\n            fontSize: MIN_WIDTH_HEIGHT(5),\r\n            color: \"green\",\r\n            left: \"4%\",\r\n            backgroundColor: \"white\",\r\n            width: \"25%\",\r\n            top: \"4%\",\r\n            height: \"16%\",\r\n            lineHeight: 23.5,\r\n            borderRadius: MIN_WIDTH_HEIGHT(4),\r\n            overflow: \"hidden\",\r\n            fontWeight: \"800\",\r\n            borderWidth: 3,\r\n            borderColor: \"green\",\r\n            position: \"absolute\",\r\n        }]}>✓</Text>}\r\n    </View >;\r\n}","import React from 'react';\r\nimport { View, Text, SafeAreaView, ScrollView, Dimensions, TouchableOpacity } from 'react-native';\r\nimport { ScreenOrientation } from 'expo';\r\nimport { renderCard } from './utils';\r\n\r\ntype Props = {\r\n    onAction(action: any): Promise<void>;\r\n    onBack(): void;\r\n};\r\n\r\ntype State = {\r\n    hand: string[],\r\n    handIsSelected: boolean[],\r\n    displayText: string,\r\n};\r\n\r\nexport default class JaipurHand extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hand: [],\r\n            handIsSelected: [],\r\n            displayText: \"Waiting for a new game\",\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        await ScreenOrientation.unlockAsync();\r\n    }\r\n\r\n    updateHand(hand: any) {\r\n        this.setState(hand);\r\n    }\r\n\r\n    renderHand() {\r\n        return this.state.hand.map((card, i) => <TouchableOpacity onPress={() => this.props.onAction({ type: \"select-hand-card\", index: i })}>{renderCard(card, this.state.handIsSelected[i], {\r\n            position: undefined,\r\n            flex: 1,\r\n            height: Dimensions.get('window').height * 0.2,\r\n            width: Dimensions.get('window').height * 0.4,\r\n            borderWidth: 1,\r\n            borderRadius: 15,\r\n            shadowColor: \"black\",\r\n            shadowRadius: 3,\r\n            shadowOffset: { width: 0, height: 0 },\r\n            shadowOpacity: 0.6,\r\n            backgroundColor: \"white\",\r\n            padding: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            marginHorizontal: 5,\r\n        })}</TouchableOpacity>);\r\n    }\r\n\r\n    render() {\r\n        return <SafeAreaView style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            backgroundColor: \"#5aa57c\",\r\n        }}>\r\n            <View style={{ flex: 3 }}>\r\n                <ScrollView style={{ flex: 1, display: \"flex\", flexDirection: \"row\", marginVertical: 20 }} horizontal={true}>\r\n                    {this.renderHand()}\r\n                </ScrollView>\r\n            </View>\r\n            <View style={{ flex: 1, display: \"flex\" }}>\r\n                <Text style={{ flex: 1, textAlign: \"center\", lineHeight: 80, fontSize: 35, color: \"white\", textShadowColor: \"black\", textShadowRadius: 10, }}>{this.state.displayText}</Text>\r\n            </View>\r\n        </SafeAreaView>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { View, Image, Text } from \"react-native\";\r\nimport styles, { WIDTH, HEIGHT, RANGE } from \"./styles\";\r\n\r\nconst BoardMapStrip: React.FunctionComponent<{ width: number, top?: number, bottom?: number; }> = (props) => {\r\n    return <View style={\r\n        [styles.mat_strips, {\r\n            width: WIDTH(props.width),\r\n            top: HEIGHT(props.top),\r\n            bottom: HEIGHT(props.bottom),\r\n        }]}>{props.children}</View>;\r\n};\r\n\r\nconst BoardMapStripCircle: React.FunctionComponent<{ top?: number, bottom?: number, left?: number; }> = (props) => {\r\n    return <View style={\r\n        [styles.mat_strip_circle, {\r\n            top: HEIGHT(props.top),\r\n            bottom: HEIGHT(props.bottom),\r\n            left: WIDTH(props.left),\r\n        }]}>{props.children}</View>;\r\n};\r\n\r\nconst BoardMatCard: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, glow?: boolean; }> = (props = { glow: false }) => {\r\n    return <View style={[styles.mat_card, {\r\n        top: HEIGHT(props.top),\r\n        bottom: HEIGHT(props.bottom),\r\n        left: WIDTH(props.left),\r\n    },\r\n    props.glow && styles.mat_card_glow,\r\n    ]}>{props.children}</View>;\r\n};\r\n\r\nconst BoardCamel: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, flip?: boolean; }> = (props = { flip: false }) => {\r\n    return <Image source={require('./camel-char.png')}\r\n        style={\r\n            [{\r\n                position: \"absolute\",\r\n                height: \"5%\",\r\n                width: \"5%\",\r\n                opacity: 0.2,\r\n                resizeMode: \"stretch\",\r\n                top: HEIGHT(props.top),\r\n                bottom: HEIGHT(props.bottom),\r\n                left: WIDTH(props.left),\r\n            },\r\n            props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]\r\n        } />;\r\n};\r\n\r\nconst BoardGoodsTokenTrack: React.FunctionComponent<{ top: number; }> = (props) => {\r\n    return <View style={[styles.mat_goods_token_track, { top: HEIGHT(props.top) }]} />;\r\n};\r\n\r\nconst BoardBonusTokenTrack: React.FunctionComponent<{ top: number; }> = (props) => {\r\n    return <View style={[styles.mat_bonus_token_track, { top: HEIGHT(props.top) }]} />;\r\n};\r\n\r\nexport default function renderBoardMat() {\r\n    const renderMatStrips = () => {\r\n        return [\r\n            <BoardMapStrip width={100} top={7} />,\r\n            <BoardMapStrip width={100} bottom={7} />,\r\n            <BoardMapStrip width={65} top={20} />,\r\n            <BoardMapStrip width={65} bottom={20} />,\r\n\r\n            RANGE(39, 55, 3).map(left => [\r\n                <BoardMapStripCircle top={4} left={left} />,\r\n                <BoardMapStripCircle bottom={4} left={left} />\r\n            ]),\r\n        ];\r\n    };\r\n\r\n    const renderGreyMat = () => {\r\n        return <View style={styles.mat_grey_cover}></View>;\r\n    };\r\n\r\n    const goodsTokenTrackTop = styles.goodsTokenTrack.top;\r\n    const goodsTokenTrackBottom = styles.goodsTokenTrack.bottom;\r\n    const bonusTokenTrackTop = styles.bonusTokenTrack.top;\r\n    const bonusTokenTrackBottom = styles.bonusTokenTrack.bottom;\r\n\r\n    return [\r\n        renderMatStrips(),\r\n\r\n        <BoardCamel left={40} top={6.5} flip />,\r\n        RANGE(1, 11.5, 3).map(left => <BoardCamel left={left} top={13} flip />),\r\n        RANGE(27.5, 32.75, 2).map(left => <BoardCamel left={left} top={13} flip />),\r\n\r\n        <BoardCamel left={40} bottom={6.5} />,\r\n        RANGE(1, 11.5, 3).map(left => <BoardCamel left={left} bottom={13} />),\r\n        RANGE(27.5, 32.75, 2).map(left => <BoardCamel left={left} bottom={13} />),\r\n\r\n        <BoardMatCard left={5} top={30}>\r\n            <View style={[styles.mat_discard_pile]}>\r\n                <Text style={\r\n                    {\r\n                        transform: [{ rotateZ: \"-90deg\" }],\r\n                        top: \"38%\",\r\n                        fontSize: 35,\r\n                        color: \"rgba(255, 215, 0, 0.2)\",\r\n                        shadowOpacity: 1,\r\n                        shadowColor: \"white\",\r\n                        shadowOffset: { width: 0, height: 0 }\r\n                    }\r\n                }>Discard</Text>\r\n            </View>\r\n        </BoardMatCard>,\r\n        <BoardMatCard left={5} bottom={30} />,\r\n        <BoardMatCard left={17} top={5} />,\r\n        <BoardMatCard left={17} bottom={5} />,\r\n\r\n        RANGE(17, 61, 5).map(left => <BoardMatCard left={left} top={42} glow />),\r\n\r\n        renderGreyMat(),\r\n        RANGE(goodsTokenTrackTop, goodsTokenTrackBottom, 6).map(top => <BoardGoodsTokenTrack top={top} />),\r\n        RANGE(bonusTokenTrackTop, bonusTokenTrackBottom, 4).map(top => <BoardBonusTokenTrack top={top} />),\r\n    ];\r\n}\r\n","import React from 'react';\r\nimport { View, SafeAreaView } from 'react-native';\r\n\r\nimport styles, { HEIGHT, WIDTH } from './styles';\r\nimport { Card, Coin, Token, Button } from './utils';\r\nimport renderBoardMat from './renderBoardMat';\r\n\r\ntype Props = {\r\n    onAction(action: any): Promise<void>;\r\n    onBack(): void;\r\n};\r\n\r\ntype PlayerState = {\r\n    sealsOfExcellence: number,\r\n    camels: number,\r\n    hasCamelToken: boolean,\r\n    rupees: number,\r\n    goodsTokens: {\r\n        diamond: number[],\r\n        gold: number[],\r\n        silver: number[],\r\n        cloth: number[],\r\n        spice: number[],\r\n        leather: number[],\r\n    },\r\n    bonusTokens: {\r\n        bonus_3: number[],\r\n        bonus_4: number[],\r\n        bonus_5: number[],\r\n    },\r\n};\r\n\r\ntype State = {\r\n    playerStates: [PlayerState, PlayerState],\r\n    market: [string, string, string, string, string],\r\n    marketIsSelected: [boolean, boolean, boolean, boolean, boolean],\r\n    marketIsSelectable: [boolean, boolean, boolean, boolean, boolean],\r\n    topDiscard: string,\r\n    drawPileHasCards: boolean,\r\n    goodsTokens: {\r\n        diamond: number[],\r\n        gold: number[],\r\n        silver: number[],\r\n        cloth: number[],\r\n        spice: number[],\r\n        leather: number[],\r\n    },\r\n    bonusTokens: {\r\n        bonus_3: number,\r\n        bonus_4: number,\r\n        bonus_5: number,\r\n    },\r\n    camelToken: boolean,\r\n    currentPlayerIndex: number,\r\n    buttons: [string, string, boolean][],\r\n\r\n    players: string[],\r\n};\r\n\r\nexport default class JaipurBoard extends React.Component<Props, State>{\r\n    goodsTokenTrackTop: number;\r\n    goodsTokenTrackBottom: number;\r\n    bonusTokenTrackTop: number;\r\n    bonusTokenTrackBottom: number;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.goodsTokenTrackTop = 20;\r\n        this.goodsTokenTrackBottom = 76.7;\r\n        this.bonusTokenTrackTop = 30;\r\n        this.bonusTokenTrackBottom = 67;\r\n\r\n        // this.state = {\r\n        //     playerStates: [\r\n        //         {\r\n        //             sealsOfExcellence: 2,\r\n        //             camels: 4,\r\n        //             hasCamelToken: true,\r\n        //             rupees: 0,\r\n        //             goodsTokens: {\r\n        //                 diamond: [7],\r\n        //                 gold: [6],\r\n        //                 silver: [5],\r\n        //                 cloth: [1, 2, 2, 3, 3, 5],\r\n        //                 spice: [1, 2, 2, 3, 3, 5],\r\n        //                 leather: [1, 1, 1, 1, 1, 2, 3, 4],\r\n        //             },\r\n        //             bonusTokens: {\r\n        //                 bonus_3: [4, 5, 6],\r\n        //                 bonus_4: [],\r\n        //                 bonus_5: [],\r\n        //             }\r\n        //         },\r\n        //         {\r\n        //             sealsOfExcellence: 2,\r\n        //             camels: 5,\r\n        //             hasCamelToken: true,\r\n        //             rupees: 0,\r\n        //             goodsTokens: {\r\n        //                 diamond: [7],\r\n        //                 gold: [6],\r\n        //                 silver: [5],\r\n        //                 cloth: [1, 2, 2, 3, 3, 5],\r\n        //                 spice: [1, 2, 2, 3, 3, 5],\r\n        //                 leather: [1, 1, 1, 1, 1, 2, 3, 4],\r\n        //             },\r\n        //             bonusTokens: {\r\n        //                 bonus_3: [4, 5, 6],\r\n        //                 bonus_4: [],\r\n        //                 bonus_5: [],\r\n        //             }\r\n        //         }\r\n        //     ],\r\n        //     market: [\"diamond\", \"silver\", \"cloth\", \"leather\", \"spice\"],\r\n        //     marketIsSelected: [true, true, false, false, false],\r\n        //     marketIsSelectable: [true, true, true, true, true],\r\n        //     topDiscard: \"gold\",\r\n        //     drawPileHasCards: true,\r\n        //     goodsTokens: {\r\n        //         diamond: [5, 5, 5, 7, 7],\r\n        //         gold: [5, 5, 5, 6, 6],\r\n        //         silver: [5, 5, 5, 5, 5],\r\n        //         cloth: [1, 1, 2, 2, 3, 3, 5],\r\n        //         spice: [1, 1, 2, 2, 3, 3, 5],\r\n        //         leather: [1, 1, 1, 1, 1, 1, 2, 3, 4],\r\n        //     },\r\n        //     bonusTokens: {\r\n        //         bonus_3: 6,\r\n        //         bonus_4: 6,\r\n        //         bonus_5: 6,\r\n        //     },\r\n        //     camelToken: true,\r\n        //     currentPlayerIndex: -1,\r\n        //     buttons: [[\"start\", \"Start Game\"]],\r\n        // };\r\n\r\n        this.state = {\r\n            playerStates: [\r\n                {\r\n                    sealsOfExcellence: 0,\r\n                    camels: 0,\r\n                    hasCamelToken: false,\r\n                    rupees: 0,\r\n                    goodsTokens: {\r\n                        diamond: [],\r\n                        gold: [],\r\n                        silver: [],\r\n                        cloth: [],\r\n                        spice: [],\r\n                        leather: [],\r\n                    },\r\n                    bonusTokens: {\r\n                        bonus_3: [],\r\n                        bonus_4: [],\r\n                        bonus_5: [],\r\n                    }\r\n                },\r\n                {\r\n                    sealsOfExcellence: 0,\r\n                    camels: 0,\r\n                    hasCamelToken: false,\r\n                    rupees: 0,\r\n                    goodsTokens: {\r\n                        diamond: [],\r\n                        gold: [],\r\n                        silver: [],\r\n                        cloth: [],\r\n                        spice: [],\r\n                        leather: [],\r\n                    },\r\n                    bonusTokens: {\r\n                        bonus_3: [],\r\n                        bonus_4: [],\r\n                        bonus_5: [],\r\n                    }\r\n                },\r\n            ],\r\n            market: [null, null, null, null, null],\r\n            marketIsSelected: [false, false, false, false, false],\r\n            marketIsSelectable: [false, false, false, false, false],\r\n            topDiscard: null,\r\n            drawPileHasCards: false,\r\n            goodsTokens: {\r\n                diamond: [],\r\n                gold: [],\r\n                silver: [],\r\n                cloth: [],\r\n                spice: [],\r\n                leather: [],\r\n            },\r\n            bonusTokens: {\r\n                bonus_3: 0,\r\n                bonus_4: 0,\r\n                bonus_5: 0,\r\n            },\r\n            camelToken: false,\r\n            currentPlayerIndex: -1,\r\n            buttons: [[\"start\", \"Start Game\", false]],\r\n\r\n            players: [],\r\n        };\r\n    }\r\n\r\n    updateBoard(state: State) {\r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        const goodsTokenTrackTop = this.goodsTokenTrackTop;\r\n        const goodsTokenTrackBottom = this.goodsTokenTrackBottom;\r\n        const bonusTokenTrackTop = this.bonusTokenTrackTop;\r\n        const bonusTokenTrackBottom = this.bonusTokenTrackBottom;\r\n\r\n        const goodsTokenTrackOffsets = 1.38;\r\n\r\n        return <SafeAreaView style={styles.mat}>\r\n            {renderBoardMat()}\r\n\r\n            <View style={{ position: \"absolute\", top: \"50%\", transform: [{ rotateZ: \"-90deg\" }], left: \"-7.5%\", flexDirection: \"row\", width: \"20%\" }}>\r\n                <Button title=\"Back\" onPress={() => {\r\n                    this.props.onBack();\r\n                }} />\r\n                <Button title=\"Reset\" onPress={() => {\r\n                    this.props.onAction({ \"type\": \"reset\" });\r\n                }} />\r\n            </View>\r\n\r\n            {this.state.playerStates[0].sealsOfExcellence >= 1 && <Token type='seal_of_excellence' top={4.7} left={47.5} flip />}\r\n            {this.state.playerStates[0].sealsOfExcellence >= 2 && <Token type='seal_of_excellence' top={4.7} left={55.5} flip />}\r\n            {this.state.playerStates[1].sealsOfExcellence >= 1 && <Token type='seal_of_excellence' bottom={4.7} left={47.5} />}\r\n            {this.state.playerStates[1].sealsOfExcellence >= 2 && <Token type='seal_of_excellence' bottom={4.7} left={55.5} />}\r\n\r\n            {this.state.playerStates[0].hasCamelToken && <Token type='camel' top={4.7} left={39.5} flip />}\r\n            {this.state.playerStates[1].hasCamelToken && <Token type='camel' bottom={4.7} left={39.5} />}\r\n\r\n            {([\r\n                ['diamond', this.state.goodsTokens.diamond],\r\n                ['gold', this.state.goodsTokens.gold],\r\n                ['silver', this.state.goodsTokens.silver],\r\n                ['cloth', this.state.goodsTokens.cloth],\r\n                ['spice', this.state.goodsTokens.spice],\r\n                ['leather', this.state.goodsTokens.leather],\r\n            ] as [string, number[]][]).map(([type, tokens], i) =>\r\n                tokens.map((value, j) =>\r\n                    <Token type={type} value={value} top={goodsTokenTrackTop + i * (goodsTokenTrackBottom - goodsTokenTrackTop) / 5} left={84 - j * goodsTokenTrackOffsets} />))}\r\n\r\n            {this.state.drawPileHasCards && <Card type='cover' bottom={30} left={5} />}\r\n\r\n            {this.state.topDiscard !== null && <Card type={this.state.topDiscard} top={30} left={5} />}\r\n\r\n            {this.state.playerStates[0].camels > 0 && <Card type='camel' count={this.state.playerStates[0].camels} left={17} top={5} flip />}\r\n            {this.state.playerStates[1].camels > 0 && <Card type='camel' count={this.state.playerStates[1].camels} left={17} bottom={5} />}\r\n\r\n            {this.state.market.map((card, i) => card && <Card left={17 + 11 * i} top={42} type={card} selected={this.state.marketIsSelected[i]} isSelectable={this.state.marketIsSelectable[i]} onPress={() => this.props.onAction({ type: \"select-card\", index: i })} />)}\r\n\r\n            {new Array(this.state.bonusTokens.bonus_3).fill(null).map((_, i) => <Token type={\"bonus_3\"} top={bonusTokenTrackTop + 0.6 * i} right={3} />)}\r\n            {new Array(this.state.bonusTokens.bonus_4).fill(null).map((_, i) => <Token type={\"bonus_4\"} top={bonusTokenTrackTop + (bonusTokenTrackBottom - bonusTokenTrackTop) / 3 + 0.6 * i} right={3} />)}\r\n            {new Array(this.state.bonusTokens.bonus_5).fill(null).map((_, i) => <Token type={\"bonus_5\"} top={bonusTokenTrackTop + 2 * (bonusTokenTrackBottom - bonusTokenTrackTop) / 3 + 0.6 * i} right={3} />)}\r\n            {this.state.camelToken && <Token type={\"camel\"} top={bonusTokenTrackTop + 3 * (bonusTokenTrackBottom - bonusTokenTrackTop) / 3} right={3} />}\r\n\r\n            <Coin top={3.5} right={2} value={this.state.playerStates[0].rupees} flip />\r\n            <Coin bottom={3.5} right={2} value={this.state.playerStates[1].rupees} />\r\n\r\n            {[0, 1].map(playerIndex => {\r\n                return [...this.state.playerStates[playerIndex].goodsTokens.diamond.map(value => { return { type: \"diamond\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.gold.map(value => { return { type: \"gold\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.silver.map(value => { return { type: \"silver\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.cloth.map(value => { return { type: \"cloth\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.spice.map(value => { return { type: \"spice\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.leather.map(value => { return { type: \"leather\", value }; }),\r\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_3.map(value => { return { type: \"coin\", value }; }),\r\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_4.map(value => { return { type: \"coin\", value }; }),\r\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_5.map(value => { return { type: \"coin\", value }; }),\r\n                ].map(({ type, value }, i) => {\r\n                    if (playerIndex === 0)\r\n                        return <Token type={type} value={value} top={4.7} left={83 - i * 0.8} flip />;\r\n                    else\r\n                        return <Token type={type} value={value} bottom={4.7} left={83 - i * 0.8} />;\r\n                });\r\n            })}\r\n\r\n            {\r\n                [0, 1].map(i => {\r\n                    const getButton = () => {\r\n                        if (this.state.currentPlayerIndex !== -1 && this.state.currentPlayerIndex !== i) {\r\n                            return;\r\n                        }\r\n                        return this.state.buttons.map(([action, title, disabled]) => {\r\n                            if (action === \"start\" && this.state.players.length !== 2)\r\n                                disabled = true;\r\n                            if (action === \"start\" && this.state.players.length > i) {\r\n                                title = title + \" (\" + this.state.players[i] + \")\";\r\n                            }\r\n                            return <Button title={title} disabled={disabled} onPress={() => {\r\n                                this.props.onAction({ \"type\": action });\r\n                            }} />;\r\n                        });\r\n                    };\r\n\r\n                    return <View style={[styles.buttonPanel, i == 0 ? { bottom: \"68%\", transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] } : { top: \"68%\" }]}>\r\n                        {getButton()}\r\n                    </View>;\r\n                })\r\n            }\r\n        </SafeAreaView>;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport BaseGameScreen, { GameScreenProps } from \"../BaseGameScreen\";\r\nimport JaipurHand from \"./JaipurHand\";\r\nimport JaipurBoard from \"./JaipurBoard\";\r\n\r\nexport default class JaipurScreen extends React.Component<GameScreenProps> implements BaseGameScreen {\r\n    board: React.RefObject<JaipurBoard>;\r\n    hand: React.RefObject<JaipurHand>;\r\n\r\n    constructor(props: GameScreenProps) {\r\n        super(props);\r\n        this.board = React.createRef();\r\n        this.hand = React.createRef();\r\n    }\r\n\r\n    updateScreen(content: any) {\r\n        if (this.props.playerName === \"board\") {\r\n            this.board.current.updateBoard(content);\r\n        } else {\r\n            this.hand.current.updateHand(content);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.playerName === \"board\") {\r\n            return <JaipurBoard ref={this.board} onAction={this.props.onAction} onBack={this.props.onBack} />;\r\n        } else {\r\n            return <JaipurHand ref={this.hand} onAction={this.props.onAction} onBack={this.props.onBack} />;\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { SafeAreaView, View, Text, StyleSheet, Dimensions, ViewProps, ImageBackground, StyleProp, ViewStyle, GestureResponderEvent } from 'react-native';\r\nimport Button from '../Button';\r\nimport BaseGameScreen, { GameScreenProps } from \"../BaseGameScreen\";\r\nimport { ScreenOrientation } from \"expo\";\r\nimport {\r\n    heightPercentageToDP as hp,\r\n    widthPercentageToDP as wp,\r\n} from 'react-native-responsive-screen';\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\ntype BoardCell = {\r\n    kind: string,\r\n    color?: string,\r\n    value?: string,\r\n    isSelectable?: boolean,\r\n};\r\n\r\ntype State = {\r\n    players: {\r\n        red: string[],\r\n        redCodemaster: string | null,\r\n        blue: string[],\r\n        blueCodemaster: string | null,\r\n    },\r\n    buttons: [string, string, boolean][],\r\n    playerNameDisplay: string,\r\n    displayText: string,\r\n    status: \"player-selection\" | \"board\" | \"none\" | \"game-over\",\r\n    board: BoardCell[][],\r\n};\r\n\r\nexport default class CodenamesScreen extends React.Component<GameScreenProps, State> implements BaseGameScreen<State> {\r\n    constructor(props: GameScreenProps) {\r\n        super(props);\r\n\r\n        // const board = new Array();\r\n        // for (let i = 0; i < 5; i++) {\r\n        //     const row = new Array<BoardCell>();\r\n        //     for (let j = 0; j < 1; j++) {\r\n        //         row.push({\r\n        //             kind: \"word\",\r\n        //             color: \"white\",\r\n        //             value: \"RABBIT\", isSelectable: true,\r\n        //         });\r\n        //     }\r\n        //     row.push({\r\n        //         kind: \"assasin\",\r\n        //         color: \"white\",\r\n        //         value: \"RABBIT\",\r\n        //     });\r\n        //     row.push({\r\n        //         kind: \"bystander\",\r\n        //         color: \"white\",\r\n        //         value: \"RABBIT\",\r\n        //     });\r\n        //     row.push({\r\n        //         kind: \"agent-blue\",\r\n        //         color: \"white\",\r\n        //         value: \"RABBIT\",\r\n        //     });\r\n        //     row.push({\r\n        //         kind: \"agent-red\",\r\n        //         color: \"white\",\r\n        //         value: \"RABBIT\",\r\n        //     });\r\n        //     board.push(row);\r\n        // }\r\n\r\n        // this.state = {\r\n        //     players: {\r\n        //         red: [\"Amol\", \"Anusha\", \"Bla Bla\"],\r\n        //         redCodemaster: \"Reddy\",\r\n        //         blue: [\"John\", \"Oliver\", \"Stephen Colbert\"],\r\n        //         blueCodemaster: \"Bluey\",\r\n        //     },\r\n        //     buttons: [\r\n        //         [\"Back\", \"back\", true],\r\n        //         [\"Become Codemaster\", \"become-codemaster\", true],\r\n        //         [\"Switch to Red Team\", \"become-codemaster\", true],\r\n        //     ],\r\n        //     displayText: \"You are Blue Team!\",\r\n        //     status: \"board\",\r\n        //     board,\r\n        // };\r\n\r\n        this.state = {\r\n            players: {\r\n                red: [],\r\n                redCodemaster: undefined,\r\n                blue: [],\r\n                blueCodemaster: undefined,\r\n            },\r\n            buttons: [],\r\n            playerNameDisplay: null,\r\n            displayText: \"Connecting to server...\",\r\n            status: \"none\",\r\n            board: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        await ScreenOrientation.unlockAsync();\r\n    }\r\n\r\n    updateScreen(content: any) {\r\n        this.setState(content);\r\n    }\r\n\r\n    renderPlayerSelection() {\r\n        const renderPlayerList = (team: string) => {\r\n            const teamName = (team == \"red\" ? \"Red\" : \"Blue\") + \" Team\";\r\n            const players = (team === \"red\" ? this.state.players.red : this.state.players.blue);\r\n            const codemaster = (team === \"red\" ? this.state.players.redCodemaster : this.state.players.blueCodemaster);\r\n\r\n            return <View style={{\r\n                flex: 3,\r\n                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n                borderRadius: 30,\r\n                margin: \"2%\",\r\n                padding: \"2%\",\r\n            }}>\r\n                <Text style={{\r\n                    textAlign: \"center\",\r\n                    color: team,\r\n                    fontSize: 30,\r\n                    textShadowColor: \"white\",\r\n                    textShadowRadius: 3,\r\n                    paddingVertical: \"2%\",\r\n                }}>{teamName}</Text>\r\n                <View style={{\r\n                    marginVertical: 8,\r\n                    borderBottomColor: '#737373',\r\n                    borderBottomWidth: 1,\r\n                }} />\r\n                <Text style={{\r\n                    fontSize: 20,\r\n                    color: \"white\",\r\n                }}>Codemaster: {codemaster}</Text>\r\n                <View style={{\r\n                    marginVertical: 8,\r\n                    borderBottomColor: '#737373',\r\n                    borderBottomWidth: 1,\r\n                }} />\r\n                {players.map(playerName => <Text style={{\r\n                    fontSize: 20,\r\n                    color: \"white\",\r\n                }}>{playerName}</Text>)}\r\n            </View>;\r\n        };\r\n\r\n        return [\r\n            renderPlayerList(\"red\"),\r\n            renderPlayerList(\"blue\"),\r\n        ];\r\n    }\r\n\r\n    renderBoard() {\r\n        const { width, height } = Dimensions.get('window');\r\n\r\n        // Use iPhone6 as base size which is 375 x 667\r\n        const baseWidth = 375;\r\n        const baseHeight = 667;\r\n\r\n        const scaleWidth = width / baseWidth;\r\n        const scaleHeight = height / baseHeight;\r\n        const scale = Math.min(scaleWidth, scaleHeight);\r\n\r\n        const scaledSize =\r\n            (size) => Math.ceil((size * scale));\r\n\r\n        const AspectView: React.FunctionComponent<ViewProps & { isSelectable?: boolean; onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\r\n            const [layout, setLayout] = React.useState(null);\r\n\r\n            const { aspectRatio = 1, ...inputStyle } =\r\n                StyleSheet.flatten(props.style) || {};\r\n            const style = [inputStyle, { aspectRatio }];\r\n\r\n            if (layout) {\r\n                const { width = 0, height = 0 } = layout;\r\n                style.push({ width: height * aspectRatio, height });\r\n            }\r\n\r\n            // console.log(layout, style);\r\n\r\n            const RootElement: React.FunctionComponent<{ style?: StyleProp<ViewStyle>; onLayout?: (event: { nativeEvent: { layout: { x: number; y: number; width: number; height: number; }; }; }) => void; }> = (rootProps) => {\r\n                return props.isSelectable ?\r\n                    <TouchableOpacity style={rootProps.style} onPress={props.onPress} onLayout={props.onLayout}>{rootProps.children}</TouchableOpacity> :\r\n                    <View style={rootProps.style} onLayout={props.onLayout}>{rootProps.children}</View>;\r\n            };\r\n\r\n            return (\r\n                <RootElement\r\n                    {...props}\r\n                    style={[{\r\n                        height: hp(15),\r\n                        width: hp((500.0 / 345.0) * 14),\r\n                    }, style]}\r\n                    onLayout={({ nativeEvent: { layout } }) => { setLayout(layout); console.log(layout); }}\r\n                >{props.children}</RootElement>\r\n            );\r\n        };\r\n\r\n        const renderRow = (row, rowIndex) => {\r\n            return <View style={{\r\n                flex: 1,\r\n                display: \"flex\",\r\n                flexDirection: \"row\"\r\n            }}>\r\n                {row.map((cell, colIndex) => {\r\n                    const backgroundColor = (cell.kind === \"word\" ? \"#cebc9c\" : \"black\");\r\n\r\n                    return <View style={{\r\n                        flex: 1,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                    }}>\r\n                        <View style={{ flex: 1, marginVertical: hp(0.4), marginHorizontal: wp(0.4) }}>\r\n                            <AspectView style={{\r\n                                backgroundColor,\r\n                                borderColor: cell.color,\r\n                                shadowColor: cell.color,\r\n                                shadowOpacity: 1,\r\n                                shadowOffset: { width: 0, height: 0 },\r\n                                shadowRadius: 10,\r\n                                borderWidth: wp(0.25),\r\n                                aspectRatio: 500.0 / 345.0,\r\n                                flex: 1,\r\n                                borderRadius: wp(0.5)\r\n                            }} isSelectable={cell.isSelectable}\r\n                                onPress={() => {\r\n                                    this.props.onAction({ \"type\": \"card\", \"rowIndex\": rowIndex, \"colIndex\": colIndex });\r\n                                }}>\r\n                                {\r\n                                    (() => {\r\n                                        switch (cell.kind) {\r\n                                            case 'word':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    margin: wp(0.4),\r\n                                                    borderColor: \"#b3956d\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    backgroundColor: \"#d0b694\",\r\n                                                    borderRadius: wp(0.1),\r\n                                                    display: \"flex\",\r\n                                                    flexDirection: \"column\",\r\n                                                }}>\r\n                                                    <View style={{\r\n                                                        flex: 1,\r\n                                                    }}>\r\n                                                        <View style={{\r\n                                                            flex: 1,\r\n                                                            marginHorizontal: wp(0.2),\r\n                                                            borderBottomColor: \"#b3956d\",\r\n                                                            borderBottomWidth: wp(0.15),\r\n                                                        }}>\r\n                                                            <Text style={{\r\n                                                                flex: 1,\r\n                                                                color: \"#746653\",\r\n                                                                textAlign: \"right\",\r\n                                                                marginLeft: \"15%\",\r\n                                                                fontSize: scaledSize(11),\r\n                                                                fontStyle: \"italic\",\r\n                                                                fontWeight: \"800\",\r\n                                                                transform: [{ rotateZ: \"180deg\" }]\r\n                                                            }}\r\n                                                            >{cell.value}</Text>\r\n                                                        </View>\r\n                                                    </View>\r\n                                                    <View style={{\r\n                                                        flex: 1,\r\n                                                    }}>\r\n                                                        <View style={{\r\n                                                            flex: 1,\r\n                                                            alignItems: \"center\",\r\n                                                            flexDirection: \"row\",\r\n                                                            margin: wp(0.4),\r\n                                                            borderBottomLeftRadius: wp(0.5),\r\n                                                            borderBottomRightRadius: wp(0.5),\r\n                                                            backgroundColor: \"white\",\r\n                                                        }}>\r\n                                                            <Text style={{\r\n                                                                flex: 1,\r\n                                                                textAlign: \"center\",\r\n                                                                fontSize: scaledSize(14),\r\n                                                                fontWeight: \"800\",\r\n                                                            }}\r\n                                                            >{cell.value}</Text>\r\n                                                        </View>\r\n\r\n                                                    </View>\r\n                                                </View>;\r\n                                            case 'bystander':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    borderColor: \"#b3956d\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    borderRadius: wp(0.1),\r\n                                                }}>\r\n                                                    <ImageBackground source={require('./bystander.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\r\n                                                </View>;\r\n                                            case 'agent-red':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    borderColor: \"red\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    borderRadius: wp(0.1),\r\n                                                }}>\r\n                                                    <ImageBackground source={require('./agent-red.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\r\n                                                </View>;\r\n                                            case 'agent-blue':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    borderColor: \"blue\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    borderRadius: wp(0.1),\r\n                                                }}>\r\n                                                    <ImageBackground source={require('./agent-blue.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\r\n                                                </View>;\r\n                                            case 'assasin':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    borderColor: \"black\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    borderRadius: wp(0.1),\r\n                                                }}>\r\n                                                    <ImageBackground source={require('./assasin.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\r\n                                                </View>;\r\n                                        }\r\n                                    })()\r\n                                }\r\n                            </AspectView>\r\n                        </View>\r\n                    </View>;\r\n                })}\r\n            </View>;\r\n        };\r\n\r\n        return <View style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            backgroundColor: \"#817264\",\r\n            margin: 20,\r\n            marginVertical: 5,\r\n            padding: 10,\r\n            // aspectRatio: 1,\r\n            // width: 0,\r\n        }}>\r\n            {this.state.board.map(renderRow)}\r\n        </View>;\r\n    }\r\n\r\n    render() {\r\n        return <SafeAreaView style={{\r\n            flex: 1,\r\n            backgroundColor: \"#446983\",\r\n        }}>\r\n            <View style={{ flex: 1, flexDirection: \"column\" }}>\r\n                <View style={{ flex: 2, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {this.state.buttons.map(([title, action, enabled]) => {\r\n                        return <Button title={title} disabled={!enabled} onPress={() => {\r\n                            if (action === \"back\") {\r\n                                this.props.onBack();\r\n                            } else {\r\n                                this.props.onAction({ \"type\": action });\r\n                            }\r\n                        }} />;\r\n                    })}\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {this.state.playerNameDisplay && <Text style={{\r\n                        flex: 1,\r\n                        textAlign: \"center\",\r\n                        color: \"white\",\r\n                        fontSize: Dimensions.get(\"window\").width * 0.02,\r\n                    }}>{this.state.playerNameDisplay}</Text>}\r\n                    <Text style={{\r\n                        flex: 1,\r\n                        textAlign: \"center\",\r\n                        color: \"white\",\r\n                        fontSize: Dimensions.get(\"window\").width * 0.02,\r\n                    }}>{this.state.displayText}</Text>\r\n                </View>\r\n                <View style={{ flex: 14, flexDirection: \"row\", display: \"flex\" }}>\r\n                    {\r\n                        (() => {\r\n                            switch (this.state.status) {\r\n                                case \"player-selection\":\r\n                                    return this.renderPlayerSelection();\r\n                                case \"board\":\r\n                                case \"game-over\":\r\n                                    return this.renderBoard();\r\n                                case \"none\":\r\n                                    return [];\r\n                            }\r\n                        })()\r\n                    }\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { View, Text, SafeAreaView, ImageBackground, GestureResponderEvent, TouchableOpacity, StyleProp, ViewStyle, Image } from 'react-native';\r\nimport {\r\n    heightPercentageToDP as hp,\r\n    widthPercentageToDP as wp,\r\n} from 'react-native-responsive-screen';\r\nimport Button from '../Button';\r\n\r\ntype CardColor = \"black\" | \"blue\" | \"green\" | \"red\" | \"white\";\r\ntype CoinColor = CardColor | \"gold\";\r\ntype CardCost = { black?: number, blue?: number, green?: number, red?: number, white?: number; };\r\nexport type CardInfo = {\r\n    color: CardColor,\r\n    prestige: number,\r\n    cost: CardCost,\r\n    isSelectable?: boolean,\r\n};\r\ntype NobleInfo = {\r\n    cost: { color: CardColor, count: number; }[],\r\n    prestige: number,\r\n    nobleIndex: number,\r\n    isSelectable?: boolean,\r\n};\r\n\r\ntype Props = {\r\n    onAction(action: any): Promise<void>;\r\n    onBack(): void;\r\n};\r\n\r\ntype State = {\r\n    buttons: [string, string, boolean][],\r\n    faceupCards: CardInfo[][],\r\n    coins: { white: number, black: number, red: number, blue: number, green: number, gold: number; },\r\n    coinsSelectable: { white: boolean, black: boolean, red: boolean, blue: boolean, green: boolean, gold: boolean; },\r\n    pilesSelectable: [boolean, boolean, boolean],\r\n    pilesVisible: [boolean, boolean, boolean],\r\n    nobles: NobleInfo[],\r\n    displayText: string,\r\n    playerStates: {\r\n        name: string,\r\n        isTurn: boolean,\r\n        coins: { white: number, black: number, red: number, blue: number, green: number, gold: number; },\r\n        coinsSelectable: boolean,\r\n        prestige: number,\r\n        reservedCards: number[],\r\n        cards: { white: number, black: number, red: number, blue: number, green: number },\r\n    }[]\r\n};\r\n\r\nconst colorToCardImage = (color: CardColor) => {\r\n    switch (color) {\r\n        case \"black\": return require('./black_card1.png');\r\n        case \"blue\": return require('./blue_card1.png');\r\n        case \"green\": return require('./green_card1.png');\r\n        case \"red\": return require('./red_card1.png');\r\n        case \"white\": return require('./white_card1.png');\r\n    }\r\n};\r\n\r\nconst colorToGemImage = (color: CoinColor) => {\r\n    switch (color) {\r\n        case \"black\": return require('./black_gem.png');\r\n        case \"blue\": return require('./blue_gem.png');\r\n        case \"green\": return require('./green_gem.png');\r\n        case \"red\": return require('./red_gem.png');\r\n        case \"white\": return require('./white_gem.png');\r\n        case \"gold\": return require('./gold_gem.png');\r\n    }\r\n};\r\n\r\nconst colorToCostImage = (color: CardColor) => {\r\n    switch (color) {\r\n        case \"black\": return require('./black_cost.png');\r\n        case \"blue\": return require('./blue_cost.png');\r\n        case \"green\": return require('./green_cost.png');\r\n        case \"red\": return require('./red_cost.png');\r\n        case \"white\": return require('./white_cost.png');\r\n    }\r\n};\r\n\r\nconst backToCardImage = (level: number) => {\r\n    switch (level) {\r\n        case 1: return require('./back_card1.png');\r\n        case 2: return require('./back_card2.png');\r\n        case 3: return require('./back_card3.png');\r\n    }\r\n};\r\n\r\nexport const Card: React.FunctionComponent<{\r\n    isSelectable?: boolean,\r\n    onPress?: (event: GestureResponderEvent) => void,\r\n    color?: CardColor,\r\n    prestige?: number,\r\n    cost?: CardCost,\r\n    style?: StyleProp<ViewStyle>,\r\n    scale?: number,\r\n    count?: number,\r\n}> = (props) => {\r\n    const cardHeight = hp(15) * (props.scale || 1);\r\n    const aspectRatio = 0.7;\r\n    const gemScale = 0.2;\r\n    const costCountScale = 0.16;\r\n\r\n    const cardContents = (() => {\r\n        if (props.color) {\r\n            return <ImageBackground style={{\r\n                flex: 1,\r\n                flexDirection: \"column\",\r\n            }} source={colorToCardImage(props.color)}>\r\n                <View style={{ flex: 1, backgroundColor: \"rgba(255, 255, 255, 0.6)\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <Text style={{\r\n                        fontSize: cardHeight * 0.2,\r\n                        paddingLeft: \"6%\",\r\n                        color: \"white\",\r\n                        fontWeight: \"800\",\r\n                        textShadowRadius: cardHeight * 0.01,\r\n                        textShadowColor: \"black\",\r\n                        textShadowOffset: { width: 0, height: 0 },\r\n                        flex: 1,\r\n                    }}>\r\n                        {props.prestige}\r\n                    </Text>\r\n                    <Image\r\n                        source={colorToGemImage(props.color)}\r\n                        style={{\r\n                            height: cardHeight * gemScale,\r\n                            width: cardHeight * gemScale,\r\n                            resizeMode: \"stretch\",\r\n                            marginRight: cardHeight * 0.04,\r\n                            shadowColor: \"black\",\r\n                            shadowOpacity: 1,\r\n                            overflow: \"visible\",\r\n                            shadowOffset: { width: -1, height: 2 }\r\n                        }} />\r\n                </View>\r\n                {props.cost &&\r\n                    <View style={{ flex: 3, padding: cardHeight * 0.03 }}>\r\n                        <View style={{ flex: 0.2 }}></View>\r\n                        {new Array(Object.entries(props.cost || {}).filter(val => val[1] === 0).length + (5 - Object.entries(props.cost || {}).length) - 1).fill(null).map(_ => <View style={{\r\n                            flex: 1,\r\n                        }} />)}\r\n\r\n                        {[[\"white\", props.cost?.white || 0],\r\n                        [\"blue\", props.cost?.blue || 0],\r\n                        [\"green\", props.cost?.green || 0],\r\n                        [\"red\", props.cost?.red || 0],\r\n                        [\"black\", props.cost?.black || 0]].map(([color, count]: [CardColor, number]) => {\r\n                            if (count === 0) return;\r\n                            return <View style={{ flex: 1 }}>\r\n                                <ImageBackground style={{\r\n                                    borderRadius: cardHeight * costCountScale / 2,\r\n                                    height: cardHeight * costCountScale,\r\n                                    width: cardHeight * costCountScale,\r\n                                    flexDirection: \"row\",\r\n                                    alignItems: \"center\",\r\n                                }} source={colorToCostImage(color)} resizeMethod=\"scale\">\r\n                                    <Text style={{\r\n                                        textAlign: \"center\",\r\n                                        fontSize: cardHeight * 0.12,\r\n                                        fontWeight: \"800\",\r\n                                        color: \"white\",\r\n                                        textShadowRadius: cardHeight * 0.01,\r\n                                        textShadowColor: \"black\",\r\n                                        textShadowOffset: { width: 0, height: 0 },\r\n                                        flex: 1,\r\n                                    }}>\r\n                                        {count}\r\n                                    </Text>\r\n                                </ImageBackground>\r\n                            </View>;\r\n                        })}\r\n                    </View>\r\n                }\r\n                {props.count !== undefined &&\r\n                    <View style={{ flex: 3, padding: cardHeight * 0.03 }}>\r\n                        <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                            <Text style={{\r\n                                textAlign: \"center\",\r\n                                backgroundColor: \"black\",\r\n                                borderRadius: cardHeight * 0.25,\r\n                                overflow: \"hidden\",\r\n                                fontSize: cardHeight * 0.4,\r\n                                fontWeight: \"800\",\r\n                                color: \"white\",\r\n                                textShadowRadius: cardHeight * 0.01,\r\n                                textShadowColor: \"black\",\r\n                                textShadowOffset: { width: 0, height: 0 },\r\n                                flex: 1,\r\n                            }}>\r\n                                {props.count}\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n                }\r\n            </ImageBackground>;\r\n        } else {\r\n            return <View style={{ flex: 1, marginHorizontal: cardHeight * 0.03, marginVertical: cardHeight * 0.03, borderRadius: cardHeight * 0.04, overflow: \"hidden\" }}>\r\n                <ImageBackground style={{ flex: 1, padding: 10 }} resizeMode=\"stretch\" source={backToCardImage(props.prestige)} />\r\n            </View>;\r\n        }\r\n    })();\r\n\r\n    return <TouchableOpacity\r\n        disabled={!props.isSelectable}\r\n        onPress={props.onPress}\r\n        style={[{\r\n            height: cardHeight,\r\n            width: cardHeight * aspectRatio,\r\n            borderRadius: cardHeight * 0.05,\r\n            borderWidth: 1,\r\n            borderColor: 'white',\r\n            backgroundColor: 'white',\r\n        }, props.style, props.isSelectable && {\r\n            shadowColor: \"white\",\r\n            shadowRadius: cardHeight * 0.1,\r\n            shadowOpacity: 1,\r\n            shadowOffset: { width: 0, height: 0 },\r\n        }]}>\r\n        <View style={{\r\n            flex: 1, overflow: \"hidden\",\r\n            borderRadius: cardHeight * 0.05,\r\n        }}>{cardContents}</View>\r\n    </TouchableOpacity >;\r\n};\r\n\r\n\r\nconst Coin: React.FunctionComponent<{\r\n    isSelectable?: boolean,\r\n    onPress?: (event: GestureResponderEvent) => void,\r\n    color?: CoinColor,\r\n    count?: number,\r\n    scale?: number,\r\n}> = (props) => {\r\n    const coinHeight = hp(6) * (props.scale || 1);\r\n    return <TouchableOpacity\r\n        disabled={!props.isSelectable}\r\n        onPress={props.onPress}\r\n        style={[{\r\n            height: coinHeight,\r\n            width: coinHeight,\r\n            borderRadius: coinHeight / 2,\r\n            backgroundColor: props.color,\r\n            borderColor: \"#cea56e\",\r\n            borderWidth: coinHeight * 0.02,\r\n        }, props.isSelectable && {\r\n            shadowColor: \"white\",\r\n            shadowRadius: coinHeight * 0.2,\r\n            shadowOpacity: 1,\r\n            shadowOffset: { width: 0, height: 0 },\r\n        }]}><View style={{ flex: 1, borderRadius: coinHeight / 2, overflow: \"hidden\" }}>\r\n            <ImageBackground\r\n                style={{\r\n                    backgroundColor: \"#cea56e\",\r\n                    flex: 1,\r\n                    margin: coinHeight * 0.1,\r\n                    borderRadius: coinHeight / 2,\r\n                    overflow: \"hidden\",\r\n                }}\r\n                source={colorToGemImage(props.color)}\r\n                imageStyle={{\r\n                    margin: coinHeight * 0.1,\r\n                }}>\r\n                <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\", backgroundColor: \"rgba(0,0,0,0.5)\" }}>\r\n                    <Text style={{\r\n                        flex: 1,\r\n                        textAlign: \"center\",\r\n                        fontSize: coinHeight * 0.5,\r\n                        fontWeight: \"800\",\r\n                        color: \"white\",\r\n                        textShadowRadius: coinHeight * 0.01,\r\n                        textShadowColor: \"black\",\r\n                        textShadowOffset: { width: 0, height: 0 },\r\n                    }}>\r\n                        {props.count}\r\n                    </Text>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    </TouchableOpacity>;\r\n};\r\n\r\nconst Noble: React.FunctionComponent<{\r\n    isSelectable?: boolean,\r\n    onPress?: (event: GestureResponderEvent) => void,\r\n    cost: { color: CardColor, count: number; }[],\r\n    prestige: number,\r\n    nobleIndex: number,\r\n    style?: StyleProp<ViewStyle>,\r\n    scale?: number,\r\n}> = (props) => {\r\n    const nobleIndexToNobleImage = (index: number) => {\r\n        switch (index) {\r\n            case 1: return require('./noble1.jpg');\r\n            case 2: return require('./noble2.jpg');\r\n            case 3: return require('./noble3.jpg');\r\n            case 4: return require('./noble4.jpg');\r\n            case 5: return require('./noble5.jpg');\r\n            case 6: return require('./noble6.jpg');\r\n            case 7: return require('./noble7.jpg');\r\n            case 8: return require('./noble8.jpg');\r\n            case 9: return require('./noble9.jpg');\r\n            case 10: return require('./noble10.jpg');\r\n        }\r\n    };\r\n\r\n    const cardHeight = hp(8) * (props.scale || 1);\r\n\r\n    return <TouchableOpacity\r\n        disabled={!props.isSelectable}\r\n        onPress={props.onPress}\r\n        style={[{\r\n            height: cardHeight,\r\n            width: cardHeight,\r\n            borderRadius: cardHeight * 0.05,\r\n            borderWidth: 1,\r\n            borderColor: 'white',\r\n            backgroundColor: 'white',\r\n        }, props.style, props.isSelectable && {\r\n            shadowColor: \"white\",\r\n            shadowRadius: cardHeight * 0.1,\r\n            shadowOpacity: 1,\r\n            shadowOffset: { width: 0, height: 0 },\r\n        }]}><View style={{ flex: 1, overflow: \"hidden\", borderRadius: cardHeight * 0.05, }}>\r\n            <ImageBackground\r\n                style={{\r\n                    backgroundColor: \"#cea56e\",\r\n                    flex: 1,\r\n                    overflow: \"hidden\",\r\n                    flexDirection: \"row\"\r\n                }}\r\n                source={nobleIndexToNobleImage(props.nobleIndex)}>\r\n                <View style={{ flex: 1, flexDirection: \"column\", alignItems: \"center\", backgroundColor: \"rgba(255, 255, 255, 0.7)\" }}>\r\n                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                        <Text style={{\r\n                            textAlign: \"center\",\r\n                            fontSize: cardHeight * 0.25,\r\n                            color: \"white\",\r\n                            fontWeight: \"800\",\r\n                            textShadowRadius: cardHeight * 0.01,\r\n                            textShadowColor: \"black\",\r\n                            textShadowOffset: { width: 0, height: 0 },\r\n                            flex: 1,\r\n                        }}>\r\n                            {props.prestige}\r\n                        </Text>\r\n                    </View>\r\n\r\n                    {props.cost.map(({ color, count }) => {\r\n                        if (count === 0) return;\r\n                        return <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                            <ImageBackground style={{\r\n                                height: cardHeight * 0.2,\r\n                                width: cardHeight * 0.2 * 0.7,\r\n                                flexDirection: \"row\",\r\n                                alignItems: \"center\",\r\n                                overflow: \"hidden\",\r\n                            }} source={colorToCostImage(color)} resizeMethod=\"scale\" imageStyle={{\r\n                                height: cardHeight,\r\n                                width: cardHeight,\r\n                                top: -cardHeight / 2,\r\n                                left: -cardHeight / 2,\r\n                            }} >\r\n                                <Text style={{\r\n                                    textAlign: \"center\",\r\n                                    fontSize: cardHeight * 0.12,\r\n                                    fontWeight: \"800\",\r\n                                    color: \"white\",\r\n                                    textShadowRadius: cardHeight * 0.01,\r\n                                    textShadowColor: \"black\",\r\n                                    textShadowOffset: { width: 0, height: 0 },\r\n                                    flex: 1,\r\n                                }}>\r\n                                    {count}\r\n                                </Text>\r\n                            </ImageBackground>\r\n                        </View>;\r\n                    })}\r\n                </View>\r\n                <View style={{ flex: 3, backgroundColor: \"rgba(128, 128, 128, 0.3)\" }}></View>\r\n            </ImageBackground>\r\n        </View>\r\n    </TouchableOpacity>;\r\n};\r\n\r\nconst PlayerArea: React.FunctionComponent<{\r\n    coins: { white: number, black: number, red: number, blue: number, green: number, gold: number; },\r\n    coinsSelectable?: boolean,\r\n    side: \"left\" | \"bottom\" | \"right\",\r\n    name?: string,\r\n    isTurn?: boolean,\r\n    cards?: {\r\n        blue?: number,\r\n        red?: number,\r\n        green?: number,\r\n        white?: number,\r\n        black?: number,\r\n    },\r\n    reservedCards?: number[],\r\n    prestige?: number,\r\n    onCoinPress?: any,\r\n}> = (props) => {\r\n    const scale = 1.2;\r\n    const areaWidth = Math.min(wp(40), hp(60)) * scale;\r\n    return <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\" }}>\r\n        <View style={{ flex: 1, alignItems: \"center\" }}>\r\n            <View style={{\r\n                width: areaWidth,\r\n                height: areaWidth / 3.5,\r\n                backgroundColor: props.isTurn ? \"#587c9e\" : \"#204260\",\r\n                borderRadius: wp(1) * scale,\r\n                overflow: \"hidden\",\r\n                flexDirection: \"row\",\r\n                transform: [{ rotate: props.side === \"bottom\" ? \"\" : (props.side === \"left\" ? \"90deg\" : \"-90deg\") }]\r\n            }}>\r\n                <View style={{ flex: 1, alignItems: \"center\" }}>\r\n                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                        <Text style={{\r\n                            textAlign: \"center\",\r\n                            backgroundColor: \"goldenrod\",\r\n                            borderRadius: areaWidth * 0.01,\r\n                            overflow: \"hidden\",\r\n                            padding: areaWidth * 0.01,\r\n                            fontSize: areaWidth * 0.04,\r\n                            fontWeight: \"800\",\r\n                            color: \"white\",\r\n                            width: areaWidth * 0.07,\r\n                            textShadowRadius: areaWidth * 0.01,\r\n                            textShadowColor: \"black\",\r\n                            textShadowOffset: { width: 0, height: 0 },\r\n                        }}>{props.prestige || 0}</Text>\r\n                    </View>\r\n                    <View style={{\r\n                        flex: 2,\r\n                    }}>\r\n                        <Text style={{\r\n                            transform: [{ rotateZ: \"-90deg\" }],\r\n                            overflow: \"hidden\",\r\n                            marginTop: areaWidth * 0.08,\r\n                            width: areaWidth * 0.17,\r\n                            fontSize: areaWidth * 0.02,\r\n                            fontWeight: \"800\",\r\n                            color: \"white\",\r\n                            textShadowRadius: areaWidth * 0.01,\r\n                            textShadowColor: \"black\",\r\n                            textShadowOffset: { width: 0, height: 0 },\r\n                        }}>{props.name}</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={{ flex: 10 }}>\r\n                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                        {\r\n                            [\r\n                                [\"blue\", props.coins.blue],\r\n                                [\"red\", props.coins.red],\r\n                                [\"green\", props.coins.green],\r\n                                [\"white\", props.coins.white],\r\n                                [\"black\", props.coins.black],\r\n                                [\"gold\", props.coins.gold],\r\n                            ].map(([color, count]: [CoinColor, number]) => {\r\n                                return <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        alignItems: \"center\",\r\n                                    }}>\r\n                                    <Coin color={color} count={count} scale={0.6 * scale} isSelectable={count > 0 && props.coinsSelectable} onPress={() => { props.onCoinPress(color) }} />\r\n                                </View>;\r\n                            })\r\n                        }\r\n                    </View>\r\n                    <View style={{\r\n                        flex: 2,\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        {\r\n                            [\r\n                                [\"blue\", props.cards?.blue],\r\n                                [\"red\", props.cards?.red],\r\n                                [\"green\", props.cards?.green],\r\n                                [\"white\", props.cards?.white],\r\n                                [\"black\", props.cards?.black],\r\n                            ].map(([color, count]: [CardColor, number]) => {\r\n                                return <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        alignItems: \"center\",\r\n                                    }}>\r\n                                    <Card color={color} scale={0.6 * scale} count={count} />\r\n                                </View>;\r\n                            })\r\n                        }\r\n                        <View style={{ flex: 1 }}>\r\n                            <View\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: \"row\",\r\n                                    alignItems: \"center\",\r\n                                    paddingHorizontal: Math.min(wp(2), hp(3)) * scale * 1.2,\r\n                                }}>\r\n                                {\r\n                                    props.reservedCards?.map(level => {\r\n                                        return <View style={[{ flex: 1, alignItems: \"center\", direction: \"ltr\", backgroundColor: \"black\" }]}>\r\n                                            <Card prestige={level} scale={0.6 * scale} />\r\n                                        </View>;\r\n                                    })\r\n                                }\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    </View>;\r\n};\r\n\r\nexport default class SplendorBoard extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        let faceupCards = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            faceupCards.push(new Array(4).fill({ color: \"blue\", prestige: 3, cost: { white: 0, green: 3, red: 3, black: 5, blue: 0 } }));\r\n        }\r\n\r\n        faceupCards[0][0] = { color: \"red\", prestige: 3, cost: { green: 3, red: 3, black: 5, white: 0, blue: 0 } };\r\n        faceupCards[1][1] = null;\r\n\r\n        this.state = {\r\n            buttons: [[\"Back\", \"back\", true]],\r\n            faceupCards,\r\n            coins: { white: 0, black: 0, red: 0, blue: 0, green: 0, gold: 0 },\r\n            coinsSelectable: { white: false, black: false, red: false, blue: false, green: false, gold: false },\r\n            pilesSelectable: [false, false, false],\r\n            pilesVisible: [true, true, true],\r\n            nobles: [\r\n                { cost: [{ color: \"green\", count: 4 }, { color: \"red\", count: 4 }, { color: \"blue\", count: 4 }], prestige: 3, nobleIndex: 6 },\r\n                null,\r\n                { cost: [{ color: \"green\", count: 4 }, { color: \"green\", count: 4 }, { color: \"green\", count: 4 }], prestige: 3, nobleIndex: 8 },\r\n                { cost: [{ color: \"green\", count: 4 }, { color: \"green\", count: 4 }, { color: \"green\", count: 4 }], prestige: 3, nobleIndex: 9 },\r\n                { cost: [{ color: \"green\", count: 4 }, { color: \"green\", count: 4 }, { color: \"green\", count: 4 }], prestige: 3, nobleIndex: 10 },\r\n            ],\r\n            displayText: \"Hello\",\r\n            playerStates: [{\r\n                name: \"Amol\",\r\n                isTurn: false,\r\n                coins: { white: 0, black: 0, red: 0, blue: 0, green: 0, gold: 0 },\r\n                prestige: 0,\r\n                coinsSelectable: false,\r\n                reservedCards: [],\r\n                cards: { white: 0, black: 0, red: 0, blue: 0, green: 0 },\r\n            }, {\r\n                name: \"Amol\",\r\n                isTurn: false,\r\n                coins: { white: 0, black: 0, red: 0, blue: 0, green: 0, gold: 0 },\r\n                coinsSelectable: false,\r\n                prestige: 0,\r\n                reservedCards: [],\r\n                cards: { white: 0, black: 0, red: 0, blue: 0, green: 0 },\r\n            }, {\r\n                name: \"Amol\",\r\n                isTurn: false,\r\n                coins: { white: 0, black: 0, red: 0, blue: 0, green: 0, gold: 0 },\r\n                coinsSelectable: false,\r\n                prestige: 0,\r\n                reservedCards: [],\r\n                cards: { white: 0, black: 0, red: 0, blue: 0, green: 0 },\r\n            }, {\r\n                name: \"Amol\",\r\n                isTurn: false,\r\n                coins: { white: 0, black: 0, red: 0, blue: 0, green: 0, gold: 0 },\r\n                coinsSelectable: false,\r\n                prestige: 0,\r\n                reservedCards: [],\r\n                cards: { white: 0, black: 0, red: 0, blue: 0, green: 0 },\r\n            }]\r\n        };\r\n    }\r\n\r\n    updateBoard(state: State) {\r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        return <SafeAreaView style={{\r\n            flex: 1,\r\n            backgroundColor: \"#1c2147\",\r\n        }}>\r\n            <View style={{ flex: 3, flexDirection: \"row\" }}>\r\n                <View style={{ flex: 1 }}>\r\n                    {this.state.playerStates.length > 2 &&\r\n                        <PlayerArea side=\"left\"\r\n                            onCoinPress={(color) => { this.props.onAction({ type: \"select-player-coin\", color }); }}\r\n                            name={this.state.playerStates[this.state.playerStates.length - 1].name}\r\n                            isTurn={this.state.playerStates[this.state.playerStates.length - 1].isTurn}\r\n                            coins={this.state.playerStates[this.state.playerStates.length - 1].coins}\r\n                            coinsSelectable={this.state.playerStates[this.state.playerStates.length - 2].coinsSelectable}\r\n                            cards={this.state.playerStates[this.state.playerStates.length - 1].cards}\r\n                            reservedCards={this.state.playerStates[this.state.playerStates.length - 1].reservedCards}\r\n                            prestige={this.state.playerStates[this.state.playerStates.length - 1].prestige} />\r\n                    }\r\n                </View>\r\n                <View style={{ flex: 4, backgroundColor: \"#587c9e\" }}>\r\n                    <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\" }}>\r\n                        {this.state.buttons.map(([title, action, enabled]) => {\r\n                            return <Button title={title} disabled={!enabled} onPress={() => {\r\n                                if (action === \"back\") {\r\n                                    this.props.onBack();\r\n                                } else {\r\n                                    this.props.onAction({ \"type\": action });\r\n                                }\r\n                            }} />;\r\n                        })}\r\n                    </View>\r\n                    <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\" }}>\r\n                        <Text style={{\r\n                            textAlign: \"center\",\r\n                            fontSize: wp(2),\r\n                            fontWeight: \"800\",\r\n                            color: \"white\",\r\n                            textShadowColor: \"black\",\r\n                            textShadowOffset: { width: 0, height: 0 },\r\n                            flex: 1,\r\n                        }}>{this.state.displayText}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 10, flexDirection: \"row\" }}>\r\n                        <View style={{ flex: 10 }}>\r\n                            <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                                {\r\n                                    ([\r\n                                        [this.state.coins.blue, this.state.coinsSelectable.blue, \"blue\"],\r\n                                        [this.state.coins.red, this.state.coinsSelectable.red, \"red\"],\r\n                                        [this.state.coins.green, this.state.coinsSelectable.green, \"green\"],\r\n                                        [this.state.coins.white, this.state.coinsSelectable.white, \"white\"],\r\n                                        [this.state.coins.black, this.state.coinsSelectable.black, \"black\"],\r\n                                        [this.state.coins.gold, this.state.coinsSelectable.gold, \"gold\"],\r\n                                    ] as [number, boolean, CoinColor][]).map(\r\n                                        ([count, isSelectable, color]) => {\r\n                                            return <View style={{ flex: 1, alignItems: \"center\" }}>\r\n                                                <Coin\r\n                                                    isSelectable={isSelectable}\r\n                                                    color={color}\r\n                                                    count={count}\r\n                                                    onPress={() => { this.props.onAction({ type: \"select-coin\", color }) }} />\r\n                                            </View>\r\n\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </View>\r\n                            <View style={{ flex: 8, flexDirection: \"column\" }}>\r\n                                {this.state.faceupCards.map((row, rowIndex) => {\r\n                                    return <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n                                        <View style={{ flex: 1, alignItems: \"center\" }}>{this.state.pilesVisible[2 - rowIndex] && <Card isSelectable={this.state.pilesSelectable[2 - rowIndex]} onPress={() => { this.props.onAction({ type: \"select-pile-card\", level: 3 - rowIndex }) }} prestige={3 - rowIndex} />}</View>\r\n                                        {row.map((card, colIndex) => {\r\n                                            return <View style={{ flex: 1, alignItems: \"center\" }}>{card && <Card isSelectable={card.isSelectable} onPress={() => { this.props.onAction({ type: \"select-board-card\", rowIndex, colIndex }) }} prestige={card.prestige} color={card.color} cost={card.cost} />}</View>;\r\n                                        })}\r\n                                    </View>;\r\n                                })}\r\n                            </View>\r\n                        </View>\r\n                        <View style={{ flex: 2, alignItems: \"center\" }}>\r\n                            {this.state.nobles.map((noble, index) => {\r\n                                return <View style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\" }}>\r\n                                    <View style={{ flex: 1, alignItems: \"center\" }}>\r\n                                        {noble && <Noble cost={noble.cost} prestige={noble.prestige} isSelectable={noble.isSelectable} onPress={() => { this.props.onAction({ type: \"select-noble-card\", index }) }} nobleIndex={noble.nobleIndex} />}\r\n                                    </View>\r\n                                </View>;\r\n                            })}\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                    {this.state.playerStates.length > 2 &&\r\n                        <PlayerArea side=\"right\"\r\n                            onCoinPress={(color) => { this.props.onAction({ type: \"select-player-coin\", color }); }}\r\n                            name={this.state.playerStates[this.state.playerStates.length - 2].name}\r\n                            isTurn={this.state.playerStates[this.state.playerStates.length - 2].isTurn}\r\n                            coins={this.state.playerStates[this.state.playerStates.length - 2].coins}\r\n                            coinsSelectable={this.state.playerStates[this.state.playerStates.length - 2].coinsSelectable}\r\n                            cards={this.state.playerStates[this.state.playerStates.length - 2].cards}\r\n                            reservedCards={this.state.playerStates[this.state.playerStates.length - 2].reservedCards}\r\n                            prestige={this.state.playerStates[this.state.playerStates.length - 2].prestige} />\r\n                    }\r\n                </View>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: \"row\" }}>\r\n                {(this.state.playerStates.length === 2 || this.state.playerStates.length === 4) &&\r\n                    <PlayerArea side=\"bottom\"\r\n                        onCoinPress={(color) => { this.props.onAction({ type: \"select-player-coin\", color }); }}\r\n                        name={this.state.playerStates[1].name}\r\n                        isTurn={this.state.playerStates[1].isTurn}\r\n                        coins={this.state.playerStates[1].coins}\r\n                        coinsSelectable={this.state.playerStates[1].coinsSelectable}\r\n                        cards={this.state.playerStates[1].cards}\r\n                        reservedCards={this.state.playerStates[1].reservedCards}\r\n                        prestige={this.state.playerStates[1].prestige} />\r\n                }\r\n                {this.state.playerStates.length > 0 &&\r\n                    <PlayerArea side=\"bottom\"\r\n                        onCoinPress={(color) => { this.props.onAction({ type: \"select-player-coin\", color }); }}\r\n                        name={this.state.playerStates[0].name}\r\n                        isTurn={this.state.playerStates[0].isTurn}\r\n                        coins={this.state.playerStates[0].coins}\r\n                        coinsSelectable={this.state.playerStates[0].coinsSelectable}\r\n                        cards={this.state.playerStates[0].cards}\r\n                        reservedCards={this.state.playerStates[0].reservedCards}\r\n                        prestige={this.state.playerStates[0].prestige} />\r\n                }\r\n            </View>\r\n        </SafeAreaView>;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { View, Text, SafeAreaView, ScrollView, Dimensions, TouchableOpacity } from 'react-native';\r\nimport { ScreenOrientation } from 'expo';\r\nimport { Card, CardInfo } from './SplendorBoard';\r\nimport { heightPercentageToDP } from \"react-native-responsive-screen\";\r\n\r\ntype Props = {\r\n    onAction(action: any): Promise<void>;\r\n    onBack(): void;\r\n};\r\n\r\ntype State = {\r\n    hand: CardInfo[],\r\n    displayText: string,\r\n};\r\n\r\nexport default class SplendorHand extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hand: [],\r\n            displayText: \"Waiting for a new game\",\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        await ScreenOrientation.unlockAsync();\r\n    }\r\n\r\n    updateHand(hand: any) {\r\n        this.setState(hand);\r\n    }\r\n\r\n    renderHand() {\r\n        return [this.state.hand.map((card, i) => <View style={{ flex: 1, marginVertical: heightPercentageToDP(4), alignItems: \"center\" }}>{\r\n            <Card prestige={card.prestige} cost={card.cost} color={card.color} isSelectable={card.isSelectable} scale={1.8} onPress={() => this.props.onAction({ type: \"select-hand-card\", index: i })} />\r\n        }</View>), new Array(3 - this.state.hand.length).fill(null).map(_ => <View style={{ flex: 1 }} />)];\r\n    }\r\n\r\n    render() {\r\n        return <SafeAreaView style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            backgroundColor: \"#1c2147\",\r\n        }}>\r\n            <View style={{ flex: 3, flexDirection: \"row\" }}>\r\n                {/* <ScrollView style={{ flex: 1, flexDirection: \"row\", marginVertical: 20 }} horizontal={true}> */}\r\n                {this.renderHand()}\r\n                {/* </ScrollView> */}\r\n            </View>\r\n            <View style={{ flex: 1 }}>\r\n                <Text style={{ flex: 1, textAlign: \"center\", lineHeight: 80, fontSize: 35, color: \"white\", textShadowColor: \"black\", textShadowRadius: 10, }}>{this.state.displayText}</Text>\r\n            </View>\r\n        </SafeAreaView>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport BaseGameScreen, { GameScreenProps } from \"../BaseGameScreen\";\r\nimport SplendorHand from \"./SplendorHand\";\r\nimport SplendorBoard from \"./SplendorBoard\";\r\n\r\nexport default class SplendorScreen extends React.Component<GameScreenProps> implements BaseGameScreen {\r\n    board: React.RefObject<SplendorBoard>;\r\n    hand: React.RefObject<SplendorHand>;\r\n\r\n    constructor(props: GameScreenProps) {\r\n        super(props);\r\n        this.board = React.createRef();\r\n        this.hand = React.createRef();\r\n    }\r\n\r\n    updateScreen(content: any) {\r\n        if (this.props.playerName === \"board\") {\r\n            this.board.current.updateBoard(content);\r\n        } else {\r\n            this.hand.current.updateHand(content);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.playerName === \"board\") {\r\n            return <SplendorBoard ref={this.board} onAction={this.props.onAction} onBack={this.props.onBack} />;\r\n        } else {\r\n            return <SplendorHand ref={this.hand} onAction={this.props.onAction} onBack={this.props.onBack} />;\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { SERVER_URI } from '../../config/constants';\r\nimport JaipurScreen from \"../../components/jaipur/JaipurScreen\";\r\nimport CodenamesScreen from \"../../components/codenames/CodenamesScreen\";\r\nimport SplendorScreen from \"../../components/splendor/SplendorScreen\";\r\n\r\ntype Props = {\r\n    playerName: string,\r\n    gameCode: string,\r\n    gameName: string,\r\n    password: string,\r\n    onBack: () => void,\r\n};\r\n\r\nexport default class GameScreenImpl extends React.Component<Props> {\r\n    socket: SocketIOClient.Socket;\r\n    screen: React.RefObject<JaipurScreen>;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.screen = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socket = socketIOClient(SERVER_URI, {\r\n            query: {\r\n                playerName: this.props.playerName,\r\n                gameCode: this.props.gameCode,\r\n                gameName: this.props.gameName,\r\n                password: this.props.password,\r\n            },\r\n        });\r\n        this.socket.on(\"content\", (screen: any) => {\r\n            if (Object.keys(screen).length === 0) {\r\n                return;\r\n            }\r\n            this.screen.current.updateScreen(screen);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.socket.close();\r\n    }\r\n\r\n    onAction = async (action: any) => {\r\n        this.socket.emit(\"action\", action);\r\n    };\r\n\r\n    render() {\r\n        const Impl = (() => {\r\n            switch (this.props.gameName) {\r\n                case 'codenames':\r\n                    return CodenamesScreen;\r\n                case 'jaipur':\r\n                    return JaipurScreen;\r\n                // case 'sequence':\r\n                //     return SequenceBoard;\r\n                case 'splendor':\r\n                    return SplendorScreen;\r\n            }\r\n        })();\r\n        return <Impl\r\n            ref={this.screen}\r\n            playerName={this.props.playerName}\r\n            onAction={this.onAction}\r\n            onBack={this.props.onBack} />;\r\n    }\r\n};\r\n","import React from 'react';\nimport { RouteProp } from \"@react-navigation/native\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\n\nimport { RootStackParamList } from \"../../../App\";\nimport GameScreenImpl from \"./GameScreenImpl\";\n\ntype GameScreenSceneNavigationProp = StackNavigationProp<RootStackParamList, 'GameScreen'>;\ntype GameScreenSceneRouteProp = RouteProp<RootStackParamList, 'GameScreen'>;\ntype GameScreenProps = { navigation: GameScreenSceneNavigationProp, route: GameScreenSceneRouteProp; };\n\nconst GameScreen: React.FunctionComponent<GameScreenProps> = (props) => {\n    return <GameScreenImpl\n        playerName={props.route.params.playerName}\n        gameCode={props.route.params.gameCode}\n        gameName={props.route.params.gameName}\n        password={props.route.params.password}\n        onBack={props.navigation.goBack} />;\n};\n\nexport default GameScreen;","import 'react-native-gesture-handler';\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from \"./app/scenes/Home\";\nimport GameScreen from \"./app/scenes/GameScreen\";\n\nconsole.disableYellowBox = true;\n\nexport type RootStackParamList = {\n  Home: undefined;\n  GameScreen: { playerName: string, gameName: string; gameCode: string; password: string; };\n};\nconst RootStack = createStackNavigator<RootStackParamList>();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <NavigationContainer>\n        <RootStack.Navigator headerMode=\"screen\">\n          <RootStack.Screen name=\"Home\" component={Home} options={{ headerTitle: \"All A-Board\" }} />\n          <RootStack.Screen name=\"GameScreen\" component={GameScreen} options={{ headerShown: false }} />\n        </RootStack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/bonus_3_token.b7d6048e.png\";","module.exports = __webpack_public_path__ + \"static/media/bonus_4_token.9dbb865c.png\";","module.exports = __webpack_public_path__ + \"static/media/bonus_5_token.0b15f02d.png\";","module.exports = __webpack_public_path__ + \"static/media/camel_token.f1239e82.png\";","module.exports = __webpack_public_path__ + \"static/media/cloth_token.b45112dd.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond_token.eb1081d0.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_token.31dad298.png\";","module.exports = __webpack_public_path__ + \"static/media/leather_token.027cb7e8.png\";","module.exports = __webpack_public_path__ + \"static/media/seal_of_excellence.c17ff76a.png\";","module.exports = __webpack_public_path__ + \"static/media/silver_token.404ac8cc.png\";","module.exports = __webpack_public_path__ + \"static/media/spice_token.9a70cbc9.png\";","module.exports = __webpack_public_path__ + \"static/media/camel-char.87d3d7f8.png\";","module.exports = __webpack_public_path__ + \"static/media/bystander.75a5f2bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/agent-red.211f9441.jpg\";","module.exports = __webpack_public_path__ + \"static/media/agent-blue.5e1826cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/assasin.411b1958.jpg\";","module.exports = __webpack_public_path__ + \"static/media/black_card1.6d6f8899.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_card1.52bf5902.png\";","module.exports = __webpack_public_path__ + \"static/media/green_card1.adc096cb.png\";","module.exports = __webpack_public_path__ + \"static/media/red_card1.deb918fc.png\";","module.exports = __webpack_public_path__ + \"static/media/white_card1.044cb336.png\";","module.exports = __webpack_public_path__ + \"static/media/black_gem.b86d9d8a.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_gem.09cccc50.png\";","module.exports = __webpack_public_path__ + \"static/media/green_gem.06f8d9c1.png\";","module.exports = __webpack_public_path__ + \"static/media/red_gem.55a9e0e9.png\";","module.exports = __webpack_public_path__ + \"static/media/white_gem.280f28cf.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_gem.9b30a3de.png\";","module.exports = __webpack_public_path__ + \"static/media/black_cost.9f08022a.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_cost.40543953.png\";","module.exports = __webpack_public_path__ + \"static/media/green_cost.a986c4ed.png\";","module.exports = __webpack_public_path__ + \"static/media/red_cost.cf8936a1.png\";","module.exports = __webpack_public_path__ + \"static/media/white_cost.6e2a2667.png\";","module.exports = __webpack_public_path__ + \"static/media/back_card1.78e66fa5.png\";","module.exports = __webpack_public_path__ + \"static/media/back_card2.88d2212c.png\";","module.exports = __webpack_public_path__ + \"static/media/back_card3.174b6eea.png\";","module.exports = __webpack_public_path__ + \"static/media/noble1.5c6d5d53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble2.1d04e8dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble3.f6e7d0fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble4.cc02011b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble5.f234e2c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble6.439954d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble7.2500e4e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble8.c3b81d52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble9.ef78a611.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noble10.0d98c3d2.jpg\";"],"sourceRoot":""}