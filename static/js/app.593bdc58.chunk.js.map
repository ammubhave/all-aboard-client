{"version":3,"sources":["app/components/jaipur/camel_card.png","app/components/jaipur/cloth_card.png","app/components/jaipur/cover_card.png","app/components/jaipur/diamond_card.png","app/components/jaipur/gold_card.png","app/components/jaipur/leather_card.png","app/components/jaipur/silver_card.png","app/components/jaipur/spice_card.png","app/components/jaipur/coin.png","app/scenes/Home/styles.tsx","app/config/constants.tsx","app/components/Button.tsx","app/scenes/Home/index.tsx","app/components/jaipur/styles.tsx","app/components/jaipur/utils.tsx","app/components/jaipur/JaipurHand.tsx","app/components/jaipur/renderBoardMat.tsx","app/components/jaipur/JaipurBoard.tsx","app/components/jaipur/JaipurScreen.tsx","app/components/codenames/CodenamesScreen.tsx","app/scenes/GameScreen/GameScreenImpl.tsx","app/scenes/GameScreen/index.tsx","App.tsx","web-build/register-service-worker.js","app/components/jaipur/bonus_3_token.png","app/components/jaipur/bonus_4_token.png","app/components/jaipur/bonus_5_token.png","app/components/jaipur/camel_token.png","app/components/jaipur/cloth_token.png","app/components/jaipur/diamond_token.png","app/components/jaipur/gold_token.png","app/components/jaipur/leather_token.png","app/components/jaipur/seal_of_excellence.png","app/components/jaipur/silver_token.png","app/components/jaipur/spice_token.png","app/components/jaipur/camel-char.png","app/components/codenames/bystander.jpg","app/components/codenames/agent-red.jpg","app/components/codenames/agent-blue.jpg","app/components/codenames/assasin.jpg"],"names":["module","exports","styles","StyleSheet","create","container","margin","input","marginTop","marginBottom","height","borderColor","borderWidth","backgroundColor","separator","marginVertical","borderBottomColor","borderBottomWidth","hairlineWidth","SERVER_URI","Button","props","rootProps","disabled","View","style","children","TouchableOpacity","onPress","flex","display","flexDirection","alignItems","borderRadius","Text","color","fontWeight","fontSize","textAlign","padding","title","Home","state","playerName","gameCode","selectedGame","password","SafeAreaView","TextInput","value","editable","onChangeText","setState","this","Picker","selectedValue","onValueChange","itemValue","itemIndex","Item","label","navigation","navigate","gameName","React","Component","WIDTH","scale_pct","undefined","HEIGHT","MIN_WIDTH_HEIGHT","Math","min","Dimensions","get","width","RANGE","lo","hi","len","Array","fill","map","_","i","mat","mat_strips","position","mat_strip_circle","round","mat_card","paddingHorizontal","paddingTop","paddingBottom","mat_discard_pile","textAlignVertical","mat_card_glow","shadowColor","shadowRadius","shadowOpacity","mat_grey_cover","right","top","mat_goods_token_track","mat_bonus_token_track","card","shadowOffset","token","overflow","buttonPanel","left","justifyContent","alignContent","goodsTokenTrack","bottom","bonusTokenTrack","Card","cardTypeToImage","require","isSelectable","flip","transform","rotateX","rotateY","ImageBackground","source","type","count","textShadowRadius","textShadowColor","selected","lineHeight","Coin","Token","tokenTypeToImage","rotateZ","JaipurHand","hand","handIsSelected","displayText","ScreenOrientation","lockAsync","OrientationLock","LANDSCAPE","unlockAsync","onAction","index","isSelected","Image","resizeMode","renderCard","marginHorizontal","ScrollView","horizontal","renderHand","BoardMapStrip","BoardMapStripCircle","BoardMatCard","glow","BoardCamel","opacity","BoardGoodsTokenTrack","BoardBonusTokenTrack","JaipurBoard","goodsTokenTrackTop","goodsTokenTrackBottom","bonusTokenTrackTop","bonusTokenTrackBottom","playerStates","sealsOfExcellence","camels","hasCamelToken","rupees","goodsTokens","diamond","gold","silver","cloth","spice","leather","bonusTokens","bonus_3","bonus_4","bonus_5","market","marketIsSelected","marketIsSelectable","topDiscard","drawPileHasCards","camelToken","currentPlayerIndex","buttons","players","renderBoardMat","onBack","j","playerIndex","action","length","getButton","JaipurScreen","board","createRef","content","current","updateBoard","updateHand","ref","CodenamesScreen","red","redCodemaster","blue","blueCodemaster","playerNameDisplay","status","renderPlayerList","team","teamName","codemaster","paddingVertical","scaleWidth","scaleHeight","scale","scaledSize","size","ceil","AspectView","useState","layout","setLayout","flatten","aspectRatio","push","onLayout","hp","nativeEvent","console","log","row","rowIndex","cell","colIndex","kind","wp","marginLeft","fontStyle","borderBottomLeftRadius","borderBottomRightRadius","enabled","renderPlayerSelection","renderBoard","GameScreenImpl","a","async","socket","emit","screen","socketIOClient","query","on","Object","keys","updateScreen","close","Impl","GameScreen","route","params","goBack","disableYellowBox","RootStack","createStackNavigator","App","NavigationContainer","Navigator","headerMode","Screen","name","component","options","headerTitle","headerShown","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.593bdc58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camel_card.a1e5c2c9.png\";","module.exports = __webpack_public_path__ + \"static/media/cloth_card.0d2307d0.png\";","module.exports = __webpack_public_path__ + \"static/media/cover_card.3f00f8c9.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond_card.04b067c8.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_card.f45f8f0b.png\";","module.exports = __webpack_public_path__ + \"static/media/leather_card.a9ca0b3b.png\";","module.exports = __webpack_public_path__ + \"static/media/silver_card.d1251adf.png\";","module.exports = __webpack_public_path__ + \"static/media/spice_card.5d184b27.png\";","module.exports = __webpack_public_path__ + \"static/media/coin.f17a00ff.png\";","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        margin: 10,\n    },\n    input: {\n        marginTop: 5,\n        marginBottom: 8,\n        height: 40,\n        borderColor: '#7a42f4',\n        borderWidth: 1,\n        backgroundColor: 'white',\n    },\n    separator: {\n        marginVertical: 8,\n        borderBottomColor: '#737373',\n        borderBottomWidth: StyleSheet.hairlineWidth,\n    },\n});\n\nexport default styles;","// export const SERVER_URI = \"http://localhost:3000\";\r\n// export const SERVER_URI = \"http://192.168.50.173:3000\";\r\nexport const SERVER_URI = \"http://all-aboard-server.herokuapp.com\";","import React from 'react';\r\nimport { StyleProp, ViewStyle, View, Text, TouchableOpacity, GestureResponderEvent } from \"react-native\";\r\n\r\nconst Button: React.FunctionComponent<{\r\n    flip?: boolean,\r\n    title: string,\r\n    disabled?: boolean,\r\n    onPress?: (event: GestureResponderEvent) => void,\r\n    style?: StyleProp<ViewStyle>,\r\n}> = (props) => {\r\n    const RootElement: React.FunctionComponent<{ style: StyleProp<ViewStyle>; }> = (rootProps) => {\r\n        return !props.disabled ?\r\n            <TouchableOpacity style={rootProps.style} onPress={props.onPress}>{rootProps.children}</TouchableOpacity> :\r\n            <View style={rootProps.style}>{rootProps.children}</View>;\r\n    };\r\n\r\n\r\n    return <RootElement\r\n        style={[{\r\n            backgroundColor: props.disabled ? \"grey\" : \"#7a42f4\",\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            margin: 5,\r\n            borderRadius: 5,\r\n            borderWidth: 3,\r\n        }, props.style]}\r\n    >\r\n        <Text style={{\r\n            flex: 1,\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n            fontSize: 19,\r\n            textAlign: \"center\",\r\n            padding: 4,\r\n        }}>\r\n            {props.title}\r\n        </Text>\r\n    </RootElement>;\r\n};\r\n\r\nexport default Button;","import React from 'react';\nimport { TextInput, SafeAreaView, View, Picker, Text } from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport { RootStackParamList } from '../../../App';\nimport styles from './styles';\nimport { SERVER_URI } from \"../../config/constants\";\nimport Button from \"../../components/Button\";\n\ntype HomeSceneNavigationProp = StackNavigationProp<RootStackParamList, 'Home'>;\ntype Props = { navigation: HomeSceneNavigationProp; };\n\ntype State = {\n    playerName: string;\n    gameCode: string;\n    selectedGame: string;\n    password: string;\n};\n\nexport default class Home extends React.Component<Props, State> {\n    constructor(props: Readonly<Props>) {\n        super(props);\n\n        this.state = {\n            playerName: \"\",\n            gameCode: \"\",\n            selectedGame: \"jaipur\",\n            password: \"\",\n        };\n    }\n\n    render() {\n        return (\n            <SafeAreaView style={styles.container}>\n                <KeyboardAwareScrollView>\n                    <View>\n                        <Text>Server Address</Text>\n                        <TextInput value={SERVER_URI} style={styles.input} editable={false} />\n                    </View>\n                    <View>\n                        <Text>Server Password</Text>\n                        <TextInput\n                            onChangeText={password => this.setState({ password })}\n                            value={this.state.password}\n                            style={styles.input}\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Text>Game</Text>\n                        <Picker\n                            selectedValue={this.state.selectedGame}\n                            onValueChange={(itemValue, itemIndex) => this.setState({ selectedGame: itemValue })}\n                            style={{ marginTop: 5, marginBottom: 8 }}\n                        >\n                            <Picker.Item label=\"Jaipur\" value=\"jaipur\" />\n                            {/* <Picker.Item label=\"Splendor\" value=\"splendor\" /> */}\n                            <Picker.Item label=\"Codenames\" value=\"codenames\" />\n                        </Picker>\n                    </View>\n                    <View>\n                        <Text>Game Code</Text>\n                        <TextInput\n                            onChangeText={gameCode => this.setState({ gameCode })}\n                            value={this.state.gameCode}\n                            style={styles.input}\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Button\n                            title=\"Board View\"\n                            disabled={this.state.gameCode === \"\"}\n                            onPress={() => this.props.navigation.navigate('GameScreen', { playerName: 'board', gameName: this.state.selectedGame, gameCode: this.state.gameCode, password: this.state.password })}\n                        />\n                    </View>\n                    <View style={styles.separator} />\n                    <View>\n                        <Text>Player Name</Text>\n                        <TextInput\n                            onChangeText={playerName => this.setState({ playerName })}\n                            value={this.state.playerName}\n                            style={styles.input}\n                        />\n                        <Button\n                            title=\"Player View\"\n                            disabled={this.state.playerName === \"\" || this.state.playerName === \"board\" || this.state.gameCode === \"\"}\n                            onPress={() => this.props.navigation.navigate('GameScreen', { playerName: this.state.playerName, gameName: this.state.selectedGame, gameCode: this.state.gameCode, password: this.state.password })}\n                        />\n                    </View>\n                </KeyboardAwareScrollView>\n            </SafeAreaView>);\n    }\n}\n","// @ts-ignore\r\nimport { StyleSheet, Dimensions, useWindowDimensions } from 'react-native';\r\n\r\nexport function WIDTH(scale_pct?: number) {\r\n    if (scale_pct === null || scale_pct === undefined) { return undefined; }\r\n    return scale_pct + \"%\";\r\n    // return useWindowDimensions().width * scale_pct / 100;\r\n}\r\nexport function HEIGHT(scale_pct?: number) {\r\n    if (scale_pct === null || scale_pct === undefined) { return undefined; }\r\n    return scale_pct + \"%\";\r\n    // return useWindowDimensions().height * scale_pct / 100;\r\n}\r\nexport function MIN_WIDTH_HEIGHT(scale_pct?: number) {\r\n    return Math.min(Dimensions.get('window').width, Dimensions.get('window').height) * scale_pct / 100;\r\n    // return Math.min(useWindowDimensions().height, useWindowDimensions().width) * scale_pct / 100;\r\n}\r\n\r\nexport function RANGE(lo: number, hi: number, len: number) {\r\n    return new Array<number>(len).fill(null).map((_, i) => lo + i * (hi - lo) / (len - 1));\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mat: {\r\n        flex: 1,\r\n        backgroundColor: \"#5aa57c\",\r\n    },\r\n    mat_strips: {\r\n        backgroundColor: \"#458779\",\r\n        height: \"4%\",\r\n        position: \"absolute\",\r\n    },\r\n    mat_strip_circle: {\r\n        backgroundColor: \"#458779\",\r\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\r\n        width: Dimensions.get('window').width * 0.07,\r\n        height: Dimensions.get('window').width * 0.07,\r\n        position: \"absolute\",\r\n    },\r\n    mat_card: {\r\n        position: \"absolute\",\r\n        backgroundColor: \"#4ca68a\",\r\n        borderColor: \"#448c72\",\r\n        borderWidth: 3,\r\n        borderRadius: 15,\r\n        width: \"10%\",\r\n        height: \"20%\",\r\n        paddingHorizontal: \"5%\",\r\n        paddingTop: \"5%\",\r\n        paddingBottom: \"2%\",\r\n    },\r\n    mat_discard_pile: {\r\n        position: \"relative\",\r\n        backgroundColor: \"rgba(89,90,79,0.5)\",\r\n        flex: 1,\r\n        borderRadius: 15,\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n    },\r\n    mat_card_glow: {\r\n        shadowColor: \"gold\",\r\n        shadowRadius: 15,\r\n        shadowOpacity: 0.6\r\n    },\r\n    mat_grey_cover: {\r\n        backgroundColor: \"#595a4f\",\r\n        right: \"2%\",\r\n        width: \"11%\",\r\n        height: \"65%\",\r\n        top: \"20%\",\r\n        position: \"absolute\",\r\n    },\r\n    mat_goods_token_track: {\r\n        position: \"absolute\",\r\n        backgroundColor: \"#5aa57c\",\r\n        borderColor: \"#448c72\",\r\n        borderWidth: 5,\r\n        right: \"10%\",\r\n        height: Dimensions.get('window').width * 0.06,\r\n        width: \"17%\",\r\n        borderRadius: Math.round(Dimensions.get('window').height) * 0.1 / 2,\r\n    },\r\n    mat_bonus_token_track: {\r\n        position: \"absolute\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"gold\",\r\n        borderWidth: 3,\r\n        right: \"3%\",\r\n        width: Dimensions.get('window').width * 0.06,\r\n        height: Dimensions.get('window').width * 0.06,\r\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\r\n    },\r\n    card: {\r\n        position: \"absolute\",\r\n        width: \"10%\",\r\n        height: \"20%\",\r\n        // width: Dimensions.get('window').width * 0.1,\r\n        // height: Dimensions.get('window').width * 0.2,\r\n        borderWidth: 1,\r\n        borderRadius: 15,\r\n        shadowColor: \"black\",\r\n        shadowRadius: 3,\r\n        shadowOffset: { width: 0, height: 0 },\r\n        shadowOpacity: 0.6,\r\n        backgroundColor: \"white\",\r\n        padding: \"6%\",\r\n        paddingTop: \"7%\",\r\n        paddingBottom: \"3%\",\r\n    },\r\n    token: {\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        shadowColor: \"black\",\r\n        shadowRadius: 3,\r\n        shadowOffset: { width: 0, height: 0 },\r\n        shadowOpacity: 1,\r\n        overflow: \"hidden\",\r\n        borderRadius: Math.round(Dimensions.get('window').width + Dimensions.get('window').height) / 2,\r\n        width: Dimensions.get('window').width * 0.06,\r\n        height: Dimensions.get('window').width * 0.06,\r\n        position: \"absolute\",\r\n    },\r\n    buttonPanel: {\r\n        position: \"absolute\",\r\n        left: \"17%\",\r\n        height: \"4.5%\",\r\n        width: \"54%\",\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n    },\r\n    goodsTokenTrack: {\r\n        top: 20,\r\n        bottom: 76.7,\r\n    },\r\n    bonusTokenTrack: {\r\n        top: 30,\r\n        bottom: 67,\r\n    }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport { StyleProp, ViewStyle, View, Image, ImageBackground, Text, Dimensions, TouchableOpacity, GestureResponderEvent } from \"react-native\";\r\nimport styles, { HEIGHT, WIDTH, MIN_WIDTH_HEIGHT } from \"./styles\";\r\n\r\n\r\nexport const Card: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, type: string, count?: number, selected?: boolean, isSelectable?: boolean, disabled?: boolean, onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\r\n    const cardTypeToImage = {\r\n        'camel': require('./camel_card.png'),\r\n        'cloth': require('./cloth_card.png'),\r\n        'cover': require('./cover_card.png'),\r\n        'diamond': require('./diamond_card.png'),\r\n        'gold': require('./gold_card.png'),\r\n        'leather': require('./leather_card.png'),\r\n        'silver': require('./silver_card.png'),\r\n        'spice': require('./spice_card.png'),\r\n    };\r\n\r\n    const RootElement: React.FunctionComponent<{ style: StyleProp<ViewStyle>; }> = (rootProps) => {\r\n        return props.isSelectable ?\r\n            <TouchableOpacity style={rootProps.style} onPress={props.onPress}>{rootProps.children}</TouchableOpacity> :\r\n            <View style={rootProps.style}>{rootProps.children}</View>;\r\n    };\r\n\r\n    return <RootElement style={[styles.card, {\r\n        top: HEIGHT(props.top),\r\n        bottom: HEIGHT(props.bottom),\r\n        left: WIDTH(props.left),\r\n        right: WIDTH(props.right),\r\n    },\r\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }\r\n    ]}>\r\n        <ImageBackground source={cardTypeToImage[props.type]} style={{ width: \"100%\", height: \"100%\" }}>\r\n            {props.count && <Text style={{\r\n                fontSize: 70,\r\n                textAlign: \"center\",\r\n                height: \"100%\",\r\n                color: \"white\",\r\n                fontWeight: \"800\",\r\n                textShadowRadius: 10,\r\n                textShadowColor: \"black\",\r\n                top: \"26%\",\r\n            }}>{props.count}</Text>}\r\n            <View></View>\r\n            {props.selected && <Text style={[{\r\n                textAlign: \"center\",\r\n                textAlignVertical: \"center\",\r\n            } as {\r\n                textAlign: \"center\",\r\n                textAlignVertical: \"center\";\r\n            }, {\r\n                fontSize: MIN_WIDTH_HEIGHT(2),\r\n                color: \"green\",\r\n                left: \"4%\",\r\n                backgroundColor: \"white\",\r\n                width: \"25%\",\r\n                top: \"4%\",\r\n                height: \"16%\",\r\n                lineHeight: 23.5,\r\n                borderRadius: MIN_WIDTH_HEIGHT(1.5),\r\n                overflow: \"hidden\",\r\n                fontWeight: \"800\",\r\n                borderWidth: 3,\r\n                borderColor: \"green\",\r\n                position: \"absolute\",\r\n            }]}>✓</Text>}\r\n        </ImageBackground>\r\n        {/* {!props.disabled && <View style={[styles.card, {\r\n            top: HEIGHT(props.top),\r\n            bottom: HEIGHT(props.bottom),\r\n            left: WIDTH(props.left),\r\n            right: WIDTH(props.right),\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        }]}></View>} */}\r\n    </RootElement>;\r\n};\r\n\r\n\r\nexport const Coin: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, value: number; }> = (props) => {\r\n    return <View style={[styles.token, {\r\n        top: HEIGHT(props.top),\r\n        bottom: HEIGHT(props.bottom),\r\n        left: WIDTH(props.left),\r\n        right: WIDTH(props.right),\r\n        width: Dimensions.get('window').width * 0.08,\r\n        height: Dimensions.get('window').width * 0.08,\r\n    },\r\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]\r\n    }>\r\n        <ImageBackground source={require('./coin.png')} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <Text style={{\r\n                color: \"white\", position: \"relative\", fontSize: 60, top: \"17%\", left: \"0%\", fontWeight: \"800\", textAlign: \"center\",\r\n                textShadowRadius: 10,\r\n                textShadowColor: \"black\",\r\n            }}>{props.value}</Text>\r\n        </ImageBackground>\r\n    </View>;\r\n};\r\n\r\nexport const Token: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, right?: number, flip?: boolean, type: string, value?: number; }> = (props) => {\r\n    const tokenTypeToImage = {\r\n        'bonus_3': require('./bonus_3_token.png'),\r\n        'bonus_4': require('./bonus_4_token.png'),\r\n        'bonus_5': require('./bonus_5_token.png'),\r\n        'camel': require('./camel_token.png'),\r\n        'cloth': require('./cloth_token.png'),\r\n        'diamond': require('./diamond_token.png'),\r\n        'gold': require('./gold_token.png'),\r\n        'leather': require('./leather_token.png'),\r\n        'seal_of_excellence': require('./seal_of_excellence.png'),\r\n        'silver': require('./silver_token.png'),\r\n        'spice': require('./spice_token.png'),\r\n        'coin': require('./coin.png'),\r\n    };\r\n\r\n    return <View style={[styles.token, {\r\n        top: HEIGHT(props.top),\r\n        bottom: HEIGHT(props.bottom),\r\n        left: WIDTH(props.left),\r\n        right: WIDTH(props.right),\r\n    },\r\n    props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]}>\r\n        <ImageBackground source={tokenTypeToImage[props.type]} style={{ width: \"100%\", height: \"100%\" }}>\r\n            {props.type !== 'coin' && props.value !== undefined && props.value !== null && props.value >= 0 && [\r\n                <Text style={{ color: \"white\", position: \"relative\", top: \"3%\", left: \"44%\", fontWeight: \"800\" }}>{props.value}</Text>,\r\n                <Text style={{ color: \"white\", position: \"relative\", top: \"-27%\", left: \"-36.5%\", fontWeight: \"800\", transform: [{ rotateZ: \"-90deg\" }] }}>{props.value}</Text>,\r\n                <Text style={{ color: \"white\", position: \"relative\", top: \"33%\", left: \"-44%\", fontWeight: \"800\", transform: [{ rotateZ: \"-180deg\" }] }}>{props.value}</Text>,\r\n                <Text style={{ color: \"white\", position: \"relative\", top: \"19%\", left: \"36.4%\", fontWeight: \"800\", transform: [{ rotateZ: \"-270deg\" }] }}>{props.value}</Text>]\r\n            }\r\n            {props.type === 'coin' && props.value >= 0 && <Text style={{\r\n                color: \"white\", position: \"absolute\", fontSize: 40, top: \"19%\", left: \"35%\", fontWeight: \"800\", textAlign: \"center\",\r\n                textShadowRadius: 10,\r\n                textShadowColor: \"black\",\r\n            }}>{props.value}</Text>}\r\n        </ImageBackground>\r\n    </View >;\r\n};\r\n\r\nexport const Button: React.FunctionComponent<{ flip?: boolean, title: string, disabled?: boolean, onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\r\n\r\n    const RootElement: React.FunctionComponent<{ style: StyleProp<ViewStyle>; }> = (rootProps) => {\r\n        return !props.disabled ?\r\n            <TouchableOpacity style={rootProps.style} onPress={props.onPress}>{rootProps.children}</TouchableOpacity> :\r\n            <View style={rootProps.style}>{rootProps.children}</View>;\r\n    };\r\n\r\n\r\n    return <RootElement\r\n        style={{\r\n            backgroundColor: props.disabled ? \"grey\" : \"red\",\r\n            flex: 1,\r\n            display: \"flex\",\r\n            borderRadius: 30,\r\n            margin: 5,\r\n        }}\r\n    >\r\n        <Text style={{\r\n            flex: 1,\r\n            color: \"white\",\r\n            fontWeight: \"800\",\r\n            fontSize: 20,\r\n            textAlign: \"center\",\r\n            textAlignVertical: \"center\",\r\n            borderWidth: 3,\r\n            borderRadius: 12,\r\n            padding: 2,\r\n            borderColor: 'black',\r\n        }}>\r\n            {props.title}\r\n        </Text>\r\n    </RootElement>;\r\n};\r\n\r\nexport function renderCard(type: string, isSelected = false, style: StyleProp<ViewStyle> = false) {\r\n    const cardTypeToImage = {\r\n        'camel': require('./camel_card.png'),\r\n        'cloth': require('./cloth_card.png'),\r\n        'cover': require('./cover_card.png'),\r\n        'diamond': require('./diamond_card.png'),\r\n        'gold': require('./gold_card.png'),\r\n        'leather': require('./leather_card.png'),\r\n        'silver': require('./silver_card.png'),\r\n        'spice': require('./spice_card.png'),\r\n    };\r\n\r\n    return <View style={[styles.card, style]}>\r\n        <Image source={cardTypeToImage[type]} style={{ resizeMode: \"stretch\", width: \"100%\", height: \"100%\" }} />\r\n        {isSelected && <Text style={[{\r\n            textAlign: \"center\",\r\n            textAlignVertical: \"center\",\r\n        } as {\r\n            textAlign: \"center\",\r\n            textAlignVertical: \"center\";\r\n        }, {\r\n            fontSize: MIN_WIDTH_HEIGHT(5),\r\n            color: \"green\",\r\n            left: \"4%\",\r\n            backgroundColor: \"white\",\r\n            width: \"25%\",\r\n            top: \"4%\",\r\n            height: \"16%\",\r\n            lineHeight: 23.5,\r\n            borderRadius: MIN_WIDTH_HEIGHT(4),\r\n            overflow: \"hidden\",\r\n            fontWeight: \"800\",\r\n            borderWidth: 3,\r\n            borderColor: \"green\",\r\n            position: \"absolute\",\r\n        }]}>✓</Text>}\r\n    </View >;\r\n}","import React from 'react';\r\nimport { View, Text, SafeAreaView, ScrollView, Dimensions, TouchableOpacity } from 'react-native';\r\nimport { ScreenOrientation } from 'expo';\r\nimport { renderCard } from './utils';\r\n\r\ntype Props = {\r\n    onAction(action: any): Promise<void>;\r\n    onBack(): void;\r\n};\r\n\r\ntype State = {\r\n    hand: string[],\r\n    handIsSelected: boolean[],\r\n    displayText: string,\r\n};\r\n\r\nexport default class JaipurHand extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hand: [],\r\n            handIsSelected: [],\r\n            displayText: \"Waiting for a new game\",\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        await ScreenOrientation.unlockAsync();\r\n    }\r\n\r\n    updateHand(hand: any) {\r\n        this.setState(hand);\r\n    }\r\n\r\n    renderHand() {\r\n        return this.state.hand.map((card, i) => <TouchableOpacity onPress={() => this.props.onAction({ type: \"select-hand-card\", index: i })}>{renderCard(card, this.state.handIsSelected[i], {\r\n            position: undefined,\r\n            flex: 1,\r\n            height: Dimensions.get('window').height * 0.2,\r\n            width: Dimensions.get('window').height * 0.4,\r\n            borderWidth: 1,\r\n            borderRadius: 15,\r\n            shadowColor: \"black\",\r\n            shadowRadius: 3,\r\n            shadowOffset: { width: 0, height: 0 },\r\n            shadowOpacity: 0.6,\r\n            backgroundColor: \"white\",\r\n            padding: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            marginHorizontal: 5,\r\n        })}</TouchableOpacity>);\r\n    }\r\n\r\n    render() {\r\n        return <SafeAreaView style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            backgroundColor: \"#5aa57c\",\r\n        }}>\r\n            <View style={{ flex: 3 }}>\r\n                <ScrollView style={{ flex: 1, display: \"flex\", flexDirection: \"row\", marginVertical: 20 }} horizontal={true}>\r\n                    {this.renderHand()}\r\n                </ScrollView>\r\n            </View>\r\n            <View style={{ flex: 1, display: \"flex\" }}>\r\n                <Text style={{ flex: 1, textAlign: \"center\", lineHeight: 80, fontSize: 35, color: \"white\", textShadowColor: \"black\", textShadowRadius: 10, }}>{this.state.displayText}</Text>\r\n            </View>\r\n        </SafeAreaView>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { View, Image, Text } from \"react-native\";\r\nimport styles, { WIDTH, HEIGHT, RANGE } from \"./styles\";\r\n\r\nconst BoardMapStrip: React.FunctionComponent<{ width: number, top?: number, bottom?: number; }> = (props) => {\r\n    return <View style={\r\n        [styles.mat_strips, {\r\n            width: WIDTH(props.width),\r\n            top: HEIGHT(props.top),\r\n            bottom: HEIGHT(props.bottom),\r\n        }]}>{props.children}</View>;\r\n};\r\n\r\nconst BoardMapStripCircle: React.FunctionComponent<{ top?: number, bottom?: number, left?: number; }> = (props) => {\r\n    return <View style={\r\n        [styles.mat_strip_circle, {\r\n            top: HEIGHT(props.top),\r\n            bottom: HEIGHT(props.bottom),\r\n            left: WIDTH(props.left),\r\n        }]}>{props.children}</View>;\r\n};\r\n\r\nconst BoardMatCard: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, glow?: boolean; }> = (props = { glow: false }) => {\r\n    return <View style={[styles.mat_card, {\r\n        top: HEIGHT(props.top),\r\n        bottom: HEIGHT(props.bottom),\r\n        left: WIDTH(props.left),\r\n    },\r\n    props.glow && styles.mat_card_glow,\r\n    ]}>{props.children}</View>;\r\n};\r\n\r\nconst BoardCamel: React.FunctionComponent<{ top?: number, bottom?: number, left?: number, flip?: boolean; }> = (props = { flip: false }) => {\r\n    return <Image source={require('./camel-char.png')}\r\n        style={\r\n            [{\r\n                position: \"absolute\",\r\n                height: \"5%\",\r\n                width: \"5%\",\r\n                opacity: 0.2,\r\n                resizeMode: \"stretch\",\r\n                top: HEIGHT(props.top),\r\n                bottom: HEIGHT(props.bottom),\r\n                left: WIDTH(props.left),\r\n            },\r\n            props.flip && { transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] }]\r\n        } />;\r\n};\r\n\r\nconst BoardGoodsTokenTrack: React.FunctionComponent<{ top: number; }> = (props) => {\r\n    return <View style={[styles.mat_goods_token_track, { top: HEIGHT(props.top) }]} />;\r\n};\r\n\r\nconst BoardBonusTokenTrack: React.FunctionComponent<{ top: number; }> = (props) => {\r\n    return <View style={[styles.mat_bonus_token_track, { top: HEIGHT(props.top) }]} />;\r\n};\r\n\r\nexport default function renderBoardMat() {\r\n    const renderMatStrips = () => {\r\n        return [\r\n            <BoardMapStrip width={100} top={7} />,\r\n            <BoardMapStrip width={100} bottom={7} />,\r\n            <BoardMapStrip width={65} top={20} />,\r\n            <BoardMapStrip width={65} bottom={20} />,\r\n\r\n            RANGE(39, 55, 3).map(left => [\r\n                <BoardMapStripCircle top={4} left={left} />,\r\n                <BoardMapStripCircle bottom={4} left={left} />\r\n            ]),\r\n        ];\r\n    };\r\n\r\n    const renderGreyMat = () => {\r\n        return <View style={styles.mat_grey_cover}></View>;\r\n    };\r\n\r\n    const goodsTokenTrackTop = styles.goodsTokenTrack.top;\r\n    const goodsTokenTrackBottom = styles.goodsTokenTrack.bottom;\r\n    const bonusTokenTrackTop = styles.bonusTokenTrack.top;\r\n    const bonusTokenTrackBottom = styles.bonusTokenTrack.bottom;\r\n\r\n    return [\r\n        renderMatStrips(),\r\n\r\n        <BoardCamel left={40} top={6.5} flip />,\r\n        RANGE(1, 11.5, 3).map(left => <BoardCamel left={left} top={13} flip />),\r\n        RANGE(27.5, 32.75, 2).map(left => <BoardCamel left={left} top={13} flip />),\r\n\r\n        <BoardCamel left={40} bottom={6.5} />,\r\n        RANGE(1, 11.5, 3).map(left => <BoardCamel left={left} bottom={13} />),\r\n        RANGE(27.5, 32.75, 2).map(left => <BoardCamel left={left} bottom={13} />),\r\n\r\n        <BoardMatCard left={5} top={30}>\r\n            <View style={[styles.mat_discard_pile]}>\r\n                <Text style={\r\n                    {\r\n                        transform: [{ rotateZ: \"-90deg\" }],\r\n                        top: \"38%\",\r\n                        fontSize: 35,\r\n                        color: \"rgba(255, 215, 0, 0.2)\",\r\n                        shadowOpacity: 1,\r\n                        shadowColor: \"white\",\r\n                        shadowOffset: { width: 0, height: 0 }\r\n                    }\r\n                }>Discard</Text>\r\n            </View>\r\n        </BoardMatCard>,\r\n        <BoardMatCard left={5} bottom={30} />,\r\n        <BoardMatCard left={17} top={5} />,\r\n        <BoardMatCard left={17} bottom={5} />,\r\n\r\n        RANGE(17, 61, 5).map(left => <BoardMatCard left={left} top={42} glow />),\r\n\r\n        renderGreyMat(),\r\n        RANGE(goodsTokenTrackTop, goodsTokenTrackBottom, 6).map(top => <BoardGoodsTokenTrack top={top} />),\r\n        RANGE(bonusTokenTrackTop, bonusTokenTrackBottom, 4).map(top => <BoardBonusTokenTrack top={top} />),\r\n    ];\r\n}\r\n","import React from 'react';\r\nimport { View, SafeAreaView } from 'react-native';\r\n\r\nimport styles, { HEIGHT, WIDTH } from './styles';\r\nimport { Card, Coin, Token, Button } from './utils';\r\nimport renderBoardMat from './renderBoardMat';\r\n\r\ntype Props = {\r\n    onAction(action: any): Promise<void>;\r\n    onBack(): void;\r\n};\r\n\r\ntype PlayerState = {\r\n    sealsOfExcellence: number,\r\n    camels: number,\r\n    hasCamelToken: boolean,\r\n    rupees: number,\r\n    goodsTokens: {\r\n        diamond: number[],\r\n        gold: number[],\r\n        silver: number[],\r\n        cloth: number[],\r\n        spice: number[],\r\n        leather: number[],\r\n    },\r\n    bonusTokens: {\r\n        bonus_3: number[],\r\n        bonus_4: number[],\r\n        bonus_5: number[],\r\n    },\r\n};\r\n\r\ntype State = {\r\n    playerStates: [PlayerState, PlayerState],\r\n    market: [string, string, string, string, string],\r\n    marketIsSelected: [boolean, boolean, boolean, boolean, boolean],\r\n    marketIsSelectable: [boolean, boolean, boolean, boolean, boolean],\r\n    topDiscard: string,\r\n    drawPileHasCards: boolean,\r\n    goodsTokens: {\r\n        diamond: number[],\r\n        gold: number[],\r\n        silver: number[],\r\n        cloth: number[],\r\n        spice: number[],\r\n        leather: number[],\r\n    },\r\n    bonusTokens: {\r\n        bonus_3: number,\r\n        bonus_4: number,\r\n        bonus_5: number,\r\n    },\r\n    camelToken: boolean,\r\n    currentPlayerIndex: number,\r\n    buttons: [string, string, boolean][],\r\n\r\n    players: string[],\r\n};\r\n\r\nexport default class JaipurBoard extends React.Component<Props, State>{\r\n    goodsTokenTrackTop: number;\r\n    goodsTokenTrackBottom: number;\r\n    bonusTokenTrackTop: number;\r\n    bonusTokenTrackBottom: number;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.goodsTokenTrackTop = 20;\r\n        this.goodsTokenTrackBottom = 76.7;\r\n        this.bonusTokenTrackTop = 30;\r\n        this.bonusTokenTrackBottom = 67;\r\n\r\n        // this.state = {\r\n        //     playerStates: [\r\n        //         {\r\n        //             sealsOfExcellence: 2,\r\n        //             camels: 4,\r\n        //             hasCamelToken: true,\r\n        //             rupees: 0,\r\n        //             goodsTokens: {\r\n        //                 diamond: [7],\r\n        //                 gold: [6],\r\n        //                 silver: [5],\r\n        //                 cloth: [1, 2, 2, 3, 3, 5],\r\n        //                 spice: [1, 2, 2, 3, 3, 5],\r\n        //                 leather: [1, 1, 1, 1, 1, 2, 3, 4],\r\n        //             },\r\n        //             bonusTokens: {\r\n        //                 bonus_3: [4, 5, 6],\r\n        //                 bonus_4: [],\r\n        //                 bonus_5: [],\r\n        //             }\r\n        //         },\r\n        //         {\r\n        //             sealsOfExcellence: 2,\r\n        //             camels: 5,\r\n        //             hasCamelToken: true,\r\n        //             rupees: 0,\r\n        //             goodsTokens: {\r\n        //                 diamond: [7],\r\n        //                 gold: [6],\r\n        //                 silver: [5],\r\n        //                 cloth: [1, 2, 2, 3, 3, 5],\r\n        //                 spice: [1, 2, 2, 3, 3, 5],\r\n        //                 leather: [1, 1, 1, 1, 1, 2, 3, 4],\r\n        //             },\r\n        //             bonusTokens: {\r\n        //                 bonus_3: [4, 5, 6],\r\n        //                 bonus_4: [],\r\n        //                 bonus_5: [],\r\n        //             }\r\n        //         }\r\n        //     ],\r\n        //     market: [\"diamond\", \"silver\", \"cloth\", \"leather\", \"spice\"],\r\n        //     marketIsSelected: [true, true, false, false, false],\r\n        //     marketIsSelectable: [true, true, true, true, true],\r\n        //     topDiscard: \"gold\",\r\n        //     drawPileHasCards: true,\r\n        //     goodsTokens: {\r\n        //         diamond: [5, 5, 5, 7, 7],\r\n        //         gold: [5, 5, 5, 6, 6],\r\n        //         silver: [5, 5, 5, 5, 5],\r\n        //         cloth: [1, 1, 2, 2, 3, 3, 5],\r\n        //         spice: [1, 1, 2, 2, 3, 3, 5],\r\n        //         leather: [1, 1, 1, 1, 1, 1, 2, 3, 4],\r\n        //     },\r\n        //     bonusTokens: {\r\n        //         bonus_3: 6,\r\n        //         bonus_4: 6,\r\n        //         bonus_5: 6,\r\n        //     },\r\n        //     camelToken: true,\r\n        //     currentPlayerIndex: -1,\r\n        //     buttons: [[\"start\", \"Start Game\"]],\r\n        // };\r\n\r\n        this.state = {\r\n            playerStates: [\r\n                {\r\n                    sealsOfExcellence: 0,\r\n                    camels: 0,\r\n                    hasCamelToken: false,\r\n                    rupees: 0,\r\n                    goodsTokens: {\r\n                        diamond: [],\r\n                        gold: [],\r\n                        silver: [],\r\n                        cloth: [],\r\n                        spice: [],\r\n                        leather: [],\r\n                    },\r\n                    bonusTokens: {\r\n                        bonus_3: [],\r\n                        bonus_4: [],\r\n                        bonus_5: [],\r\n                    }\r\n                },\r\n                {\r\n                    sealsOfExcellence: 0,\r\n                    camels: 0,\r\n                    hasCamelToken: false,\r\n                    rupees: 0,\r\n                    goodsTokens: {\r\n                        diamond: [],\r\n                        gold: [],\r\n                        silver: [],\r\n                        cloth: [],\r\n                        spice: [],\r\n                        leather: [],\r\n                    },\r\n                    bonusTokens: {\r\n                        bonus_3: [],\r\n                        bonus_4: [],\r\n                        bonus_5: [],\r\n                    }\r\n                },\r\n            ],\r\n            market: [null, null, null, null, null],\r\n            marketIsSelected: [false, false, false, false, false],\r\n            marketIsSelectable: [false, false, false, false, false],\r\n            topDiscard: null,\r\n            drawPileHasCards: false,\r\n            goodsTokens: {\r\n                diamond: [],\r\n                gold: [],\r\n                silver: [],\r\n                cloth: [],\r\n                spice: [],\r\n                leather: [],\r\n            },\r\n            bonusTokens: {\r\n                bonus_3: 0,\r\n                bonus_4: 0,\r\n                bonus_5: 0,\r\n            },\r\n            camelToken: false,\r\n            currentPlayerIndex: -1,\r\n            buttons: [[\"start\", \"Start Game\", false]],\r\n\r\n            players: [],\r\n        };\r\n    }\r\n\r\n    updateBoard(state: State) {\r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        const goodsTokenTrackTop = this.goodsTokenTrackTop;\r\n        const goodsTokenTrackBottom = this.goodsTokenTrackBottom;\r\n        const bonusTokenTrackTop = this.bonusTokenTrackTop;\r\n        const bonusTokenTrackBottom = this.bonusTokenTrackBottom;\r\n\r\n        const goodsTokenTrackOffsets = 1.38;\r\n\r\n        return <SafeAreaView style={styles.mat}>\r\n            {renderBoardMat()}\r\n\r\n            <View style={{ position: \"absolute\", top: \"50%\", transform: [{ rotateZ: \"-90deg\" }], left: \"-7.5%\", flexDirection: \"row\", width: \"20%\" }}>\r\n                <Button title=\"Back\" onPress={() => {\r\n                    this.props.onBack();\r\n                }} />\r\n                <Button title=\"Reset\" onPress={() => {\r\n                    this.props.onAction({ \"type\": \"reset\" });\r\n                }} />\r\n            </View>\r\n\r\n            {this.state.playerStates[0].sealsOfExcellence >= 1 && <Token type='seal_of_excellence' top={4.7} left={47.5} flip />}\r\n            {this.state.playerStates[0].sealsOfExcellence >= 2 && <Token type='seal_of_excellence' top={4.7} left={55.5} flip />}\r\n            {this.state.playerStates[1].sealsOfExcellence >= 1 && <Token type='seal_of_excellence' bottom={4.7} left={47.5} />}\r\n            {this.state.playerStates[1].sealsOfExcellence >= 2 && <Token type='seal_of_excellence' bottom={4.7} left={55.5} />}\r\n\r\n            {this.state.playerStates[0].hasCamelToken && <Token type='camel' top={4.7} left={39.5} flip />}\r\n            {this.state.playerStates[1].hasCamelToken && <Token type='camel' bottom={4.7} left={39.5} />}\r\n\r\n            {([\r\n                ['diamond', this.state.goodsTokens.diamond],\r\n                ['gold', this.state.goodsTokens.gold],\r\n                ['silver', this.state.goodsTokens.silver],\r\n                ['cloth', this.state.goodsTokens.cloth],\r\n                ['spice', this.state.goodsTokens.spice],\r\n                ['leather', this.state.goodsTokens.leather],\r\n            ] as [string, number[]][]).map(([type, tokens], i) =>\r\n                tokens.map((value, j) =>\r\n                    <Token type={type} value={value} top={goodsTokenTrackTop + i * (goodsTokenTrackBottom - goodsTokenTrackTop) / 5} left={84 - j * goodsTokenTrackOffsets} />))}\r\n\r\n            {this.state.drawPileHasCards && <Card type='cover' bottom={30} left={5} />}\r\n\r\n            {this.state.topDiscard !== null && <Card type={this.state.topDiscard} top={30} left={5} />}\r\n\r\n            {this.state.playerStates[0].camels > 0 && <Card type='camel' count={this.state.playerStates[0].camels} left={17} top={5} flip />}\r\n            {this.state.playerStates[1].camels > 0 && <Card type='camel' count={this.state.playerStates[1].camels} left={17} bottom={5} />}\r\n\r\n            {this.state.market.map((card, i) => card && <Card left={17 + 11 * i} top={42} type={card} selected={this.state.marketIsSelected[i]} isSelectable={this.state.marketIsSelectable[i]} onPress={() => this.props.onAction({ type: \"select-card\", index: i })} />)}\r\n\r\n            {new Array(this.state.bonusTokens.bonus_3).fill(null).map((_, i) => <Token type={\"bonus_3\"} top={bonusTokenTrackTop + 0.6 * i} right={3} />)}\r\n            {new Array(this.state.bonusTokens.bonus_4).fill(null).map((_, i) => <Token type={\"bonus_4\"} top={bonusTokenTrackTop + (bonusTokenTrackBottom - bonusTokenTrackTop) / 3 + 0.6 * i} right={3} />)}\r\n            {new Array(this.state.bonusTokens.bonus_5).fill(null).map((_, i) => <Token type={\"bonus_5\"} top={bonusTokenTrackTop + 2 * (bonusTokenTrackBottom - bonusTokenTrackTop) / 3 + 0.6 * i} right={3} />)}\r\n            {this.state.camelToken && <Token type={\"camel\"} top={bonusTokenTrackTop + 3 * (bonusTokenTrackBottom - bonusTokenTrackTop) / 3} right={3} />}\r\n\r\n            <Coin top={3.5} right={2} value={this.state.playerStates[0].rupees} flip />\r\n            <Coin bottom={3.5} right={2} value={this.state.playerStates[1].rupees} />\r\n\r\n            {[0, 1].map(playerIndex => {\r\n                return [...this.state.playerStates[playerIndex].goodsTokens.diamond.map(value => { return { type: \"diamond\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.gold.map(value => { return { type: \"gold\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.silver.map(value => { return { type: \"silver\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.cloth.map(value => { return { type: \"cloth\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.spice.map(value => { return { type: \"spice\", value }; }),\r\n                ...this.state.playerStates[playerIndex].goodsTokens.leather.map(value => { return { type: \"leather\", value }; }),\r\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_3.map(value => { return { type: \"coin\", value }; }),\r\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_4.map(value => { return { type: \"coin\", value }; }),\r\n                ...this.state.playerStates[playerIndex].bonusTokens.bonus_5.map(value => { return { type: \"coin\", value }; }),\r\n                ].map(({ type, value }, i) => {\r\n                    if (playerIndex === 0)\r\n                        return <Token type={type} value={value} top={4.7} left={83 - i * 0.8} flip />;\r\n                    else\r\n                        return <Token type={type} value={value} bottom={4.7} left={83 - i * 0.8} />;\r\n                });\r\n            })}\r\n\r\n            {\r\n                [0, 1].map(i => {\r\n                    const getButton = () => {\r\n                        if (this.state.currentPlayerIndex !== -1 && this.state.currentPlayerIndex !== i) {\r\n                            return;\r\n                        }\r\n                        return this.state.buttons.map(([action, title, disabled]) => {\r\n                            if (action === \"start\" && this.state.players.length !== 2)\r\n                                disabled = true;\r\n                            if (action === \"start\" && this.state.players.length > i) {\r\n                                title = title + \" (\" + this.state.players[i] + \")\";\r\n                            }\r\n                            return <Button title={title} disabled={disabled} onPress={() => {\r\n                                this.props.onAction({ \"type\": action });\r\n                            }} />;\r\n                        });\r\n                    };\r\n\r\n                    return <View style={[styles.buttonPanel, i == 0 ? { bottom: \"68%\", transform: [{ rotateX: \"180deg\" }, { rotateY: \"180deg\" }] } : { top: \"68%\" }]}>\r\n                        {getButton()}\r\n                    </View>;\r\n                })\r\n            }\r\n        </SafeAreaView>;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport BaseGameScreen, { GameScreenProps } from \"../BaseGameScreen\";\r\nimport JaipurHand from \"./JaipurHand\";\r\nimport JaipurBoard from \"./JaipurBoard\";\r\n\r\nexport default class JaipurScreen extends React.Component<GameScreenProps> implements BaseGameScreen {\r\n    board: React.RefObject<JaipurBoard>;\r\n    hand: React.RefObject<JaipurHand>;\r\n\r\n    constructor(props: GameScreenProps) {\r\n        super(props);\r\n        this.board = React.createRef();\r\n        this.hand = React.createRef();\r\n    }\r\n\r\n    updateScreen(content: any) {\r\n        if (this.props.playerName === \"board\") {\r\n            this.board.current.updateBoard(content);\r\n        } else {\r\n            this.hand.current.updateHand(content);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.playerName === \"board\") {\r\n            return <JaipurBoard ref={this.board} onAction={this.props.onAction} onBack={this.props.onBack} />;\r\n        } else {\r\n            return <JaipurHand ref={this.hand} onAction={this.props.onAction} onBack={this.props.onBack} />;\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { SafeAreaView, View, Text, StyleSheet, Dimensions, ViewProps, ImageBackground, StyleProp, ViewStyle, GestureResponderEvent } from 'react-native';\r\nimport Button from '../Button';\r\nimport BaseGameScreen, { GameScreenProps } from \"../BaseGameScreen\";\r\nimport { ScreenOrientation } from \"expo\";\r\nimport {\r\n    heightPercentageToDP as hp,\r\n    widthPercentageToDP as wp,\r\n} from 'react-native-responsive-screen';\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\ntype BoardCell = {\r\n    kind: string,\r\n    color?: string,\r\n    value?: string,\r\n    isSelectable?: boolean,\r\n};\r\n\r\ntype State = {\r\n    players: {\r\n        red: string[],\r\n        redCodemaster: string | null,\r\n        blue: string[],\r\n        blueCodemaster: string | null,\r\n    },\r\n    buttons: [string, string, boolean][],\r\n    playerNameDisplay: string,\r\n    displayText: string,\r\n    status: \"player-selection\" | \"board\" | \"none\" | \"game-over\",\r\n    board: BoardCell[][],\r\n};\r\n\r\nexport default class CodenamesScreen extends React.Component<GameScreenProps, State> implements BaseGameScreen<State> {\r\n    constructor(props: GameScreenProps) {\r\n        super(props);\r\n\r\n        // const board = new Array();\r\n        // for (let i = 0; i < 5; i++) {\r\n        //     const row = new Array<BoardCell>();\r\n        //     for (let j = 0; j < 1; j++) {\r\n        //         row.push({\r\n        //             kind: \"word\",\r\n        //             color: \"white\",\r\n        //             value: \"RABBIT\", isSelectable: true,\r\n        //         });\r\n        //     }\r\n        //     row.push({\r\n        //         kind: \"assasin\",\r\n        //         color: \"white\",\r\n        //         value: \"RABBIT\",\r\n        //     });\r\n        //     row.push({\r\n        //         kind: \"bystander\",\r\n        //         color: \"white\",\r\n        //         value: \"RABBIT\",\r\n        //     });\r\n        //     row.push({\r\n        //         kind: \"agent-blue\",\r\n        //         color: \"white\",\r\n        //         value: \"RABBIT\",\r\n        //     });\r\n        //     row.push({\r\n        //         kind: \"agent-red\",\r\n        //         color: \"white\",\r\n        //         value: \"RABBIT\",\r\n        //     });\r\n        //     board.push(row);\r\n        // }\r\n\r\n        // this.state = {\r\n        //     players: {\r\n        //         red: [\"Amol\", \"Anusha\", \"Bla Bla\"],\r\n        //         redCodemaster: \"Reddy\",\r\n        //         blue: [\"John\", \"Oliver\", \"Stephen Colbert\"],\r\n        //         blueCodemaster: \"Bluey\",\r\n        //     },\r\n        //     buttons: [\r\n        //         [\"Back\", \"back\", true],\r\n        //         [\"Become Codemaster\", \"become-codemaster\", true],\r\n        //         [\"Switch to Red Team\", \"become-codemaster\", true],\r\n        //     ],\r\n        //     displayText: \"You are Blue Team!\",\r\n        //     status: \"board\",\r\n        //     board,\r\n        // };\r\n\r\n        this.state = {\r\n            players: {\r\n                red: [],\r\n                redCodemaster: undefined,\r\n                blue: [],\r\n                blueCodemaster: undefined,\r\n            },\r\n            buttons: [],\r\n            playerNameDisplay: null,\r\n            displayText: \"Connecting to server...\",\r\n            status: \"none\",\r\n            board: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        await ScreenOrientation.unlockAsync();\r\n    }\r\n\r\n    updateScreen(content: any) {\r\n        this.setState(content);\r\n    }\r\n\r\n    renderPlayerSelection() {\r\n        const renderPlayerList = (team: string) => {\r\n            const teamName = (team == \"red\" ? \"Red\" : \"Blue\") + \" Team\";\r\n            const players = (team === \"red\" ? this.state.players.red : this.state.players.blue);\r\n            const codemaster = (team === \"red\" ? this.state.players.redCodemaster : this.state.players.blueCodemaster);\r\n\r\n            return <View style={{\r\n                flex: 3,\r\n                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n                borderRadius: 30,\r\n                margin: \"2%\",\r\n                padding: \"2%\",\r\n            }}>\r\n                <Text style={{\r\n                    textAlign: \"center\",\r\n                    color: team,\r\n                    fontSize: 30,\r\n                    textShadowColor: \"white\",\r\n                    textShadowRadius: 3,\r\n                    paddingVertical: \"2%\",\r\n                }}>{teamName}</Text>\r\n                <View style={{\r\n                    marginVertical: 8,\r\n                    borderBottomColor: '#737373',\r\n                    borderBottomWidth: 1,\r\n                }} />\r\n                <Text style={{\r\n                    fontSize: 20,\r\n                    color: \"white\",\r\n                }}>Codemaster: {codemaster}</Text>\r\n                <View style={{\r\n                    marginVertical: 8,\r\n                    borderBottomColor: '#737373',\r\n                    borderBottomWidth: 1,\r\n                }} />\r\n                {players.map(playerName => <Text style={{\r\n                    fontSize: 20,\r\n                    color: \"white\",\r\n                }}>{playerName}</Text>)}\r\n            </View>;\r\n        };\r\n\r\n        return [\r\n            renderPlayerList(\"red\"),\r\n            renderPlayerList(\"blue\"),\r\n        ];\r\n    }\r\n\r\n    renderBoard() {\r\n        const { width, height } = Dimensions.get('window');\r\n\r\n        // Use iPhone6 as base size which is 375 x 667\r\n        const baseWidth = 375;\r\n        const baseHeight = 667;\r\n\r\n        const scaleWidth = width / baseWidth;\r\n        const scaleHeight = height / baseHeight;\r\n        const scale = Math.min(scaleWidth, scaleHeight);\r\n\r\n        const scaledSize =\r\n            (size) => Math.ceil((size * scale));\r\n\r\n        const AspectView: React.FunctionComponent<ViewProps & { isSelectable?: boolean; onPress?: (event: GestureResponderEvent) => void; }> = (props) => {\r\n            const [layout, setLayout] = React.useState(null);\r\n\r\n            const { aspectRatio = 1, ...inputStyle } =\r\n                StyleSheet.flatten(props.style) || {};\r\n            const style = [inputStyle, { aspectRatio }];\r\n\r\n            if (layout) {\r\n                const { width = 0, height = 0 } = layout;\r\n                style.push({ width: height * aspectRatio, height });\r\n            }\r\n\r\n            // console.log(layout, style);\r\n\r\n            const RootElement: React.FunctionComponent<{ style?: StyleProp<ViewStyle>; onLayout?: (event: { nativeEvent: { layout: { x: number; y: number; width: number; height: number; }; }; }) => void; }> = (rootProps) => {\r\n                return props.isSelectable ?\r\n                    <TouchableOpacity style={rootProps.style} onPress={props.onPress} onLayout={props.onLayout}>{rootProps.children}</TouchableOpacity> :\r\n                    <View style={rootProps.style} onLayout={props.onLayout}>{rootProps.children}</View>;\r\n            };\r\n\r\n            return (\r\n                <RootElement\r\n                    {...props}\r\n                    style={[{\r\n                        height: hp(15),\r\n                        width: hp((500.0 / 345.0) * 14),\r\n                    }, style]}\r\n                    onLayout={({ nativeEvent: { layout } }) => { setLayout(layout); console.log(layout); }}\r\n                >{props.children}</RootElement>\r\n            );\r\n        };\r\n\r\n        const renderRow = (row, rowIndex) => {\r\n            return <View style={{\r\n                flex: 1,\r\n                display: \"flex\",\r\n                flexDirection: \"row\"\r\n            }}>\r\n                {row.map((cell, colIndex) => {\r\n                    const backgroundColor = (cell.kind === \"word\" ? \"#cebc9c\" : \"black\");\r\n\r\n                    return <View style={{\r\n                        flex: 1,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                    }}>\r\n                        <View style={{ flex: 1, marginVertical: hp(0.4), marginHorizontal: wp(0.4) }}>\r\n                            <AspectView style={{\r\n                                backgroundColor,\r\n                                borderColor: cell.color,\r\n                                shadowColor: cell.color,\r\n                                shadowOpacity: 1,\r\n                                shadowOffset: { width: 0, height: 0 },\r\n                                shadowRadius: 10,\r\n                                borderWidth: wp(0.25),\r\n                                aspectRatio: 500.0 / 345.0,\r\n                                flex: 1,\r\n                                borderRadius: wp(0.5)\r\n                            }} isSelectable={cell.isSelectable}\r\n                                onPress={() => {\r\n                                    this.props.onAction({ \"type\": \"card\", \"rowIndex\": rowIndex, \"colIndex\": colIndex });\r\n                                }}>\r\n                                {\r\n                                    (() => {\r\n                                        switch (cell.kind) {\r\n                                            case 'word':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    margin: wp(0.4),\r\n                                                    borderColor: \"#b3956d\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    backgroundColor: \"#d0b694\",\r\n                                                    borderRadius: wp(0.1),\r\n                                                    display: \"flex\",\r\n                                                    flexDirection: \"column\",\r\n                                                }}>\r\n                                                    <View style={{\r\n                                                        flex: 1,\r\n                                                    }}>\r\n                                                        <View style={{\r\n                                                            flex: 1,\r\n                                                            marginHorizontal: wp(0.2),\r\n                                                            borderBottomColor: \"#b3956d\",\r\n                                                            borderBottomWidth: wp(0.15),\r\n                                                        }}>\r\n                                                            <Text style={{\r\n                                                                flex: 1,\r\n                                                                color: \"#746653\",\r\n                                                                textAlign: \"right\",\r\n                                                                marginLeft: \"15%\",\r\n                                                                fontSize: scaledSize(11),\r\n                                                                fontStyle: \"italic\",\r\n                                                                fontWeight: \"800\",\r\n                                                                transform: [{ rotateZ: \"180deg\" }]\r\n                                                            }}\r\n                                                            >{cell.value}</Text>\r\n                                                        </View>\r\n                                                    </View>\r\n                                                    <View style={{\r\n                                                        flex: 1,\r\n                                                    }}>\r\n                                                        <View style={{\r\n                                                            flex: 1,\r\n                                                            alignItems: \"center\",\r\n                                                            flexDirection: \"row\",\r\n                                                            margin: wp(0.4),\r\n                                                            borderBottomLeftRadius: wp(0.5),\r\n                                                            borderBottomRightRadius: wp(0.5),\r\n                                                            backgroundColor: \"white\",\r\n                                                        }}>\r\n                                                            <Text style={{\r\n                                                                flex: 1,\r\n                                                                textAlign: \"center\",\r\n                                                                fontSize: scaledSize(14),\r\n                                                                fontWeight: \"800\",\r\n                                                            }}\r\n                                                            >{cell.value}</Text>\r\n                                                        </View>\r\n\r\n                                                    </View>\r\n                                                </View>;\r\n                                            case 'bystander':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    borderColor: \"#b3956d\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    borderRadius: wp(0.1),\r\n                                                }}>\r\n                                                    <ImageBackground source={require('./bystander.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\r\n                                                </View>;\r\n                                            case 'agent-red':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    borderColor: \"red\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    borderRadius: wp(0.1),\r\n                                                }}>\r\n                                                    <ImageBackground source={require('./agent-red.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\r\n                                                </View>;\r\n                                            case 'agent-blue':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    borderColor: \"blue\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    borderRadius: wp(0.1),\r\n                                                }}>\r\n                                                    <ImageBackground source={require('./agent-blue.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\r\n                                                </View>;\r\n                                            case 'assasin':\r\n                                                return <View style={{\r\n                                                    flex: 1,\r\n                                                    borderColor: \"black\",\r\n                                                    borderWidth: wp(0.15),\r\n                                                    borderRadius: wp(0.1),\r\n                                                }}>\r\n                                                    <ImageBackground source={require('./assasin.jpg')} style={{ width: \"100%\", height: \"100%\" }}></ImageBackground>\r\n                                                </View>;\r\n                                        }\r\n                                    })()\r\n                                }\r\n                            </AspectView>\r\n                        </View>\r\n                    </View>;\r\n                })}\r\n            </View>;\r\n        };\r\n\r\n        return <View style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            backgroundColor: \"#817264\",\r\n            margin: 20,\r\n            marginVertical: 5,\r\n            padding: 10,\r\n            // aspectRatio: 1,\r\n            // width: 0,\r\n        }}>\r\n            {this.state.board.map(renderRow)}\r\n        </View>;\r\n    }\r\n\r\n    render() {\r\n        return <SafeAreaView style={{\r\n            flex: 1,\r\n            backgroundColor: \"#446983\",\r\n        }}>\r\n            <View style={{ flex: 1, flexDirection: \"column\", display: \"flex\" }}>\r\n                <View style={{ flex: 2, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {this.state.buttons.map(([title, action, enabled]) => {\r\n                        return <Button title={title} disabled={!enabled} onPress={() => {\r\n                            if (action === \"back\") {\r\n                                this.props.onBack();\r\n                            } else {\r\n                                this.props.onAction({ \"type\": action });\r\n                            }\r\n                        }} />;\r\n                    })}\r\n                </View>\r\n                <View style={{ flex: 1, display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    {this.state.playerNameDisplay && <Text style={{\r\n                        flex: 1,\r\n                        textAlign: \"center\",\r\n                        color: \"white\",\r\n                        fontSize: Dimensions.get(\"window\").width * 0.02,\r\n                    }}>{this.state.playerNameDisplay}</Text>}\r\n                    <Text style={{\r\n                        flex: 1,\r\n                        textAlign: \"center\",\r\n                        color: \"white\",\r\n                        fontSize: Dimensions.get(\"window\").width * 0.02,\r\n                    }}>{this.state.displayText}</Text>\r\n                </View>\r\n                <View style={{ flex: 14, flexDirection: \"row\", display: \"flex\" }}>\r\n                    {\r\n                        (() => {\r\n                            switch (this.state.status) {\r\n                                case \"player-selection\":\r\n                                    return this.renderPlayerSelection();\r\n                                case \"board\":\r\n                                case \"game-over\":\r\n                                    return this.renderBoard();\r\n                                case \"none\":\r\n                                    return [];\r\n                            }\r\n                        })()\r\n                    }\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { SERVER_URI } from '../../config/constants';\r\nimport JaipurScreen from \"../../components/jaipur/JaipurScreen\";\r\nimport CodenamesScreen from \"../../components/codenames/CodenamesScreen\";\r\n\r\ntype Props = {\r\n    playerName: string,\r\n    gameCode: string,\r\n    gameName: string,\r\n    password: string,\r\n    onBack: () => void,\r\n};\r\n\r\nexport default class GameScreenImpl extends React.Component<Props> {\r\n    socket: SocketIOClient.Socket;\r\n    screen: React.RefObject<JaipurScreen>;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.screen = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socket = socketIOClient(SERVER_URI, {\r\n            query: {\r\n                playerName: this.props.playerName,\r\n                gameCode: this.props.gameCode,\r\n                gameName: this.props.gameName,\r\n                password: this.props.password,\r\n            },\r\n        });\r\n        this.socket.on(\"content\", (screen: any) => {\r\n            if (Object.keys(screen).length === 0) {\r\n                return;\r\n            }\r\n            this.screen.current.updateScreen(screen);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.socket.close();\r\n    }\r\n\r\n    onAction = async (action: any) => {\r\n        this.socket.emit(\"action\", action);\r\n    };\r\n\r\n    render() {\r\n        const Impl = (() => {\r\n            switch (this.props.gameName) {\r\n                case 'codenames':\r\n                    return CodenamesScreen;\r\n                case 'jaipur':\r\n                    return JaipurScreen;\r\n                // case 'sequence':\r\n                //     return SequenceBoard;\r\n                // case 'splendor':\r\n                //     return SplendorBoard;\r\n            }\r\n        })();\r\n        return <Impl\r\n            ref={this.screen}\r\n            playerName={this.props.playerName}\r\n            onAction={this.onAction}\r\n            onBack={this.props.onBack} />;\r\n    }\r\n};\r\n","import React from 'react';\nimport { RouteProp } from \"@react-navigation/native\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\n\nimport { RootStackParamList } from \"../../../App\";\nimport GameScreenImpl from \"./GameScreenImpl\";\n\ntype GameScreenSceneNavigationProp = StackNavigationProp<RootStackParamList, 'GameScreen'>;\ntype GameScreenSceneRouteProp = RouteProp<RootStackParamList, 'GameScreen'>;\ntype GameScreenProps = { navigation: GameScreenSceneNavigationProp, route: GameScreenSceneRouteProp; };\n\nconst GameScreen: React.FunctionComponent<GameScreenProps> = (props) => {\n    return <GameScreenImpl\n        playerName={props.route.params.playerName}\n        gameCode={props.route.params.gameCode}\n        gameName={props.route.params.gameName}\n        password={props.route.params.password}\n        onBack={props.navigation.goBack} />;\n};\n\nexport default GameScreen;","import 'react-native-gesture-handler';\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from \"./app/scenes/Home\";\nimport GameScreen from \"./app/scenes/GameScreen\";\n\nconsole.disableYellowBox = true;\n\nexport type RootStackParamList = {\n  Home: undefined;\n  GameScreen: { playerName: string, gameName: string; gameCode: string; password: string; };\n};\nconst RootStack = createStackNavigator<RootStackParamList>();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <NavigationContainer>\n        <RootStack.Navigator headerMode=\"screen\">\n          <RootStack.Screen name=\"Home\" component={Home} options={{ headerTitle: \"All A-Board\" }} />\n          <RootStack.Screen name=\"GameScreen\" component={GameScreen} options={{ headerShown: false }} />\n        </RootStack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/bonus_3_token.b7d6048e.png\";","module.exports = __webpack_public_path__ + \"static/media/bonus_4_token.9dbb865c.png\";","module.exports = __webpack_public_path__ + \"static/media/bonus_5_token.0b15f02d.png\";","module.exports = __webpack_public_path__ + \"static/media/camel_token.f1239e82.png\";","module.exports = __webpack_public_path__ + \"static/media/cloth_token.b45112dd.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond_token.eb1081d0.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_token.31dad298.png\";","module.exports = __webpack_public_path__ + \"static/media/leather_token.027cb7e8.png\";","module.exports = __webpack_public_path__ + \"static/media/seal_of_excellence.c17ff76a.png\";","module.exports = __webpack_public_path__ + \"static/media/silver_token.404ac8cc.png\";","module.exports = __webpack_public_path__ + \"static/media/spice_token.9a70cbc9.png\";","module.exports = __webpack_public_path__ + \"static/media/camel-char.87d3d7f8.png\";","module.exports = __webpack_public_path__ + \"static/media/bystander.75a5f2bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/agent-red.211f9441.jpg\";","module.exports = __webpack_public_path__ + \"static/media/agent-blue.5e1826cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/assasin.411b1958.jpg\";"],"sourceRoot":""}